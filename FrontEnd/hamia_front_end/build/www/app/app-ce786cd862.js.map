{"version":3,"sources":["app/app.module.js","app/services/user/user.service.js","app/services/profiles/profile.service.js","app/services/profiles/page-ribbon.directive.js","app/services/general/reporter.services.js","app/services/general/product.services.js","app/services/general/meansuer.services.js","app/services/general/location.service.js","app/services/general/industry.services.js","app/services/general/crawl.services.js","app/services/general/category.services.js","app/services/auth/register.service.js","app/services/auth/principal.service.js","app/services/auth/password-reset-init.service.js","app/services/auth/password-reset-finish.service.js","app/services/auth/password.service.js","app/services/auth/has-authority.directive.js","app/services/auth/has-any-authority.directive.js","app/services/auth/auth.service.js","app/services/auth/auth.jwt.service.js","app/services/auth/activate.service.js","app/services/auth/account.service.js","app/layouts/navbar/navbar.controller.js","app/layouts/navbar/active-menu.directive.js","app/layouts/error/error.state.js","app/home/home.state.js","app/home/home.controller.js","app/entities/store/store.state.js","app/entities/store/store.service.js","app/entities/store/store.controller.js","app/entities/legislation/legislation.state.js","app/entities/legislation/legislation.service.js","app/entities/legislation/legislation.detail.controller.js","app/entities/legislation/legislation.controller.js","app/entities/entity.state.js","app/components/util/truncate-words.filter.js","app/components/util/truncate-characters.filter.js","app/components/util/sort-by.directive.js","app/components/util/sort.directive.js","app/components/util/parse-links.service.js","app/components/util/pagination-util.service.js","app/components/util/jhi-item-count.directive.js","app/components/util/error.constants.js","app/components/util/date-util.service.js","app/components/util/data-util.service.js","app/components/util/capitalize.filter.js","app/components/util/base64.service.js","app/components/login/login.service.js","app/components/login/login.controller.js","app/components/language/language.service.js","app/components/language/language.filter.js","app/components/language/language.controller.js","app/components/language/language.constants.js","app/components/form/show-validation.directive.js","app/components/form/pagination.constants.js","app/components/form/minbytes.directive.js","app/components/form/maxbytes.directive.js","app/components/alert/alert-error.directive.js","app/components/alert/alert.service.js","app/components/alert/alert.directive.js","app/blocks/interceptor/notification.interceptor.js","app/blocks/interceptor/errorhandler.interceptor.js","app/blocks/interceptor/auth-expired.interceptor.js","app/blocks/interceptor/auth.interceptor.js","app/blocks/handlers/translation.handler.js","app/blocks/handlers/state.handler.js","app/blocks/config/uib-pagination.config.js","app/blocks/config/uib-pager.config.js","app/blocks/config/translation-storage.provider.js","app/blocks/config/translation.config.js","app/blocks/config/localstorage.config.js","app/blocks/config/http.config.js","app/blocks/config/compile.config.js","app/blocks/config/alert.config.js","app/app.state.js","app/app.constants.js","app/admin/user-management/user-management-dialog.controller.js","app/admin/user-management/user-management-detail.controller.js","app/admin/user-management/user-management-delete-dialog.controller.js","app/admin/user-management/user-management.state.js","app/admin/user-management/user-management.controller.js","app/admin/metrics/metrics.state.js","app/admin/metrics/metrics.service.js","app/admin/metrics/metrics.modal.controller.js","app/admin/metrics/metrics.controller.js","app/admin/logs/logs.state.js","app/admin/logs/logs.service.js","app/admin/logs/logs.controller.js","app/admin/health/health.state.js","app/admin/health/health.service.js","app/admin/health/health.modal.controller.js","app/admin/health/health.controller.js","app/admin/docs/docs.state.js","app/admin/configuration/configuration.state.js","app/admin/configuration/configuration.service.js","app/admin/configuration/configuration.controller.js","app/admin/audits/audits.state.js","app/admin/audits/audits.service.js","app/admin/audits/audits.controller.js","app/admin/admin.state.js","app/account/settings/settings.state.js","app/account/settings/settings.controller.js","app/account/reset/request/reset.request.state.js","app/account/reset/request/reset.request.controller.js","app/account/reset/finish/reset.finish.state.js","app/account/reset/finish/reset.finish.controller.js","app/account/register/register.state.js","app/account/register/register.controller.js","app/account/password/password-strength-bar.directive.js","app/account/password/password.state.js","app/account/password/password.controller.js","app/account/activate/activate.state.js","app/account/activate/activate.controller.js","app/account/account.state.js","app/app.js"],"names":["run","stateHandler","translationHandler","initialize","angular","module","$inject","User","$resource","service","query","method","isArray","get","transformResponse","data","fromJson","save","update","delete","factory","ProfileService","$http","getProfileInfo","isUndefined","dataPromise","then","result","activeProfiles","response","ribbonEnv","inProduction","indexOf","swaggerEnabled","pageRibbon","$rootScope","$translate","linkFunc","scope","element","attrs","addClass","removeClass","directive","replace","restrict","template","link","ReporterService","params","id","category_code","ProductService","MeansuerService","reporter","product","page","size","LocationService","IndustryService","CrawlService","CategoriesService","Register","interceptor","Principal","$q","Account","$localStorage","$sessionStorage","authenticate","identity","_identity","_authenticated","hasAnyAuthority","authorities","i","length","hasAuthority","authority","this","_id","when","force","getAccountThen","account","Data","permission","Permission","role","Role","deferred","resolve","getAccountCatch","authenticationToken","defer","undefined","isDefined","promise","$promise","catch","isAuthenticated","isIdentityResolved","PasswordResetInit","PasswordResetFinish","Password","setVisible","setHidden","defineVisibility","reset","$watch","split","Auth","$state","AuthServerProvider","LoginService","Activate","activateAccount","key","callback","cb","noop","err","bind","authorize","authThen","toState","parent","name","go","fromState","getPreviousState","previousState","resetPreviousState","storePreviousState","toStateParams","open","authReturn","changePassword","newPassword","createAccount","logout","login","credentials","loginThen","reject","loginWithToken","jwt","rememberMe","resetPasswordFinish","keyAndPassword","resetPasswordInit","mail","updateAccount","previousStateName","previousStateParams","getToken","authenticateSuccess","status","headers","bearerToken","slice","storeAuthenticationToken","token","username","password","post","success","NavbarController","$scope","init","getAccount","register","vm","toggleNavbar","isNavbarCollapsed","stateGo","industry","collapseNavbar","isShowNav","current","controller","activeMenu","$locale","tmhDynamicLocale","language","use","selectedLanguage","set","stateConfig","$stateProvider","state","url","pageTitle","views","content@","templateUrl","translatePartialLoader","$translatePartialLoader","addPart","refresh","config","controllerAs","HomeController","FileSaver","loadAllIndustry","lstIndustry","selected","item","Code","industryName","Name","alert","exportPDF","window","API_CONFIG","API_URL","industrySelected","StoreService","StoreController","NgMap","$stateParams","loadAllCity","searchStore","userRole","toUpperCase","countStore","searchStorePage","lstStore","KMZ_URL","dataSearch","city_code","pathMethod","district_code","ward_code","forEach","index","ID","code","adress","Adress","information","Information","WardCode","latitude","Latitude","longitude","Longitude","CategoryCode","type","Type","note","Note","push","total","Error","center","setTimeout","getMap","map","setZoom","error","console","log","lstStorePage","lstCount","calculateDistance","rows","$apply","drive","elements","distance","text","minuteDrive","duration","itemStart","lstCalculate","itemEnd","startItem","endItem","countCalculate","destinationA","origin1","startTitle","copy","isStart","count","destinationB","origin2","endTitle","google","maps","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","lstCity","citySelected","district_name","ward_name","CityCode","city_name","CityName","loadDistrictByCity","districtSelected","lstDistrict","DistrictCode","DistrictName","loadByWardDistrict","wardSelected","lstWard","area","Area","popular","Population","WardName","startStop","continute","btn_kq","csroll","offset","$","scrollTop","top","markerNumber","countStoreCity","countStoreDistrict","showCustomMarker","evt","customMarkers","foo","setPosition","getPosition","closeCustomMarker","style","display","LegislationService","LegislationDetailController","$uibModalInstance","cancel","dismiss","legislation","LegislationController","$uibModal","search","isSearch","getLegislation","getMeansuer","getMeansuerBP","detail","animation","categoryCode","pageLegislation","lstLegislation","StartDate","Date","EndDate","totalLegislation","totalLegislationU","Message","product_code","pageNTM","lstMeansuer","totalNTM","lstMeansuerBP","loadSuggestrReporter","val","selestSuggestReporter","$item","$model","$label","$event","reporter_code","loadSuggestProduct","selestSuggestProduct","abstract","words","wordsFilter","input","isNaN","inputWords","join","filter","characters","charactersFilter","chars","breakOnWord","substring","charAt","substr","lastspace","lastIndexOf","jhSortBy","parentCtrl","sort","require","jhSort","predicate","ascending","SortController","bindToController","$element","applyClass","thisIcon","find","sortIcon","sortAsc","sortDesc","remove","add","resetClasses","allThIcons","field","triggerApply","values","$watchGroup","ParseLinks","parse","header","parts","links","p","section","trim","queryString","RegExp","$0","$1","$2","$3","isString","parseInt","PaginationUtil","parseAscending","sortArray","parsePage","parsePredicate","pop","jhiItemCount","bindings","queryCount","itemsPerPage","component","constant","problemBaseUrl","EMAIL_ALREADY_USED_TYPE","LOGIN_ALREADY_USED_TYPE","EMAIL_NOT_FOUND_TYPE","DateUtils","$filter","convertDateTimeFromServer","date","convertLocalDateFromServer","dateString","convertLocalDateToServer","dateformat","DataUtils","$window","abbreviate","byteSize","base64String","endsWith","suffix","str","paddingSize","formatAsBytes","toString","openFile","toBase64","file","fileReader","FileReader","readAsDataURL","onload","e","base64Data","target","capitalize","capitalizeFilter","toLowerCase","Base64","encode","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","charCodeAt","keyStr","decode","String","fromCharCode","modalInstance","resetModal","LoginController","$timeout","authenticationError","event","preventDefault","close","$broadcast","reload","requestResetPassword","focus","JhiLanguageService","LANGUAGES","getAll","getCurrent","storage","findLanguageFromKey","findLanguageFromKeyFilter","lang","languages","findLanguageRtlFromKey","findLanguageRtlFromKeyFilter","rtl","en","JhiLanguageController","changeLanguage","languageKey","showValidation","formCtrl","each","$formGroup","$inputs","$input","inputName","attr","$invalid","$dirty","isInvalid","toggleClass","minbytes","ngModel","$validators","modelValue","$isEmpty","numberOfBytes","maxbytes","jhiAlertErrorController","AlertService","addErrorAlert","message","alerts","msg","timeout","toast","isToast","scoped","cleanHttpErrorListener","$on","httpResponse","stopPropagation","Object","keys","errorHeader","entityKey","entityName","instant","fieldErrors","fieldError","convertedField","fieldName","objectName","toJson","jhiAlertError","getService","$sce","clear","position","warning","info","alertOptions","trustAsHtml","alertId","closeAlert","addAlert","extAlerts","that","thisAlerts","closeAlertByIndex","splice","$get","showAsToast","provider","jhiAlertController","jhiAlert","notificationInterceptor","alertKey","param","errorHandlerInterceptor","responseError","path","$emit","authExpiredInterceptor","$injector","authInterceptor","$location","request","test","Authorization","translateChangeSuccess","updateTitle","titleKey","$current","title","document","VERSION","stateChangeStart","external","stateChangeSuccess","toParams","fromParams","paginationConfig","uibPaginationConfig","paginationConstants","maxSize","boundaryLinks","firstText","previousText","nextText","lastText","pagerConfig","uibPagerConfig","translationStorageProvider","$cookies","$log","getObject","putObject","put","value","translationConfig","$translateProvider","tmhDynamicLocaleProvider","BUILD_TIMESTAMP","useLoader","urlTemplate","preferredLanguage","useStorage","useSanitizeValueStrategy","addInterpolation","localeLocationPattern","useCookieStorage","storageKey","localStorageConfig","$localStorageProvider","$sessionStorageProvider","setKeyPrefix","httpConfig","$urlRouterProvider","$httpProvider","httpRequestInterceptorCacheBusterProvider","$urlMatcherFactoryProvider","setMatchlist","otherwise","interceptors","equals","a","b","is","pattern","compileServiceConfig","$compileProvider","DEBUG_INFO_ENABLED","debugInfoEnabled","alertServiceConfig","AlertServiceProvider","navbar@","UserManagementDialogController","entity","onSaveSuccess","isSaving","onSaveError","user","UserManagementDetailController","load","UserManagementDeleteController","confirmDelete","squash","pagingParams","onEnter","backdrop","firstName","lastName","email","activated","langKey","createdBy","createdDate","lastModifiedBy","lastModifiedDate","resetDate","resetKey","UserManagementController","setActive","isActivated","loadAll","onSuccess","onError","totalItems","users","reverse","loadPage","transition","transitionTo","currentSearch","currentAccount","JhiMetricsService","getMetrics","threadDump","JhiMetricsMonitoringModalController","getLabelClass","threadState","threadDumpAll","threadDumpBlocked","threadDumpRunnable","threadDumpTimedWaiting","threadDumpWaiting","JhiMetricsMonitoringController","updatingMetrics","metrics","refreshThreadDumpData","servicesStats","newValue","timers","includes","LogsService","findAll","changeLevel","LogsController","level","loggers","JhiHealthService","checkHealth","transformHealthData","flattenHealthData","getBaseName","getSubSystemName","remainder","isHealthObject","hasSubSystem","addHealthObject","getModuleName","isLeaf","healthObject","healthData","details","hasDetails","extend","separator","HealthModalController","currentHealth","baseName","subSystemName","JhiHealthCheckController","statusState","updatingHealth","showHealth","health","JhiConfigurationService","getConfigPropsComplete","properties","orderBy","getEnv","getEnvComplete","vals","v","k","JhiConfigurationController","allConfiguration","configuration","AuditsService","fromDate","toDate","AuditsController","onChangeDate","dateFormat","audits","today","getFullYear","getMonth","getDate","previousMonth","SettingsController","settingsAccount","copyAccount","RequestResetController","errorConstants","requestReset","errorEmailNotExists","resetAccount","ResetFinishController","finishReset","doNotMatch","confirmPassword","keyMissing","RegisterController","userData","registerAccount","first_name","fisrtName","last_name","errorUserExists","passwordStrengthBar","iElement","strength","colors","mesureStrength","_force","_regex","_lowerLetters","_upperLetters","_numbers","_symbols","_flags","_passedMatches","grep","el","Math","min","getColor","s","idx","col","c","children","css","background-color","passwordToCheck","PasswordController","ActivationController","$templateCache"],"mappings":"CAAA,WACA,YAyBA,SAAAA,GAAAC,EAAAC,GACAD,EAAAE,aACAD,EAAAC,aAzBAC,QACAC,OAAA,oBACA,YACA,oBACA,yBACA,aACA,YACA,SACA,gBACA,eACA,eACA,8BACA,YACA,kBAEA,sBACA,QACA,gBAEAL,IAAAA,GAEAA,EAAAM,SAAA,eAAA,yBCxBA,WACA,YAQA,SAAAC,GAAAC,GACA,GAAAC,GAAAD,EAAA,uBACAE,OAAAC,OAAA,MAAAC,SAAA,GACAC,KACAF,OAAA,MACAG,kBAAA,SAAAC,GAEA,MADAA,GAAAX,QAAAY,SAAAD,KAIAE,MAAAN,OAAA,QACAO,QAAAP,OAAA,OACAQ,QAAAR,OAAA,WAGA,OAAAF,GArBAL,QACAC,OAAA,oBACAe,QAAA,OAAAb,GAEAA,EAAAD,SAAA,gBCPA,WACA,YAQA,SAAAe,GAAAC,GAUA,QAAAC,KAaA,MAZAnB,SAAAoB,YAAAC,KACAA,EAAAH,EAAAT,IAAA,oBAAAa,KAAA,SAAAC,GACA,GAAAA,EAAAZ,KAAAa,eAAA,CACA,GAAAC,KAKA,OAJAA,GAAAD,eAAAD,EAAAZ,KAAAa,eACAC,EAAAC,UAAAH,EAAAZ,KAAAe,UACAD,EAAAE,aAAAJ,EAAAZ,KAAAa,eAAAI,QAAA,WAAA,EACAH,EAAAI,eAAAN,EAAAZ,KAAAa,eAAAI,QAAA,cAAA,EACAH,MAIAJ,EArBA,GAAAA,GAEAhB,GACAc,eAAAA,EAGA,OAAAd,GAdAL,QACAC,OAAA,oBACAe,QAAA,iBAAAC,GAEAA,EAAAf,SAAA,YCPA,WACA,YAQA,SAAA4B,GAAAb,EAAAc,EAAAC,GAUA,QAAAC,GAAAC,EAAAC,EAAAC,GACAnB,EAAAE,iBAAAG,KAAA,SAAAG,GACAA,EAAAC,YACAQ,EAAAR,UAAAD,EAAAC,UACAS,EAAAE,SAAAZ,EAAAC,WACAS,EAAAG,YAAA,aAdA,GAAAC,IACAC,SAAA,EACAC,SAAA,KACAC,SAAA,6GACAC,KAAAV,EAGA,OAAAM,GAdAvC,QACAC,OAAA,oBACAsC,UAAA,aAAAT,GAEAA,EAAA5B,SAAA,iBAAA,aAAA,iBCPA,WACA,YAQA,SAAA0C,GAAAxC,GACA,GAAAC,GAAAD,EAAA,+BACAK,KACAF,OAAA,OAEAO,QACAP,OAAA,OACAsC,QACAC,GAAA,KACAC,cAAA,OAGAlC,MACAN,OAAA,SAIA,OAAAF,GAvBAL,QACAC,OAAA,oBACAe,QAAA,kBAAA4B,GAEAA,EAAA1C,SAAA,gBCPA,WACA,YAQA,SAAA8C,GAAA5C,GACA,GAAAC,GAAAD,EAAA,8BACAK,KACAF,OAAA,OAEAO,QACAP,OAAA,OACAsC,QACAC,GAAA,KACAC,cAAA,OAGAlC,MACAN,OAAA,SAIA,OAAAF,GAvBAL,QACAC,OAAA,oBACAe,QAAA,iBAAAgC,GAEAA,EAAA9C,SAAA,gBCPA,WACA,YAQA,SAAA+C,GAAA7C,GACA,GAAAC,GAAAD,EAAA,+BACAK,KACAF,OAAA,OAEAO,QACAP,OAAA,OACAsC,QACAK,SAAA,KACAH,cAAA,KACAI,QAAA,KACAC,KAAA,KACAC,KAAA,KAGAxC,MACAN,OAAA,SAIA,OAAAF,GA1BAL,QACAC,OAAA,oBACAe,QAAA,kBAAAiC,GAEAA,EAAA/C,SAAA,gBCPA,WACA,YAQA,SAAAoD,GAAAlD,GACA,GAAAC,GAAAD,EAAA,2BACAK,KACAF,OAAA,OAEAO,QACAP,OAAA,QAEAM,MACAN,OAAA,SAIA,OAAAF,GAnBAL,QACAC,OAAA,oBACAe,QAAA,kBAAAsC,GAEAA,EAAApD,SAAA,gBCPA,WACA,YAQA,SAAAqD,GAAAnD,GACA,GAAAC,GAAAD,EAAA,iCACAK,KACAF,OAAA,OAEAO,QACAP,OAAA,OACAsC,QACAC,GAAA,KACAC,cAAA,OAGAlC,MACAN,OAAA,SAIA,OAAAF,GAvBAL,QACAC,OAAA,oBACAe,QAAA,kBAAAuC,GAEAA,EAAArD,SAAA,gBCPA,WACA,YAQA,SAAAsD,GAAApD,GACA,GAAAC,GAAAD,EAAA,4BACAK,KACAF,OAAA,OAEAO,QACAP,OAAA,OACAsC,QACAC,GAAA,KACAC,cAAA,OAGAlC,MACAN,OAAA,SAIA,OAAAF,GAvBAL,QACAC,OAAA,oBACAe,QAAA,eAAAwC,GAEAA,EAAAtD,SAAA,gBCPA,WACA,YAQA,SAAAuD,GAAArD,GACA,GAAAC,GAAAD,EAAA,iCACAK,KACAF,OAAA,OAEAO,QACAP,OAAA,OACAsC,QACAC,GAAA,KACAC,cAAA,OAGAlC,MACAN,OAAA,SAIA,OAAAF,GAvBAL,QACAC,OAAA,oBACAe,QAAA,oBAAAyC,GAEAA,EAAAvD,SAAA,gBCPA,WACA,YAQA,SAAAwD,GAAAtD,GACA,GAAAC,GAAAD,EAAA,2BACAK,KACAF,OAAA,MACAC,SAAA,GAEAF,OACAC,OAAA,MACAoD,aACAlC,SAAA,SAAAA,GAEA,MAAAA,MAIAX,QACAP,OAAA,OACAoD,aACAlC,SAAA,SAAAA,GAEA,MAAAA,OAMA,OAAApB,GAhCAL,QACAC,OAAA,oBACAe,QAAA,WAAA0C,GAEAA,EAAAxD,SAAA,gBCPA,WACA,YAQA,SAAA0D,GAAAC,EAAAC,EAAAC,EAAAC,GAeA,QAAAC,GAAAC,GACAC,EAAAD,EACAE,EAAA,OAAAF,EAGA,QAAAG,GAAAC,GACA,IAAAF,IAAAD,IAAAA,EAAAG,YACA,OAAA,CAGA,KAAA,GAAAC,GAAA,EAAAA,EAAAD,EAAAE,OAAAD,IACA,GAAAJ,EAAAG,YAAA1C,QAAA0C,EAAAC,OAAA,EACA,OAAA,CAIA,QAAA,EAGA,QAAAE,GAAAC,GACA,MAAAN,GAIAO,KAAAT,WAAA5C,KAAA,SAAAsD,GACA,MAAAA,GAAAN,aAAAM,EAAAN,YAAA1C,QAAA8C,MAAA,GACA,WACA,OAAA,IANAb,EAAAgB,MAAA,GAUA,QAAAX,GAAAY,GAsBA,QAAAC,GAAAC,GACAb,EAAAa,EAAArE,KAAAsE,KACAlB,EAAAmB,WAAAF,EAAArE,KAAAsE,KAAAE,WACApB,EAAAqB,KAAAJ,EAAArE,KAAAsE,KAAAI,KACAjB,GAAA,EACAkB,EAAAC,QAAApB,GAGA,QAAAqB,KACArB,EAAA,KACAC,GAAA,EACAkB,EAAAC,QAAApB,SAEAJ,GAAA0B,0BACA1B,GAAAmB,iBACAnB,GAAAqB,WACApB,GAAAyB,oBArCA,GAAAH,GAAAzB,EAAA6B,OAQA,OANAZ,MAAA,IACAX,EAAAwB,QAKA3F,QAAA4F,UAAAzB,IACAmB,EAAAC,QAAApB,GAEAmB,EAAAO,UAIA/B,EAAArD,MAAAqF,SACAxE,KAAAyD,GACAgB,MAAAP,GAEAF,EAAAO,SAsBA,QAAAG,KACA,MAAA5B,GAGA,QAAA6B,KACA,MAAAjG,SAAA4F,UAAAzB,GA5FA,GAAAA,GACAC,GAAA,EAEA/D,GACA4D,aAAAA,EACAI,gBAAAA,EACAI,aAAAA,EACAP,SAAAA,EACA8B,gBAAAA,EACAC,mBAAAA,EAGA,OAAA5F,GAnBAL,QACAC,OAAA,oBACAe,QAAA,YAAA4C,GAEAA,EAAA1D,SAAA,KAAA,UAAA,gBAAA,sBCPA,WACA,YAQA,SAAAgG,GAAA9F,GACA,GAAAC,GAAAD,EAAA,wCAEA,OAAAC,GATAL,QACAC,OAAA,oBACAe,QAAA,oBAAAkF,GAEAA,EAAAhG,SAAA,gBCPA,WACA,YAQA,SAAAiG,GAAA/F,GACA,GAAAC,GAAAD,EAAA,0CAEA,OAAAC,GATAL,QACAC,OAAA,oBACAe,QAAA,sBAAAmF,GAEAA,EAAAjG,SAAA,gBCPA,WACA,YAQA,SAAAkG,GAAAhG,GACA,GAAAC,GAAAD,EAAA,oCAEA,OAAAC,GATAL,QACAC,OAAA,oBACAe,QAAA,WAAAoF,GAEAA,EAAAlG,SAAA,gBCPA,WACA,YAQA,SAAAuE,GAAAb,GAQA,QAAA3B,GAAAC,EAAAC,EAAAC,GACA,GAAAsC,GAAAtC,EAAAqC,aAAAjC,QAAA,OAAA,IAEA6D,EAAA,WACAlE,EAAAG,YAAA,WAEAgE,EAAA,WACAnE,EAAAE,SAAA,WAEAkE,EAAA,SAAAC,GAEAA,GACAH,IAGAzC,EAAAa,aAAAC,GACApD,KAAA,SAAAC,GACAA,EACA8E,IAEAC,MAKA5B,GAAAF,OAAA,IACA+B,GAAA,GAEArE,EAAAuE,OAAA,WACA,MAAA7C,GAAAoC,mBACA,WACAO,GAAA,MAtCA,GAAAhE,IACAE,SAAA,IACAE,KAAAV,EAGA,OAAAM,GAZAvC,QACAC,OAAA,oBACAsC,UAAA,eAAAkC,GAEAA,EAAAvE,SAAA,gBCPA,WACA,YAQA,SAAAmE,GAAAT,GAQA,QAAA3B,GAAAC,EAAAC,EAAAC,GACA,GAAAkC,GAAAlC,EAAAiC,gBAAA7B,QAAA,OAAA,IAAAkE,MAAA,KAEAL,EAAA,WACAlE,EAAAG,YAAA,WAEAgE,EAAA,WACAnE,EAAAE,SAAA,WAEAkE,EAAA,SAAAC,GACA,GAAAjF,EACAiF,IACAH,IAGA9E,EAAAqC,EAAAS,gBAAAC,GACA/C,EACA8E,IAEAC,IAIAhC,GAAAE,OAAA,IACA+B,GAAA,GAEArE,EAAAuE,OAAA,WACA,MAAA7C,GAAAoC,mBACA,WACAO,GAAA,MApCA,GAAAhE,IACAE,SAAA,IACAE,KAAAV,EAGA,OAAAM,GAZAvC,QACAC,OAAA,oBACAsC,UAAA,kBAAA8B,GAEAA,EAAAnE,SAAA,gBCPA,WACA,YAQA,SAAAyG,GAAA5E,EAAA6E,EAAA5C,EAAAH,EAAA7B,EAAA4B,EAAAiD,EAAA/C,EAAAgD,EAAApD,EAAAqD,EAAAX,EAAAF,EAAAC,GAmBA,QAAAa,GAAAC,EAAAC,GACA,GAAAC,GAAAD,GAAAlH,QAAAoH,IAEA,OAAAL,GAAAtG,IAAAwG,EACA,SAAAxF,GACA,MAAA0F,GAAA1F,IAEA,SAAA4F,GACA,MAAAF,GAAAE,IACAC,KAAA3C,OAAAmB,SAGA,QAAAyB,GAAAzC,GAKA,QAAA0C,KACA,GAAAxB,GAAApC,EAAAoC,iBAQA,KALAA,GAAA,YAAAjE,EAAA0F,QAAAC,QAAA,UAAA3F,EAAA0F,QAAAE,MAAA,aAAA5F,EAAA0F,QAAAE,MAAA,gBAAA5F,EAAA0F,QAAAE,MACAf,EAAAgB,GAAA,QAIA5B,IAAAjE,EAAA8F,UAAAF,MAAAG,IAAA,CACA,GAAAC,GAAAD,GACAE,KACApB,EAAAgB,GAAAG,EAAAJ,KAAAI,EAAAlF,QAGAd,EAAA0F,QAAA9G,KAAA2D,aAAAvC,EAAA0F,QAAA9G,KAAA2D,YAAAE,OAAA,IAAAZ,EAAAS,gBAAAtC,EAAA0F,QAAA9G,KAAA2D,eACA0B,EAEAY,EAAAgB,GAAA,iBAKAK,EAAAlG,EAAA0F,QAAAE,KAAA5F,EAAAmG,eAGAtB,EAAAgB,GAAA,gBAAAtG,KAAA,WACAwF,EAAAqB,WA/BA,GAAAC,GAAAxE,EAAAM,SAAAY,GAAAxD,KAAAkG,EAEA,OAAAY,GAoCA,QAAAC,GAAAC,EAAApB,GACA,GAAAC,GAAAD,GAAAlH,QAAAoH,IAEA,OAAAhB,GAAAvF,KAAAyH,EAAA,WACA,MAAAnB,MACA,SAAAE,GACA,MAAAF,GAAAE,KACAvB,SAGA,QAAAyC,GAAAvD,EAAAkC,GACA,GAAAC,GAAAD,GAAAlH,QAAAoH,IAEA,OAAA1D,GAAA7C,KAAAmE,EACA,WACA,MAAAmC,GAAAnC,IAEA,SAAAqC,GAEA,MADA1C,MAAA6D,SACArB,EAAAE,IACAC,KAAA3C,OAAAmB,SAGA,QAAA2C,GAAAC,EAAAxB,GAYA,QAAAyB,GAAAhI,GAWA,MAVAiD,GAAAM,UAAA,GAAA5C,KAAA,SAAA0D,GAQAM,EAAAC,QAAA5E,KAEAwG,IAtBA,GAAAA,GAAAD,GAAAlH,QAAAoH,KACA9B,EAAAzB,EAAA6B,OAwBA,OAtBAmB,GAAA4B,MAAAC,GACApH,KAAAqH,GACA5C,MAAA,SAAAsB,GAGA,MAFA1C,MAAA6D,SACAlD,EAAAsD,OAAAvB,GACAF,EAAAE,IACAC,KAAA3C,OAgBAW,EAAAO,QAGA,QAAAgD,GAAAC,EAAAC,GACA,MAAAlC,GAAAgC,eAAAC,EAAAC,GAGA,QAAAP,KACA3B,EAAA2B,SACA5E,EAAAK,aAAA,MAGA,QAAA+E,GAAAC,EAAA/B,GACA,GAAAC,GAAAD,GAAAlH,QAAAoH,IAEA,OAAAjB,GAAAtF,KAAAoI,EAAA,WACA,MAAA9B,MACA,SAAAE,GACA,MAAAF,GAAAE,KACAvB,SAGA,QAAAoD,GAAAC,EAAAjC,GACA,GAAAC,GAAAD,GAAAlH,QAAAoH,IAEA,OAAAlB,GAAArF,KAAAsI,EAAA,WACA,MAAAhC,MACA,SAAAE,GACA,MAAAF,GAAAE,KACAvB,SAGA,QAAAsD,GAAApE,EAAAkC,GACA,GAAAC,GAAAD,GAAAlH,QAAAoH,IAEA,OAAAtD,GAAAjD,KAAAmE,EACA,WACA,MAAAmC,GAAAnC,IAEA,SAAAqC,GACA,MAAAF,GAAAE,IACAC,KAAA3C,OAAAmB,SAGA,QAAAgC,KACA,GAAAC,GAAA/D,EAAA+D,aACA,OAAAA,GAGA,QAAAC,WACAhE,GAAA+D,cAGA,QAAAE,GAAAoB,EAAAC,GACA,GAAAvB,IAAAJ,KAAA0B,EAAAxG,OAAAyG,EACAtF,GAAA+D,cAAAA,EA7KA,GAAA1H,IACA2G,gBAAAA,EACAO,UAAAA,EACAc,eAAAA,EACAE,cAAAA,EACAT,iBAAAA,EACAW,MAAAA,EACAD,OAAAA,EACAK,eAAAA,EACAG,oBAAAA,EACAE,kBAAAA,EACAlB,mBAAAA,EACAC,mBAAAA,EACAmB,cAAAA,EAGA,OAAA/I,GAvBAL,QACAC,OAAA,oBACAe,QAAA,OAAA2F,GAEAA,EAAAzG,SAAA,aAAA,SAAA,kBAAA,KAAA,aAAA,YAAA,qBAAA,UAAA,eAAA,WAAA,WAAA,WAAA,oBAAA,0BCPA,WACA,YAQA,SAAA2G,GAAA3F,EAAA6C,EAAAC,EAAAH,GAWA,QAAA0F,KAEA,MAAAxF,GAAA0B,qBAAAzB,EAAAyB,oBAGA,QAAAgD,GAAAC,GAUA,QAAAc,GAAA7I,EAAA8I,EAAAC,GACA,GAAAC,GAAAD,EAAA,iBAAAA,EAAA,iBAAA,EACA,IAAA1J,QAAA4F,UAAA+D,IAAA,YAAAA,EAAAC,MAAA,EAAA,GAAA,CACA,GAAAd,GAAAa,EAAAC,MAAA,EAAAD,EAAAnF,OAEA,OADAnE,GAAAwJ,yBAAAf,EAAAJ,EAAAK,YACAD,EAEA,GAAAA,GAAAnI,EAAAsE,KAAA6E,KACAzJ,GAAAwJ,yBAAAf,EAAAJ,EAAAK,YAhBA,GAAApI,IACAoJ,SAAArB,EAAAqB,SACAC,SAAAtB,EAAAsB,SACAjB,WAAAL,EAAAK,WACA3F,KAAA,QAEA,OAAAlC,GAAA+I,KAAA,YAAAtJ,GAAAuJ,QAAAV,GAeA,QAAAX,GAAAC,EAAAC,GACA,GAAAzD,GAAAzB,EAAA6B,OASA,OAPA1F,SAAA4F,UAAAkD,IACAnE,KAAAkF,yBAAAf,EAAAC,GACAzD,EAAAC,QAAAuD,IAEAxD,EAAAsD,SAGAtD,EAAAO,QAGA,QAAAgE,GAAAf,EAAAC,GACAA,EACAhF,EAAA0B,oBAAAqD,EAEA9E,EAAAyB,oBAAAqD,EAIA,QAAAN,WACAzE,GAAA0B,0BACA1B,GAAAmB,iBACAnB,GAAAqB,WACApB,GAAAyB,oBA/DA,GAAApF,IACAkJ,SAAAA,EACAd,MAAAA,EACAI,eAAAA,EACAgB,yBAAAA,EACArB,OAAAA,EAGA,OAAAnI,GAfAL,QACAC,OAAA,oBACAe,QAAA,qBAAA6F,GAEAA,EAAA3G,SAAA,QAAA,gBAAA,kBAAA,SCPA,WACA,YAQA,SAAA6G,GAAA3G,GACA,GAAAC,GAAAD,EAAA,mBACAK,KAAAF,OAAA,MAAAsC,UAAArC,SAAA,IAGA,OAAAH,GAXAL,QACAC,OAAA,oBACAe,QAAA,WAAA+F,GAEAA,EAAA7G,SAAA,gBCPA,WACA,YAQA,SAAA4D,GAAA1D,GACA,GAAAC,GAAAD,EAAA,kBACAK,KAAAF,OAAA,MAAAsC,UAAArC,SAAA,EACAmD,aACAlC,SAAA,SAAAA,GAEA,MAAAA,OAMA,OAAApB,GAlBAL,QACAC,OAAA,oBACAe,QAAA,UAAA8C,GAEAA,EAAA5D,SAAA,gBCPA,WACA,YAQA,SAAAiK,GAAAvD,EAAAD,EAAA/C,EAAA3C,EAAA6F,EAAAsD,EAAArG,GAkCA,QAAAsG,KACAC,IAGA,QAAAC,KACA3D,EAAAgB,GAAA,YAGA,QAAA0C,KACA1G,EAAAM,WAAA5C,KAAA,SAAA0D,GACAwF,EAAAxF,QAAAA,IAIA,QAAAyD,KAEA3B,EAAAqB,OAGA,QAAAK,KAEAgC,EAAAxF,WACA2B,EAAA6B,SACA5B,EAAAgB,GAAA,QAGA,QAAA6C,KACAD,EAAAE,mBAAAF,EAAAE,kBAGA,QAAAC,GAAAhI,GACAiE,EAAAgB,GAAAjF,GAAAiI,SAAA7G,EAAA6G,WAGA,QAAAC,KACAL,EAAAE,mBAAA,EApEA,GAAAF,GAAA7F,IAEA6F,GAAAE,mBAAA,EACAF,EAAAM,WAAA,EACAN,EAAAxE,gBAAApC,EAAAoC,gBACAwE,EAAAxF,WAEA/D,EAAAE,iBAAAG,KAAA,SAAAG,GACA+I,EAAA7I,aAAAF,EAAAE,aACA6I,EAAA3I,eAAAJ,EAAAI,iBAGA2I,EAAA/B,MAAAA,EACA+B,EAAAhC,OAAAA,EACAgC,EAAAC,aAAAA,EACAD,EAAAK,eAAAA,EACAL,EAAA5D,OAAAA,EACA4D,EAAAG,QAAAA,EACAH,EAAAD,SAAAA,EAEAH,EAAA3D,OAAA,WACA,OAAAG,EAAAmE,QAAApD,MACA,IAAA,OACA6C,EAAAM,WAAA,CACA,MACA,SACAN,EAAAM,WAAA,KAKAT,IAtCArK,QACAC,OAAA,oBACA+K,WAAA,mBAAAb,GAEAA,EAAAjK,SAAA,SAAA,OAAA,YAAA,iBAAA,eAAA,SAAA,oBCPA,WACA,YAQA,SAAA+K,GAAAjJ,EAAAkJ,EAAAC,GAQA,QAAAlJ,GAAAC,EAAAC,EAAAC,GACA,GAAAgJ,GAAAhJ,EAAA6I,UAEA/I,GAAAuE,OAAA,WACA,MAAAzE,GAAAqJ,OACA,SAAAC,GACAF,IAAAE,GACAH,EAAAI,IAAAH,GACAjJ,EAAAE,SAAA,WAEAF,EAAAG,YAAA,YAjBA,GAAAC,IACAE,SAAA,IACAE,KAAAV,EAGA,OAAAM,GAZAvC,QACAC,OAAA,oBACAsC,UAAA,aAAA0I,GAEAA,EAAA/K,SAAA,aAAA,UAAA,uBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EACAC,MAAA,SACAhE,OAAA,MACAiE,IAAA,SACAhL,MACA2D,eACAsH,UAAA,eAEAC,OACAC,YACAC,YAAA,iCAGAxG,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,SACAlK,EAAAmK,eAIAT,MAAA,gBACAhE,OAAA,MACAiE,IAAA,gBACAhL,MACA2D,gBAEAuH,OACAC,YACAC,YAAA,wCAGAxG,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,SACAlK,EAAAmK,eAzCAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,QACAhE,OAAA,MACAiE,IAAA,IACAhL,MACA2D,gBAEAuH,OACAC,YACAC,YAAA,qBACAf,WAAA,iBACAqB,aAAA,OAGA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,QACAlK,EAAAmK,eAvBAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAAoM,GAAAlC,EAAArG,EAAAwI,EAAA3F,EAAAnD,EAAAD,GAaA,QAAAgJ,KACA/I,EAAAhD,OAAA,SAAAE,GACA6J,EAAAiC,YAAA9L,EAAAsE,OAIA,QAAAyH,GAAAC,GACA,IAAA,GAAApI,GAAA,EAAAA,EAAAiG,EAAAiC,YAAAjI,OAAAD,IACAiG,EAAAiC,YAAAlI,GAAAqI,MAAAD,EAAAC,MACA7I,EAAA6G,SAAA+B,EAAAC,KACA7I,EAAA8I,aAAAF,EAAAG,KACAtC,EAAAiC,YAAAlI,GAAAmI,UAAA,GAEAlC,EAAAiC,YAAAlI,GAAAmI,UAAA,EAKA,QAAA/B,GAAAhI,GACA,IAAAoB,EAAA6G,SACAhE,EAAAgB,GAAAjF,GAAAiI,SAAA7G,EAAA6G,WAEAmC,MAAA,kCAIA,QAAAC,KAQAC,OAAA9E,KAAA+E,WAAAC,QAAA,qBA9CA,GAAA3C,GAAA7F,IAEA6F,GAAA4C,iBAAA,GACA5C,EAAAiC,eAEAjC,EAAAkC,SAAAA,EACAlC,EAAAG,QAAAA,EACAH,EAAAwC,UAAAA,EAGAR,IACAzI,EAAA6G,SAAA,GAlBA5K,QACAC,OAAA,oBACA+K,WAAA,iBAAAsB,GAEAA,EAAApM,SAAA,SAAA,gBAAA,YAAA,SAAA,oBAAA,mBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,SACAhE,OAAA,SACAiE,IAAA,oBACAhL,QAIAkL,OACAC,YACAC,YAAA,gCACAf,WAAA,kBACAqB,aAAA,OAGA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MAAAjK,GAAAmK,eAxBAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAAmN,GAAAjN,GACA,GAAAC,GAAAD,EAAA,4BACAK,KACAF,OAAA,OAEAO,QACAP,OAAA,OACAsC,QACAC,GAAA,KACAC,cAAA,OAGAlC,MACAN,OAAA,SAIA,OAAAF,GAvBAL,QACAC,OAAA,oBACAe,QAAA,eAAAqM,GAEAA,EAAAnN,SAAA,gBCPA,WACA,YAQA,SAAAoN,GAAAlD,EAAAiD,EAAA/J,EAAAS,EAAAwJ,EAAAC,GA4DA,QAAAnD,KACAoD,IAGA,QAAAC,KAEA,aAAAlD,EAAAmD,SAAAC,eAAA,IAAApD,EAAAmD,SAAAC,cACAb,MAAA,gDAEAc,IACAC,IAEAtD,EAAAuD,YACAvD,EAAAmB,IAAAuB,WAAAc,QAAAxD,EAAAyD,WAAAC,UAAA,OAEAb,EAAA5M,KACA0N,WAAA,QACApL,cAAAyH,EAAAI,SACAsD,UAAA,MAAA1D,EAAAyD,WAAAC,UAAA1D,EAAAyD,WAAAC,UAAA,KACAE,cAAA,OAAA5D,EAAAyD,WAAAG,cAAA5D,EAAAyD,WAAAG,cAAA,KACAC,UAAA,SAAA7D,EAAAyD,WAAAI,UAAA7D,EAAAyD,WAAAI,UAAA,KACAjL,KAAAoH,EAAApH,KACAC,KAAA,KACA,SAAA1C,GACAX,QAAAsO,QAAA3N,EAAAsE,KAAA,SAAA9C,EAAAoM,GACA,GAAA5B,IACA7J,GAAAX,EAAAqM,GACAC,KAAAtM,EAAAyK,KACAjF,KAAAxF,EAAA2K,KACA4B,OAAAvM,EAAAwM,OACAC,YAAAzM,EAAA0M,YACAR,UAAAlM,EAAA2M,SACAC,SAAA5M,EAAA6M,SACAC,UAAA9M,EAAA+M,UACAnM,cAAAZ,EAAAgN,aACAC,KAAAjN,EAAAkN,KACAC,KAAAnN,EAAAoN,KAEA/E,GAAAuD,SAAAyB,KAAA7C,KAGAnC,EAAAiF,MAAA9O,EAAA+O,MAAA9C,KACApC,EAAAmF,OAAAhP,EAAAsE,KAAAT,OAAA,EAAA7D,EAAAsE,KAAA,GAAA0J,OAAAnE,EAAAmF,OAEAC,WAAA,WACArC,EAAAsC,SAAAvO,KAAA,SAAAwO,GACAA,EAAAC,QAAA,OAEA,MAEA,SAAAC,GACAC,QAAAC,IAAAF,MAKA,QAAAlC,KACAtD,EAAA2F,gBAEA9C,EAAA5M,KACA0N,WAAA,QACApL,cAAAyH,EAAAI,SACAsD,UAAA,MAAA1D,EAAAyD,WAAAC,UAAA1D,EAAAyD,WAAAC,UAAA,KACAE,cAAA,OAAA5D,EAAAyD,WAAAG,cAAA5D,EAAAyD,WAAAG,cAAA,KACAC,UAAA,SAAA7D,EAAAyD,WAAAI,UAAA7D,EAAAyD,WAAAI,UAAA,KACAjL,KAAAoH,EAAApH,KACAC,KAAA,IACA,SAAA1C,GACAX,QAAAsO,QAAA3N,EAAAsE,KAAA,SAAA9C,EAAAoM,GACA,GAAA5B,IACA7J,GAAAX,EAAAqM,GACAC,KAAAtM,EAAAyK,KACAjF,KAAAxF,EAAA2K,KACA4B,OAAAvM,EAAAwM,OACAC,YAAAzM,EAAA0M,YACAR,UAAAlM,EAAA2M,SACAC,SAAA5M,EAAA6M,SACAC,UAAA9M,EAAA+M,UACAnM,cAAAZ,EAAAgN,aACAC,KAAAjN,EAAAkN,KACAC,KAAAnN,EAAAoN,KAEA/E,GAAA2F,aAAAX,KAAA7C,KAGAnC,EAAAiF,MAAA9O,EAAA+O,MAAA9C,MAEA,SAAAoD,GACAC,QAAAC,IAAAF,KAIA,QAAAnC,KACAR,EAAA5M,KACA0N,WAAA,QACApL,cAAAyH,EAAAI,SACAsD,UAAA,MAAA1D,EAAAyD,WAAAC,UAAA1D,EAAAyD,WAAAC,UAAA,KACAE,cAAA,OAAA5D,EAAAyD,WAAAG,cAAA5D,EAAAyD,WAAAG,cAAA,KACAC,UAAA,SAAA7D,EAAAyD,WAAAI,UAAA7D,EAAAyD,WAAAI,UAAA,KACAjL,KAAAoH,EAAApH,KACAC,KAAA,KACA,SAAA1C,GACA6J,EAAA4F,SAAAzP,EAAAsE,OAIA,QAAAoL,KAsCA,QAAAnJ,GAAAzF,GACAA,EAAA6O,KAAA9L,OAAA,GAEA4F,EAAAmG,OAAA,WACA/F,EAAAgG,MAAA/O,EAAA6O,KAAA,GAAAG,SAAA,GAAAC,SAAAC,KACAnG,EAAAoG,YAAAnP,EAAA6O,KAAA,GAAAG,SAAA,GAAAI,SAAAF,KAEAG,EAAAN,MAAA/O,EAAA6O,KAAA,GAAAG,SAAA,GAAAC,SAAAC,KACAG,EAAAF,YAAAnP,EAAA6O,KAAA,GAAAG,SAAA,GAAAI,SAAAF,KAEAnG,EAAAuG,aAAAvB,KAAAsB,GACAtG,EAAAuG,aAAAvB,KAAAwB,KAhDA,GAAAF,MACAE,IAIA,IAHAxG,EAAAyG,UAAAzG,EAAAyG,UAAAzG,EAAAyG,UAAA,GACAzG,EAAA0G,QAAA1G,EAAA0G,QAAA1G,EAAA0G,QAAA,GAEA1G,EAAA2G,gBAAA,GACA,GAAA,IAAA3G,EAAAyG,WAAA,IAAAzG,EAAA0G,QAAA,CACA,IAAA,GAAA3M,GAAA,EAAAA,EAAAiG,EAAAuD,SAAAvJ,OAAAD,IACAiG,EAAAuD,SAAAxJ,GAAAzB,IAAA0H,EAAAyG,YAEAzG,EAAA4G,aAAA5G,EAAAuD,SAAAxJ,GAAAmK,OACAlE,EAAA6G,QAAA7G,EAAAuD,SAAAxJ,GAAAmK,OACAlE,EAAA8G,WAAA9G,EAAAuD,SAAAxJ,GAAAoD,KAEAmJ,EAAA9Q,QAAAuR,KAAA/G,EAAAuD,SAAAxJ,IACAuM,EAAAU,SAAA,EACAV,EAAAW,MAAAjH,EAAA2G,gBAGA3G,EAAAuD,SAAAxJ,GAAAzB,IAAA0H,EAAA0G,UACA1G,EAAAkH,aAAAlH,EAAAuD,SAAAxJ,GAAAmK,OACAlE,EAAAmH,QAAAnH,EAAAuD,SAAAxJ,GAAAmK,OACAlE,EAAAoH,SAAApH,EAAAuD,SAAAxJ,GAAAoD,KAEAqJ,EAAAhR,QAAAuR,KAAA/G,EAAAuD,SAAAxJ,IACAyM,EAAAS,MAAAjH,EAAA2G,eAIA,IAAA9Q,GAAA,GAAAwR,QAAAC,KAAAC,qBACA1R,GAAA2R,mBAEAC,SAAAzH,EAAA6G,QAAA7G,EAAAmH,SACAO,cAAA1H,EAAA4G,aAAA5G,EAAAkH,cACAS,WAAA,WACAjL,GAkBAsD,EAAA2G,gBAAA,MAEApE,OAAA,0BAIAA,OAAA,gCAIA,QAAAU,KACAnK,EAAA7C,KACA0N,WAAA,eACA,SAAAxN,GACAX,QAAAsO,QAAA3N,EAAAsE,KAAA,SAAA9C,GACAqI,EAAA4H,QAAA5C,KAAArN,OAKA,QAAAkQ,KAEA7H,EAAAyD,WAAAG,cAAA,MACA5D,EAAAyD,WAAAI,UAAA,QAEA7D,EAAAyD,WAAAqE,cAAA,GACA9H,EAAAyD,WAAAsE,UAAA,GAEAvS,QAAAsO,QAAA9D,EAAA4H,QAAA,SAAAjQ,GACAA,EAAAqQ,UAAAhI,EAAAyD,WAAAC,YACA1D,EAAAyD,WAAAwE,UAAAtQ,EAAAuQ,YAIAC,IAGA,QAAAC,KACApI,EAAAyD,WAAAI,UAAA,QACA7D,EAAAyD,WAAAsE,UAAA,GAEAvS,QAAAsO,QAAA9D,EAAAqI,YAAA,SAAA1Q,GACAA,EAAA2Q,cAAAtI,EAAAyD,WAAAG,gBACA5D,EAAAyD,WAAAqE,cAAAnQ,EAAA4Q,gBAIAC,IAGA,QAAAC,KAEAjT,QAAAsO,QAAA9D,EAAA0I,QAAA,SAAA/Q,GACAA,EAAA2M,UAAAtE,EAAAyD,WAAAI,YACA7D,EAAA2I,KAAAhR,EAAAiR,KACA5I,EAAA6I,QAAAlR,EAAAmR,WACA9I,EAAAyD,WAAAsE,UAAApQ,EAAAoR,YAKA,QAAAZ,KACArP,EAAA7C,KACA0N,WAAA,kBACAD,UAAA,MAAA1D,EAAAyD,WAAAC,UAAA1D,EAAAyD,WAAAC,UAAA,MACA,SAAAvN,GACA6J,EAAAqI,cACAC,aAAA,MACAC,aAAA,WAGA/S,QAAAsO,QAAA3N,EAAAsE,KAAA,SAAA9C,GACAqI,EAAAqI,YAAArD,KAAArN,OAMA,QAAA6Q,KACA,MAAA1P,GAAA7C,KACA0N,WAAA,cACAD,UAAA,MAAA1D,EAAAyD,WAAAC,UAAA1D,EAAAyD,WAAAC,UAAA,KACAE,cAAA,OAAA5D,EAAAyD,WAAAG,cAAA5D,EAAAyD,WAAAG,cAAA,MACA,SAAAzN,GAEA6J,EAAA0I,UACApE,SAAA,QACAyE,SAAA,WAGAvT,QAAAsO,QAAA3N,EAAAsE,KAAA,SAAA9C,GACAqI,EAAA0I,QAAA1D,KAAArN,OAKA,QAAAqR,GAAApE,GACA5E,EAAAgH,QAAApC,EAGA,QAAAqE,KACA,GAAAC,GAAA1T,QAAAmC,QAAA,WACAwR,EAAAD,EAAAE,QACAC,GAAA5G,QAAA6G,UAAAH,EAAAI,IAAA,KAlUA,GAAAvJ,GAAA7F,IAEA6F,GAAAuD,YACAvD,EAAA4H,UACAI,SAAA,KACAE,SAAA,WAEAlI,EAAAqI,cACAC,aAAA,MACAC,aAAA,WAEAvI,EAAA0I,UACApE,SAAA,QACAyE,SAAA,WAGA/I,EAAA2F,gBAEA3F,EAAAyD,YACAC,UAAA,KACAE,cAAA,MACAC,UAAA,SAGA7D,EAAA4F,YACA5F,EAAAuG,gBACAvG,EAAAI,SAAA4C,EAAA5C,SACAJ,EAAAqC,aAAA9I,EAAA8I,aACArC,EAAAgH,QAAA,EAEAhH,EAAAmB,IAAA,GACAnB,EAAAmD,SAAA5J,EAAAqB,KAAArB,EAAAqB,KAAA,GAEAoF,EAAA2I,KAAA,EACA3I,EAAA6I,QAAA,EACA7I,EAAAwJ,aAAA,EACAxJ,EAAAkG,SAAA,EACAlG,EAAAyJ,eAAA,EACAzJ,EAAA0J,mBAAA,EACA1J,EAAA2G,eAAA,EAEA3G,EAAA4G,aAAA,GACA5G,EAAAkH,aAAA,GACAlH,EAAA6G,QAAA,GACA7G,EAAAmH,QAAA,GACAnH,EAAAmF,OAAA,qDAEAnF,EAAAkD,YAAAA,EACAlD,EAAAsD,gBAAAA,EACAtD,EAAA6F,kBAAAA,EACA7F,EAAA6H,aAAAA,EACA7H,EAAAoI,iBAAAA,EACApI,EAAAyI,aAAAA,EACAzI,EAAAgJ,UAAAA,EACAhJ,EAAAiJ,UAAAA,EAGApJ,IA4QAkD,EAAAsC,SAAAvO,KAAA,SAAAwO,GACAtF,EAAA2J,iBAAA,SAAAC,GACAtE,EAAAuE,cAAAC,IAAAjO,YAAA,GACAyJ,EAAAuE,cAAAC,IAAAC,YAAA5P,KAAA6P,gBAGAhK,EAAAiK,kBAAA,SAAAL,GACAzP,KAAA+P,MAAAC,QAAA,UAnVA3U,QACAC,OAAA,oBACA+K,WAAA,kBAAAsC,GAEAA,EAAApN,SAAA,SAAA,eAAA,kBAAA,gBAAA,QAAA,mBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,eACAhE,OAAA,SACAiE,IAAA,0BACAhL,QAIAkL,OACAC,YACAC,YAAA,4CACAf,WAAA,wBACAqB,aAAA,OAGA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MAAAjK,GAAAmK,eAxBAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAA0U,GAAAxU,GACA,GAAAC,GAAAD,EAAA,kCACAK,KACAF,OAAA,OAEAO,QACAP,OAAA,OACAsC,QACAC,GAAA,KACAC,cAAA,KACAK,KAAA,KACAC,KAAA,KAGAxC,MACAN,OAAA,SAIA,OAAAF,GAzBAL,QACAC,OAAA,oBACAe,QAAA,qBAAA4T,GAEAA,EAAA1U,SAAA,gBCPA,WACA,YAQA,SAAA2U,GAAAC,EAAAnU,GAQA,QAAAoU,KACAD,EAAAE,QAAA,UARA,GAAAxK,GAAA7F,IAEA6F,GAAAuK,OAAAA,EAEAvK,EAAAyK,YAAAjV,QAAAuR,KAAA5Q,GACAsP,QAAAC,IAAA,iBAAA1F,EAAAyK,aAZAjV,QACAC,OAAA,oBACA+K,WAAA,8BAAA6J,GAEAA,EAAA3U,SAAA,oBAAA,WCPA,WACA,YAQA,SAAAgV,GAAA1H,EAAAoH,EAAAhS,EAAAI,EAAAC,EAAAkS,EAAApR,GA6BA,QAAAqR,KAEA,aAAA5K,EAAAmD,SAAAC,eAAA,IAAApD,EAAAmD,SAAAC,cACAb,MAAA,+CAEA,MAAAvC,EAAAyD,WAAA/K,UAAA,IAAAsH,EAAAyD,WAAA/K,UAAA,MAAAsH,EAAAyD,WAAA9K,SAAA,IAAAqH,EAAAyD,WAAA9K,QACA4J,MAAA,wBAEAvC,EAAA6K,UAAA,EACAC,IACAC,IACAC,KAKA,QAAAC,GAAA9I,GACAwI,EAAAhN,MACAuN,WAAA,EACA3J,YAAA,mDACAf,WAAA,8BACAqB,aAAA,KACAhJ,KAAA,KACAkC,SACA5E,KAAA,WACA,MAAAgM,OAOA,QAAA2I,KACAV,EAAAnU,KACA0N,WAAA,MACApL,cAAAyH,EAAAmL,aACAzS,SAAAsH,EAAAyD,WAAA/K,SACAE,KAAAoH,EAAAoL,iBACA,SAAAjV,GACA6J,EAAAqL,eAAAlV,EAAAsE,IACA,KAAA,GAAAV,GAAA,EAAAA,EAAAiG,EAAAqL,eAAArR,OAAAD,IACAiG,EAAAqL,eAAAtR,GAAAuR,UAAA,GAAAC,MAAAvL,EAAAqL,eAAAtR,GAAAuR,WACAtL,EAAAqL,eAAAtR,GAAAyR,QAAA,GAAAD,MAAAvL,EAAAqL,eAAAtR,GAAAyR,QAEAxL,GAAAyL,iBAAAtV,EAAA+O,MAAA9C,KACApC,EAAA0L,kBAAAvV,EAAA+O,MAAAyG,UAIA,QAAAZ,KACAtS,EAAAxC,KACAsC,cAAAyH,EAAAmL,aACAzS,SAAAsH,EAAAyD,WAAA/K,SACAC,QAAAqH,EAAAyD,WAAAmI,aACAhT,KAAAoH,EAAA6L,SACA,SAAA1V,GACA6J,EAAA8L,YAAA3V,EAAAsE,KACAuF,EAAA+L,SAAA5V,EAAA+O,MAAA9C,OAIA,QAAA4I,KACAvS,EAAAxC,KACA0N,WAAA,KACApL,cAAAyH,EAAAmL,aACAzS,SAAAsH,EAAAyD,WAAA/K,SACAC,QAAAqH,EAAAyD,WAAAmI,aACAhT,KAAA,KACA,SAAAzC,GACA6J,EAAAgM,cAAA7V,EAAAsE,KACAgL,QAAAC,IAAA,mBAAA1F,EAAAgM,iBAIA,QAAAC,GAAAC,GACA,MAAA9T,GAAAnC,KACAkH,KAAA,IAAA+O,EAAAA,EAAA,OACA5Q,SAAAxE,KAAA,SAAAX,GACA,MAAAA,GAAAsE,OAIA,QAAA0R,GAAAC,EAAAC,EAAAC,EAAAC,GACAvM,EAAAyD,WAAA+I,cAAAJ,EAAAhK,KAIA,QAAAqK,GAAAP,GACA,MAAA1T,GAAAvC,KACAkH,KAAA,IAAA+O,EAAAA,EAAA,OACA5Q,SAAAxE,KAAA,SAAAX,GACA,MAAAA,GAAAsE,OAIA,QAAAiS,GAAAN,EAAAC,EAAAC,EAAAC,GACAvM,EAAAyD,WAAAmI,aAAAQ,EAAAhK,KA5HA,GAAApC,GAAA7F,IAEA6F,GAAAmL,aAAAnI,EAAA5C,SAEAJ,EAAAoL,gBAAA,EACApL,EAAAyL,iBAAA,EACAzL,EAAAmD,SAAA5J,EAAAqB,KAAArB,EAAAqB,KAAA,GAEAoF,EAAA6L,QAAA,EACA7L,EAAA+L,SAAA,EAEA/L,EAAAyD,cACAzD,EAAAqL,kBACArL,EAAA8L,eACA9L,EAAAgM,iBAEAhM,EAAA4K,OAAAA,EACA5K,EAAA8K,eAAAA,EACA9K,EAAA+K,YAAAA,EACA/K,EAAAiM,qBAAAA,EACAjM,EAAAmM,sBAAAA,EACAnM,EAAAyM,mBAAAA,EACAzM,EAAA0M,qBAAAA,EAGA1M,EAAAiL,OAAAA,EAhCAzV,QACAC,OAAA,oBACA+K,WAAA,wBAAAkK,GAEAA,EAAAhV,SAAA,eAAA,qBAAA,kBAAA,iBAAA,kBAAA,YAAA,oBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,UACAyL,UAAA,EACAzP,OAAA,QATA1H,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAMA,SAAAkX,KAGA,QAAAC,GAAAC,EAAAF,GACA,GAAAG,MAAAH,GACA,MAAAE,EAEA,IAAAF,GAAA,EACA,MAAA,EAEA,IAAAE,EAAA,CACA,GAAAE,GAAAF,EAAA5Q,MAAA,MACA8Q,GAAAhT,OAAA4S,IACAE,EAAAE,EAAA5N,MAAA,EAAAwN,GAAAK,KAAA,KAAA,OAGA,MAAAH,GAfA,MAAAD,GALArX,QACAC,OAAA,oBACAyX,OAAA,QAAAN,MCLA,WACA,YAMA,SAAAO,KAGA,QAAAC,GAAAN,EAAAO,EAAAC,GACA,GAAAP,MAAAM,GACA,MAAAP,EAEA,IAAAO,GAAA,EACA,MAAA,EAEA,IAAAP,GAAAA,EAAA9S,OAAAqT,EAAA,CAGA,GAFAP,EAAAA,EAAAS,UAAA,EAAAF,GAEAC,EAOA,KAAA,MAAAR,EAAAU,OAAAV,EAAA9S,OAAA,IACA8S,EAAAA,EAAAW,OAAA,EAAAX,EAAA9S,OAAA,OARA,CACA,GAAA0T,GAAAZ,EAAAa,YAAA,IAEAD,MAAA,IACAZ,EAAAA,EAAAW,OAAA,EAAAC,IAOA,MAAAZ,GAAA,MAEA,MAAAA,GAzBA,MAAAM,GALA5X,QACAC,OAAA,oBACAyX,OAAA,aAAAC,MCLA,WACA,YAMA,SAAAS,KAUA,QAAAnW,GAAAC,EAAAC,EAAAC,EAAAiW,GACAlW,EAAAmF,KAAA,QAAA,WACA+Q,EAAAC,KAAAlW,EAAAgW,YAXA,GAAA7V,IACAE,SAAA,IACAP,OAAA,EACAqW,QAAA,UACA5V,KAAAV,EAGA,OAAAM,GAZAvC,QACAC,OAAA,oBACAsC,UAAA,WAAA6V,MCLA,WACA,YAMA,SAAAI,KACA,GAAAjW,IACAE,SAAA,IACAP,OACAuW,UAAA,UACAC,UAAA,IACAxR,SAAA,KAEA8D,WAAA2N,EACAtM,aAAA,KACAuM,kBAAA,EAGA,OAAArW,GAKA,QAAAoW,GAAAvO,EAAAyO,GAWA,QAAAC,GAAA3W,GACA,GAAA4W,GAAA5W,EAAA6W,KAAA,kBACAC,EAAA,iBACAC,EAAA,+BACAC,EAAA,mCACAC,EAAAH,EAAA,IAAAE,EACAE,EAAAH,CACA1O,GAAAkO,YACAU,EAAAH,EAAA,IAAAC,EACAG,EAAAF,GAEA3O,EAAA8O,eACAP,EAAAzW,YAAA8W,GACAL,EAAA1W,SAAAgX,GAGA,QAAAC,KACA,GAAAC,GAAAV,EAAAG,KAAA,kBACAC,EAAA,iBACAC,EAAA,+BACAC,EAAA,kCACAI,GAAAjX,YAAA4W,EAAA,IAAAC,GACAI,EAAAlX,SAAA4W,GAGA,QAAAX,GAAAkB,GACAA,IAAAhP,EAAAiO,UACAjO,EAAAkO,WAAA,EAEAlO,EAAAkO,WAAAlO,EAAAkO,UAEAlO,EAAAiO,UAAAe,EACApP,EAAAmG,SACA/F,EAAAtD,WAGA,QAAAuS,GAAAC,GACAlP,EAAA8O,eACAI,GAAA,WAAAA,EAAA,IACAlP,EAAAsO,WAAAD,EAAAG,KAAA,kBAAAU,EAAA,GAAA,OAjDA,GAAAlP,GAAA7F,IAEA6F,GAAAsO,WAAAA,EACAtO,EAAA8O,aAAAA,EACA9O,EAAA8N,KAAAA,EACA9N,EAAAiP,aAAAA,EAEArP,EAAAuP,aAAA,eAAA,gBAAAnP,EAAAiP,cACAjP,EAAAiP,eA/BAzZ,QACAC,OAAA,oBACAsC,UAAA,SAAAiW,GAkBAG,EAAAzY,SAAA,SAAA,eCvBA,WACA,YAMA,SAAA0Z,KAQA,QAAAC,GAAAC,GACA,GAAA,IAAAA,EAAAtV,OACA,KAAA,IAAAkL,OAAA,mCAIA,IAAAqK,GAAAD,EAAApT,MAAA,KACAsT,IAoBA,OAlBAha,SAAAsO,QAAAyL,EAAA,SAAAE,GACA,GAAAC,GAAAD,EAAAvT,MAAA,KACA,IAAA,IAAAwT,EAAA1V,OACA,KAAA,IAAAkL,OAAA,qCAEA,IAAA/D,GAAAuO,EAAA,GAAA1X,QAAA,QAAA,MAAA2X,OACAC,IACAzO,GAAAnJ,QACA,GAAA6X,QAAA,uBAAA,KACA,SAAAC,EAAAC,EAAAC,EAAAC,GAAAL,EAAAG,GAAAE,GAEA,IAAArX,GAAAgX,EAAAhX,IACApD,SAAA0a,SAAAtX,KACAA,EAAAuX,SAAAvX,GAEA,IAAAuE,GAAAuS,EAAA,GAAA1X,QAAA,aAAA,MAAA2X,MACAH,GAAArS,GAAAvE,IAEA4W,EAjCA,GAAA3Z,IACAwZ,MAAAA,EAGA,OAAAxZ,GAVAL,QACAC,OAAA,oBACAe,QAAA,aAAA4Y,MCLA,WACA,YAMA,SAAAgB,KAUA,QAAAC,GAAAvC,GACA,GAAAwC,GAAAxC,EAAA5R,MAAA,IACA,SAAAoU,EAAAtW,OAAA,IACA,QAAA8T,EAAA5R,MAAA,KAAAkD,OAAA,GAAA,GAQA,QAAAmR,GAAA3X,GACA,MAAAuX,UAAAvX,GAIA,QAAA4X,GAAA1C,GACA,GAAAwC,GAAAxC,EAAA5R,MAAA,IAIA,OAHAoU,GAAAtW,OAAA,GACAsW,EAAAG,MAEAH,EAAArD,KAAA,KA7BA,GAAApX,IACAwa,eAAAA,EACAE,UAAAA,EACAC,eAAAA,EAGA,OAAA3a,GAZAL,QACAC,OAAA,oBACAe,QAAA,iBAAA4Z,MCLA,WACA,YAEA,IAAAM,IACAxY,SAAA,2mBAQAyY,UACA/X,KAAA,IACAgY,WAAA,SACAC,aAAA,KAIArb,SACAC,OAAA,oBACAqb,UAAA,eAAAJ,MCrBA,WACA,YAEAlb,SACAC,OAAA,oBACAsb,SAAA,iBAAA,WACA,GAAAC,GAAA,kCACA,QACAC,wBAAAD,EAAA,sBACAE,wBAAAF,EAAA,sBACAG,qBAAAH,EAAA,2BCVA,WACA,YAQA,SAAAI,GAAAC,GAWA,QAAAC,GAAAC,GACA,MAAAA,GACA,GAAAhG,MAAAgG,GAEA,KAIA,QAAAC,GAAAD,GACA,GAAAA,EAAA,CACA,GAAAE,GAAAF,EAAArV,MAAA,IACA,OAAA,IAAAqP,MAAAkG,EAAA,GAAAA,EAAA,GAAA,EAAAA,EAAA,IAEA,MAAA,MAGA,QAAAC,GAAAH,GACA,MAAAA,GACAF,EAAA,QAAAE,EAAA,cAEA,KAIA,QAAAI,KACA,MAAA,aAlCA,GAAA9b,IACAyb,0BAAAA,EACAE,2BAAAA,EACAE,yBAAAA,EACAC,WAAAA,EAGA,OAAA9b,GAfAL,QACAC,OAAA,oBACAe,QAAA,YAAA4a,GAEAA,EAAA1b,SAAA,cCPA,WACA,YAQA,SAAAkc,GAAAC,GAWA,QAAAC,GAAA3L,GACA,MAAA3Q,SAAA0a,SAAA/J,GAGAA,EAAAnM,OAAA,GACAmM,EAEAA,EAAAA,EAAAoH,UAAA,EAAA,IAAA,MAAApH,EAAA/G,OAAA,IAAA,GALA,GAQA,QAAA2S,GAAAC,GAKA,QAAAC,GAAAC,EAAAC,GACA,MAAAA,GAAA/a,QAAA8a,EAAAC,EAAAnY,OAAAkY,EAAAlY,WAAA,EAGA,QAAAoY,GAAAJ,GACA,MAAAC,GAAA,KAAAD,GACA,EAEAC,EAAA,IAAAD,GACA,EAEA,EAGA,QAAAnZ,GAAAmZ,GACA,MAAAA,GAAAhY,OAAA,EAAA,EAAAoY,EAAAJ,GAGA,QAAAK,GAAAxZ,GACA,MAAAA,GAAAyZ,WAAAta,QAAA,wBAAA,KAAA,SAvBA,MAAAxC,SAAA0a,SAAA8B,GA0BAK,EAAAxZ,EAAAmZ,IAzBA,GA4BA,QAAAO,GAAA3N,EAAAzO,GACA0b,EAAAlU,KAAA,QAAAiH,EAAA,WAAAzO,EAAA,SAAA,wBAGA,QAAAqc,GAAAC,EAAA9V,GACA,GAAA+V,GAAA,GAAAC,WACAD,GAAAE,cAAAH,GACAC,EAAAG,OAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAE,OAAAjc,OAAA0W,OAAAqF,EAAAE,OAAAjc,OAAAK,QAAA,WAAA,UAAA4C,OACA2C,GAAAoW,IA1DA,GAAAld,IACAic,WAAAA,EACAC,SAAAA,EACAQ,SAAAA,EACAC,SAAAA,EAGA,OAAA3c,GAfAL,QACAC,OAAA,oBACAe,QAAA,YAAAob,GAEAA,EAAAlc,SAAA,cCPA,WACA,YAMA,SAAAud,KAGA,QAAAC,GAAApG,GAKA,MAJA,QAAAA,IACAA,EAAAA,EAAAqG,cACArG,EAAAA,EAAAS,UAAA,EAAA,GAAAnK,cAAA0J,EAAAS,UAAA,IAEAT,EAPA,MAAAoG,GALA1d,QACAC,OAAA,oBACAyX,OAAA,aAAA+F,MCLA,WAEA,YAMA,SAAAG,KAcA,QAAAC,GAAAvG,GAMA,IALA,GACAwG,GAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAFAC,EAAA,GAGA9Z,EAAA,EAEAA,EAAA+S,EAAA9S,QACAsZ,EAAAxG,EAAAgH,WAAA/Z,KACAwZ,EAAAzG,EAAAgH,WAAA/Z,KACAyZ,EAAA1G,EAAAgH,WAAA/Z,KAEA0Z,EAAAH,GAAA,EACAI,GAAA,EAAAJ,IAAA,EAAAC,GAAA,EACAI,GAAA,GAAAJ,IAAA,EAAAC,GAAA,EACAI,EAAA,GAAAJ,EAEAzG,MAAAwG,GACAI,EAAAC,EAAA,GACA7G,MAAAyG,KACAI,EAAA,IAGAC,EAAAA,EACAE,EAAAvG,OAAAiG,GACAM,EAAAvG,OAAAkG,GACAK,EAAAvG,OAAAmG,GACAI,EAAAvG,OAAAoG,EAGA,OAAAC,GAGA,QAAAG,GAAAlH,GACA,GACAwG,GAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAFAC,EAAA,GAGA9Z,EAAA,CAKA,KAFA+S,EAAAA,EAAA9U,QAAA,sBAAA,IAEA+B,EAAA+S,EAAA9S,QACAyZ,EAAAM,EAAA3c,QAAA0V,EAAAU,OAAAzT,MACA2Z,EAAAK,EAAA3c,QAAA0V,EAAAU,OAAAzT,MACA4Z,EAAAI,EAAA3c,QAAA0V,EAAAU,OAAAzT,MACA6Z,EAAAG,EAAA3c,QAAA0V,EAAAU,OAAAzT,MAEAuZ,EAAAG,GAAA,EAAAC,GAAA,EACAH,GAAA,GAAAG,IAAA,EAAAC,GAAA,EACAH,GAAA,EAAAG,IAAA,EAAAC,EAEAC,GAAAI,OAAAC,aAAAZ,GAEA,KAAAK,IACAE,GAAAI,OAAAC,aAAAX,IAEA,KAAAK,IACAC,GAAAI,OAAAC,aAAAV,GAIA,OAAAK,GA1EA,GAAAE,GAAA,oEAMAle,GACAme,OAAAA,EACAX,OAAAA,EAGA,OAAAxd,GAhBAL,QACAC,OAAA,oBACAe,QAAA,SAAA4c,MCNA,WACA,YAQA,SAAA9W,GAAAqO,GAYA,QAAAhN,KACA,OAAAwW,IACAA,EAAAxJ,EAAAhN,MACAuN,WAAA,EACA3J,YAAA,kCACAf,WAAA,kBACAqB,aAAA,KACA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,SACAlK,EAAAmK,eAIAwS,EAAApd,OAAAD,KACAsd,EACAA,IA3BA,GAAAve,IACA8H,KAAAA,GAGAwW,EAAA,KACAC,EAAA,WACAD,EAAA,KAGA,OAAAte,GAhBAL,QACAC,OAAA,oBACAe,QAAA,eAAA8F,GAEAA,EAAA5G,SAAA,gBCPA,WACA,YAQA,SAAA2e,GAAA9c,EAAA6E,EAAAkY,EAAAnY,EAAAmO,GAeA,QAAAC,KACAvK,EAAA9B,aACAqB,SAAA,KACAC,SAAA,KACAjB,YAAA,GAEAyB,EAAAuU,qBAAA,EACAjK,EAAAE,QAAA,UAGA,QAAAvM,GAAAuW,GACAA,EAAAC,iBACAtY,EAAA8B,OACAsB,SAAAS,EAAAT,SACAC,SAAAQ,EAAAR,SACAjB,WAAAyB,EAAAzB,aACAzH,KAAA,WAYA,GAXAkJ,EAAAuU,qBAAA,EACAjK,EAAAoK,QACA,aAAAtY,EAAAmE,QAAApD,MAAA,aAAAf,EAAAmE,QAAApD,MACA,gBAAAf,EAAAmE,QAAApD,MAAA,iBAAAf,EAAAmE,QAAApD,MACAf,EAAAgB,GAAA,QAGA7F,EAAAod,WAAA,yBAIAxY,EAAAmB,mBAAA,CACA,GAAAC,GAAApB,EAAAmB,kBACAnB,GAAAqB,qBACApB,EAAAgB,GAAAG,EAAAJ,KAAAI,EAAAlF,QAGA+D,EAAAgB,GAAAhB,EAAAmE,QAAApD,SAAAyX,QAAA,MACArZ,MAAA,WACAyE,EAAAuU,qBAAA,IAIA,QAAAxU,KACAuK,EAAAE,QAAA,UACApO,EAAAgB,GAAA,YAGA,QAAAyX,KACAvK,EAAAE,QAAA,UACApO,EAAAgB,GAAA,gBA7DA,GAAA4C,GAAA7F,IAEA6F,GAAAuU,qBAAA,EACAvU,EAAAuK,OAAAA,EACAvK,EAAA9B,eACA8B,EAAA/B,MAAAA,EACA+B,EAAAR,SAAA,KACAQ,EAAAD,SAAAA,EACAC,EAAAzB,YAAA,EACAyB,EAAA6U,qBAAAA,EACA7U,EAAAT,SAAA,KAEA+U,EAAA,WAAA9e,QAAAmC,QAAA,aAAAmd,UAnBAtf,QACAC,OAAA,oBACA+K,WAAA,kBAAA6T,GAEAA,EAAA3e,SAAA,aAAA,SAAA,WAAA,OAAA,wBCPA,WACA,YAQA,SAAAqf,GAAA1b,EAAA3C,EAAAc,EAAAwd,GAQA,QAAAC,KACA,GAAAna,GAAAzB,EAAA6B,OAEA,OADAJ,GAAAC,QAAAia,GACAla,EAAAO,QAGA,QAAA6Z,KACA,GAAApa,GAAAzB,EAAA6B,QACA0F,EAAApJ,EAAA2d,UAAAlf,IAAA,wBAIA,OAFA6E,GAAAC,QAAA6F,GAEA9F,EAAAO,QAnBA,GAAAxF,IACAof,OAAAA,EACAC,WAAAA,EAGA,OAAArf,GAZAL,QACAC,OAAA,oBACAe,QAAA,qBAAAue,GAEAA,EAAArf,SAAA,KAAA,QAAA,aAAA,gBCPA,WACA,YAYA,SAAA0f,KAGA,QAAAC,GAAAC,GACA,MAAAC,GAAAD,GAAAnY,KAHA,MAAAkY,GAOA,QAAAG,KAGA,QAAAC,GAAAH,GACA,MAAAC,GAAAD,GAAAI,IAHA,MAAAD,GAnBAjgB,QACAC,OAAA,oBACAyX,OAAA,sBAAAkI,GACAlI,OAAA,yBAAAsI,EAEA,IAAAD,IACAI,IAAAxY,KAAA,eCTA,WACA,YAQA,SAAAyY,GAAApe,EAAAud,EAAApU,GAUA,QAAAkV,GAAAC,GACAte,EAAAqJ,IAAAiV,GACAnV,EAAAI,IAAA+U,GAXA,GAAA9V,GAAA7F,IAEA6F,GAAA6V,eAAAA,EACA7V,EAAAuV,UAAA,KAEAR,EAAAE,SAAAne,KAAA,SAAAye,GACAvV,EAAAuV,UAAAA,IAbA/f,QACAC,OAAA,oBACA+K,WAAA,wBAAAoV,GAEAA,EAAAlgB,SAAA,aAAA,qBAAA,uBCPA,WACA,YAEAF,SACAC,OAAA,oBAMAsb,SAAA,aACA,UCXA,WACA,YAMA,SAAAgF,KASA,QAAAte,GAAAC,EAAAC,EAAAC,EAAAoe,GACAre,EAAA6W,KAAA,eAAAyH,KAAA,WACA,GAAAC,GAAA1gB,QAAAmC,QAAAwC,MACAgc,EAAAD,EAAA1H,KAAA,sDAEA2H,GAAAnc,OAAA,GACAmc,EAAAF,KAAA,WACA,GAAAG,GAAA5gB,QAAAmC,QAAAwC,MACAkc,EAAAD,EAAAE,KAAA;AACA5e,EAAAuE,OAAA,WACA,MAAA+Z,GAAAK,GAAAE,UAAAP,EAAAK,GAAAG,QACA,SAAAC,GACAP,EAAAQ,YAAA,YAAAD,SApBA,GAAA1e,IACAE,SAAA,IACA8V,QAAA,OACA5V,KAAAV,EAGA,OAAAM,GAXAvC,QACAC,OAAA,oBACAsC,UAAA,iBAAAge,MCLA,WACA,YAEAvgB,SACAC,OAAA,oBACAsb,SAAA,uBACAF,aAAA,QCNA,WACA,YAMA,SAAA8F,KASA,QAAAlf,GAAAC,EAAAC,EAAAC,EAAAgf,GACAA,IAIAA,EAAAC,YAAAF,SAAA,SAAAG,GACA,MAAAF,GAAAG,SAAAD,IAAAE,EAAAF,IAAAlf,EAAA+e,WAIA,QAAA1E,GAAAC,EAAAC,GACA,MAAAA,GAAA/a,QAAA8a,EAAAC,EAAAnY,OAAAkY,EAAAlY,WAAA,EAGA,QAAAoY,GAAAJ,GACA,MAAAC,GAAA,KAAAD,GACA,EAEAC,EAAA,IAAAD,GACA,EAEA,EAGA,QAAAgF,GAAAhF,GACA,MAAAA,GAAAhY,OAAA,EAAA,EAAAoY,EAAAJ,GAjCA,GAAAja,IACAE,SAAA,IACA8V,QAAA,WACA5V,KAAAV,EAGA,OAAAM,GAXAvC,QACAC,OAAA,oBACAsC,UAAA,WAAA4e,MCLA,WACA,YAMA,SAAAM,KASA,QAAAxf,GAAAC,EAAAC,EAAAC,EAAAgf,GACAA,IAIAA,EAAAC,YAAAI,SAAA,SAAAH,GACA,MAAAF,GAAAG,SAAAD,IAAAE,EAAAF,IAAAlf,EAAAqf,WAIA,QAAAhF,GAAAC,EAAAC,GACA,MAAAA,GAAA/a,QAAA8a,EAAAC,EAAAnY,OAAAkY,EAAAlY,WAAA,EAGA,QAAAoY,GAAAJ,GACA,MAAAC,GAAA,KAAAD,GACA,EAEAC,EAAA,IAAAD,GACA,EAEA,EAGA,QAAAgF,GAAAhF,GACA,MAAAA,GAAAhY,OAAA,EAAA,EAAAoY,EAAAJ,GAjCA,GAAAja,IACAE,SAAA,IACA8V,QAAA,WACA5V,KAAAV,EAGA,OAAAM,GAXAvC,QACAC,OAAA,oBACAsC,UAAA,WAAAkf,MCLA,WACA,YAiBA,SAAAC,GAAAtX,EAAAuX,EAAA5f,EAAAC,GAKA,QAAA4f,GAAAC,EAAA5a,EAAAtG,GACAsG,EAAAA,EAAAA,EAAA4a,EACArX,EAAAsX,OAAAtS,KACAmS,EAAAtI,KAEAjK,KAAA,SACA2S,IAAA9a,EACApE,OAAAlC,EACAqhB,QAAA,IACAC,MAAAN,EAAAO,UACAC,QAAA,GAEA3X,EAAAsX,SAhBA,GAAAtX,GAAA7F,IAEA6F,GAAAsX,SAmBA,IAAAM,GAAArgB,EAAAsgB,IAAA,6BAAA,SAAArD,EAAAsD,GACA,GAAA/d,EAEA,QADAya,EAAAuD,kBACAD,EAAA7Y,QAEA,IAAA,GACAmY,EAAA,uBAAA,6BACA,MAEA,KAAA,KACA,GAAAlY,GAAA8Y,OAAAC,KAAAH,EAAA5Y,WAAAgO,OAAA,SAAAoC,GACA,MAAAA,GAAAlY,QAAA,YAAAkY,EAAAtV,OAAA,YAAAA,WAAA,GAAAsV,EAAAlY,QAAA,aAAAkY,EAAAtV,OAAA,aAAAA,WAAA,IACA8T,OACAoK,EAAAJ,EAAA5Y,QAAAA,EAAA,IACAiZ,EAAAL,EAAA5Y,QAAAA,EAAA,GACA,IAAA1J,QAAA0a,SAAAgI,GAAA,CACA,GAAAE,GAAA5gB,EAAA6gB,QAAA,wBAAAF,EACAf,GAAAc,EAAAA,GAAAE,WAAAA,QACA,IAAAN,EAAA3hB,MAAA2hB,EAAA3hB,KAAAmiB,YACA,IAAAve,EAAA,EAAAA,EAAA+d,EAAA3hB,KAAAmiB,YAAAte,OAAAD,IAAA,CACA,GAAAwe,GAAAT,EAAA3hB,KAAAmiB,YAAAve,GAEAye,EAAAD,EAAAvJ,MAAAhX,QAAA,WAAA,MACAygB,EAAAjhB,EAAA6gB,QAAA,oBAAAE,EAAAG,WAAA,IAAAF,EACApB,GAAA,SAAAqB,EAAA,mBAAA,SAAAF,EAAAlB,SAAAoB,UAAAA,QAEAX,GAAA3hB,MAAA2hB,EAAA3hB,KAAAkhB,QACAD,EAAAU,EAAA3hB,KAAAkhB,QAAAS,EAAA3hB,KAAAkhB,QAAAS,EAAA3hB,MAEAihB,EAAAU,EAAA3hB,KAEA,MAEA,KAAA,KACAihB,EAAA,YAAA,sBACA,MAEA,SAEAA,EADAU,EAAA3hB,MAAA2hB,EAAA3hB,KAAAkhB,QACAS,EAAA3hB,KAAAkhB,QAEA7hB,QAAAmjB,OAAAb,MAKAlY,GAAAiY,IAAA,WAAA,WACAriB,QAAA4F,UAAAwc,IAAA,OAAAA,IACAA,IACA5X,EAAAsX,aAtFA,GAAAsB,IACA1gB,SAAA,8QAKAsI,WAAA0W,EAGA1hB,SACAC,OAAA,oBACAqb,UAAA,gBAAA8H,GAEA1B,EAAAxhB,SAAA,SAAA,eAAA,aAAA,iBChBA,WACA,YAMA,SAAAyhB,KAWA,QAAA0B,GAAAvE,EAAAwE,EAAAthB,GAoBA,QAAAkgB,KACA,MAAAD,GAGA,QAAAsB,KACAzB,KAGA,QAAArhB,KACA,MAAAqhB,GAGA,QAAA5X,GAAA6X,EAAAlf,EAAA2gB,GACA,MAAA7e,MAAA0U,KACAjK,KAAA,UACA2S,IAAAA,EACAlf,OAAAA,EACAmf,QAAAA,EACAC,MAAAA,EACAuB,SAAAA,IAIA,QAAAxT,GAAA+R,EAAAlf,EAAA2gB,GACA,MAAA7e,MAAA0U,KACAjK,KAAA,SACA2S,IAAAA,EACAlf,OAAAA,EACAmf,QAAAA,EACAC,MAAAA,EACAuB,SAAAA,IAIA,QAAAC,GAAA1B,EAAAlf,EAAA2gB,GACA,MAAA7e,MAAA0U,KACAjK,KAAA,UACA2S,IAAAA,EACAlf,OAAAA,EACAmf,QAAAA,EACAC,MAAAA,EACAuB,SAAAA,IAIA,QAAAE,GAAA3B,EAAAlf,EAAA2gB,GACA,MAAA7e,MAAA0U,KACAjK,KAAA,OACA2S,IAAAA,EACAlf,OAAAA,EACAmf,QAAAA,EACAC,MAAAA,EACAuB,SAAAA,IAIA,QAAAxiB,GAAA2iB,GACA,GAAA5W,IACAqC,KAAAuU,EAAAvU,KACA2S,IAAAuB,EAAAM,YAAAD,EAAA5B,KACAjf,GAAA6gB,EAAAE,QACA7B,QAAA2B,EAAA3B,QACAC,MAAA0B,EAAA1B,MACAuB,SAAAG,EAAAH,SAAAG,EAAAH,SAAA,YACArB,OAAAwB,EAAAxB,OACAjD,MAAA,SAAA4C,GACA,MAAAgC,GAAAnf,KAAA7B,GAAAgf,IAMA,OAHA/U,GAAAoV,QACAL,EAAAtS,KAAAzC,GAEAA,EAGA,QAAAgX,GAAAJ,EAAAK,GACAL,EAAAE,QAAAA,IACAF,EAAA5B,IAAA/f,EAAA6gB,QAAAc,EAAA5B,IAAA4B,EAAA9gB,OACA,IAAAohB,GAAAtf,KACAoI,EAAApI,KAAA3D,QAAA2iB,EAMA,OALAA,GAAA3B,SAAA2B,EAAA3B,QAAA,GACAlD,EAAA,WACAmF,EAAAH,WAAAH,EAAAE,QAAAG,IACAL,EAAA3B,SAEAjV,EAGA,QAAA+W,GAAAhhB,EAAAkhB,GACA,GAAAE,GAAAF,EAAAA,EAAAlC,CACA,OAAAqC,GAAAD,EAAApU,IAAA,SAAAwN,GAAA,MAAAA,GAAAxa,KAAAlB,QAAAkB,GAAAohB,GAGA,QAAAC,GAAA5V,EAAA2V,GACA,MAAAA,GAAAE,OAAA7V,EAAA,GAjHA,GAAA0T,GAAAtd,KAAAsd,MACA4B,EAAA,EACA/B,KACAE,EAAA,GAEA,QACAhhB,QAAAA,EACAkhB,QAAAA,EACA7I,IAAA0K,EACAD,WAAAA,EACAK,kBAAAA,EACAZ,MAAAA,EACA9iB,IAAAA,EACAyJ,QAAAA,EACA8F,MAAAA,EACA0T,KAAAA,EACAD,QAAAA,GA3BA9e,KAAAsd,OAAA,EAEAtd,KAAA0f,KAAAhB,EAEA1e,KAAA2f,YAAA,SAAApC,GACAvd,KAAAsd,MAAAC,GAGAmB,EAAAnjB,SAAA,WAAA,OAAA,cAbAF,QACAC,OAAA,oBACAskB,SAAA,eAAA5C,MCLA,WACA,YAiBA,SAAA6C,GAAApa,EAAAuX,GACA,GAAAnX,GAAA7F,IAEA6F,GAAAsX,OAAAH,EAAAlhB,MACA2J,EAAAiY,IAAA,WAAA,WACA7X,EAAAsX,YApBA,GAAA2C,IACA/hB,SAAA,wRAKAsI,WAAAwZ,EAGAxkB,SACAC,OAAA,oBACAqb,UAAA,WAAAmJ,GAEAD,EAAAtkB,SAAA,SAAA,mBChBA,WACA,YAQA,SAAAwkB,GAAA7gB,EAAA8d,GAOA,QAAAlgB,GAAAA,GACA,GAAAiI,GAAA8Y,OAAAC,KAAAhhB,EAAAiI,WAAAgO,OAAA,SAAAoC,GACA,MAAAA,GAAAlY,QAAA,YAAAkY,EAAAtV,OAAA,YAAAA,WAAA,GAAAsV,EAAAlY,QAAA,aAAAkY,EAAAtV,OAAA,aAAAA,WAAA,IACA8T,OACAqM,EAAAljB,EAAAiI,QAAAA,EAAA,GAIA,OAHA1J,SAAA0a,SAAAiK,IACAhD,EAAAzX,QAAAya,GAAAC,MAAAnjB,EAAAiI,QAAAA,EAAA,MAEAjI,EAdA,GAAApB,IACAoB,SAAAA,EAGA,OAAApB,GAXAL,QACAC,OAAA,oBACAe,QAAA,0BAAA0jB,GAEAA,EAAAxkB,SAAA,KAAA,mBCPA,WACA,YAQA,SAAA2kB,GAAAhhB,EAAA9B,GAOA,QAAA+iB,GAAArjB,GAIA,MAHA,OAAAA,EAAAgI,SAAA,KAAAhI,EAAAd,MAAAc,EAAAd,KAAAokB,MAAA,IAAAtjB,EAAAd,KAAAokB,KAAAnjB,QAAA,kBACAG,EAAAijB,MAAA,6BAAAvjB,GAEAoC,EAAA+E,OAAAnH,GAVA,GAAApB,IACAykB,cAAAA,EAGA,OAAAzkB,GAXAL,QACAC,OAAA,oBACAe,QAAA,0BAAA6jB,GAEAA,EAAA3kB,SAAA,KAAA,iBCPA,WACA,YAQA,SAAA+kB,GAAAljB,EAAA8B,EAAAqhB,EAAAnhB,EAAAC,GAOA,QAAA8gB,GAAArjB,GACA,GAAA,MAAAA,EAAAgI,OAAA,OACA1F,GAAA0B,0BACAzB,GAAAyB,mBACA,IAAA7B,GAAAshB,EAAAzkB,IAAA,YACA,IAAAmD,EAAAoC,kBAAA,CACA,GAAAW,GAAAue,EAAAzkB,IAAA,OACAkG,GAAAY,WAAA,IAGA,MAAA1D,GAAA+E,OAAAnH,GAhBA,GAAApB,IACAykB,cAAAA,EAGA,OAAAzkB,GAXAL,QACAC,OAAA,oBACAe,QAAA,yBAAAikB,GAEAA,EAAA/kB,SAAA,aAAA,KAAA,YAAA,gBAAA,sBCPA,WACA,YAQA,SAAAilB,GAAApjB,EAAA8B,EAAAuhB,EAAArhB,EAAAC,GAOA,QAAAqhB,GAAAjZ,GACA,IAAAA,IAAAA,EAAAT,KAAA,QAAA2Z,KAAAlZ,EAAAT,KAAA,MAAAS,EAIAA,GAAA1C,QAAA0C,EAAA1C,YAGA0C,EAAAT,IAAA/J,QAAA,SAAA,IACAwK,EAAAT,IAAAuB,WAAAC,QAAA,IAAAf,EAAAT,IAGA,IAAA7B,GAAA/F,EAAA0B,qBAAAzB,EAAAyB,mBAIA,OAHAqE,KACAsC,EAAA1C,QAAA6b,cAAA,UAAAzb,GAEAsC,EAtBA,GAAA/L,IACAglB,QAAAA,EAGA,OAAAhlB,GAXAL,QACAC,OAAA,oBACAe,QAAA,kBAAAmkB,GAEAA,EAAAjlB,SAAA,aAAA,KAAA,YAAA,gBAAA,sBCPA,WACA,YAQA,SAAAJ,GAAAiC,EAAAsa,EAAAzV,EAAA5E,GAMA,QAAAjC,KAEA,GAAAylB,GAAAzjB,EAAAsgB,IAAA,0BAAA,WACAoD,KAGA1jB,GAAAsgB,IAAA,WAAA,WACAriB,QAAA4F,UAAA4f,IAAA,OAAAA,GACAA,MAWA,QAAAC,GAAAC,IACAA,GAAA9e,EAAA+e,SAAAhlB,MAAAiG,EAAA+e,SAAAhlB,KAAAiL,YACA8Z,EAAA9e,EAAA+e,SAAAhlB,KAAAiL,WAEA5J,EAAA0jB,GAAA,gBAAApkB,KAAA,SAAAskB,GACAvJ,EAAAwJ,SAAAD,MAAAA,IA7BA,OACA7lB,WAAAA,EACA0lB,YAAAA,GATAzlB,QACAC,OAAA,oBACAe,QAAA,qBAAAlB,GAEAA,EAAAI,SAAA,aAAA,UAAA,SAAA,iBCPA,WACA,YASA,SAAAL,GAAAkC,EAAA6E,EAAA5C,EAAAhC,EAAAud,EAAAzf,EAAAuc,EACA1V,EAAA/C,EAAAkiB,GAKA,QAAA/lB,KACAgC,EAAA+jB,QAAAA,CAEA,IAAAC,GAAAhkB,EAAAsgB,IAAA,oBAAA,SAAArD,EAAAvX,EAAAS,EAAAL,GACA9F,EAAA0F,QAAAA,EACA1F,EAAAmG,cAAAA,EACAnG,EAAA8F,UAAAA,EAGAJ,EAAAue,WACAhH,EAAAC,iBACA5C,EAAAlU,KAAAV,EAAAkE,IAAA,UAGA/H,EAAAqC,sBACAU,EAAAY,YAIAgY,EAAAG,aAAApe,KAAA,SAAA8J,GACApJ,EAAAqJ,IAAAD,OAIA6a,EAAAlkB,EAAAsgB,IAAA,sBAAA,SAAArD,EAAAvX,EAAAye,EAAAre,EAAAse,GACA,GAAAT,GAAA,cAGAje,GAAA9G,KAAAiL,YACA8Z,EAAAje,EAAA9G,KAAAiL,WAEA9L,EAAA2lB,YAAAC,IAGA3jB,GAAAsgB,IAAA,WAAA,WACAriB,QAAA4F,UAAAmgB,IAAA,OAAAA,GACAA,IAEA/lB,QAAA4F,UAAAqgB,IAAA,OAAAA,GACAA,MA3CA,OACAlmB,WAAAA,GAVAC,QACAC,OAAA,oBACAe,QAAA,eAAAnB,GAEAA,EAAAK,SAAA,aAAA,SAAA,kBAAA,aAAA,qBAAA,qBAAA,UACA,OAAA,YAAA,cCRA,WACA,YAQA,SAAAkmB,GAAAC,EAAAC,GACAD,EAAAhL,aAAAiL,EAAAjL,aACAgL,EAAAE,QAAA,EACAF,EAAAG,eAAA,EACAH,EAAAI,UAAA,IACAJ,EAAAK,aAAA,IACAL,EAAAM,SAAA,IACAN,EAAAO,SAAA,IAbA5mB,QACAC,OAAA,oBACAmM,OAAAga,GAEAA,EAAAlmB,SAAA,sBAAA,0BCPA,WACA,YAQA,SAAA2mB,GAAAC,EAAAR,GACAQ,EAAAzL,aAAAiL,EAAAjL,aACAyL,EAAAJ,aAAA,IACAI,EAAAH,SAAA,IATA3mB,QACAC,OAAA,oBACAmM,OAAAya,GAEAA,EAAA3mB,SAAA,iBAAA,0BCPA,WACA,YAQA,SAAA6mB,GAAAC,EAAAC,EAAAzH,GAMA,QAAA/e,GAAAkH,GAKA,MAJA6X,GAAA5d,QAAAolB,EAAAE,UAAAvf,OAAA,IACAsf,EAAAvD,KAAA,sCAAAsD,EAAAE,UAAAvf,GAAA,gCACAqf,EAAAG,UAAAxf,EAAA,OAEAqf,EAAAE,UAAAvf,GAGA,QAAAyf,GAAAzf,EAAA0f,GACAL,EAAAG,UAAAxf,EAAA0f,GAdA,OACA5mB,IAAAA,EACA2mB,IAAAA,GATApnB,QACAC,OAAA,oBACAe,QAAA,6BAAA+lB,GAEAA,EAAA7mB,SAAA,WAAA,OAAA,gBCPA,WACA,YAQA,SAAAonB,GAAAC,EAAAC,EAAAC,GAEAF,EAAAG,UAAA,2BACAC,YAAA,2BAAAF,EAAA,UAAAA,EAAA,MAGAF,EAAAK,kBAAA,MACAL,EAAAM,WAAA,8BACAN,EAAAO,yBAAA,WACAP,EAAAQ,iBAAA,wCAEAP,EAAAQ,sBAAA,qCACAR,EAAAS,mBACAT,EAAAU,WAAA,yBAnBAloB,QACAC,OAAA,oBACAmM,OAAAkb,GAEAA,EAAApnB,SAAA,qBAAA,2BAAA,sBCPA,WACA,YAQA,SAAAioB,GAAAC,EAAAC,GACAD,EAAAE,aAAA,QACAD,EAAAC,aAAA,QARAtoB,QACAC,OAAA,oBACAmM,OAAA+b,GAEAA,EAAAjoB,SAAA,wBAAA,8BCPA,WACA,YAQA,SAAAqoB,GAAAC,EAAAC,EAAAC,EAAAC,GAEAD,EAAAE,cAAA,UAAA,kBAAA,GAEAJ,EAAAK,UAAA,KAEAJ,EAAAK,aAAAtZ,KAAA,2BACAiZ,EAAAK,aAAAtZ,KAAA,0BACAiZ,EAAAK,aAAAtZ,KAAA,mBACAiZ,EAAAK,aAAAtZ,KAAA,2BAGAmZ,EAAAvZ,KAAA,WACAzH,KAAA,UACA6W,OAAA,SAAA9H,GAAA,MAAAA,MAAA,GAAA,SAAAA,GACAmH,OAAA,SAAAnH,GAAA,MAAAA,GAAA,EAAA,GACAqS,OAAA,SAAAC,EAAAC,GAAA,MAAAtkB,MAAAukB,GAAAF,IAAAA,IAAAC,GACAC,GAAA,SAAAxS,GAAA,QAAA,GAAA,EAAA,EAAA,GAAA9U,QAAA8U,IAAA,GACAyS,QAAA,kBAxBAnpB,QACAC,OAAA,oBACAmM,OAAAmc,GAEAA,EAAAroB,SAAA,qBAAA,gBAAA,4CAAA,iCCPA,WACA,YAQA,SAAAkpB,GAAAC,EAAAC,GAEAD,EAAAE,iBAAAD,GARAtpB,QACAC,OAAA,oBACAmM,OAAAgd,GAEAA,EAAAlpB,SAAA,mBAAA,yBCPA,WACA,YAQA,SAAAspB,GAAAC,GAEAA,EAAAnF,aAAA,GARAtkB,QACAC,OAAA,oBACAmM,OAAAod,GAEAA,EAAAtpB,SAAA,2BCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,OACAyL,UAAA,EACAtL,OACA6d,WACA3d,YAAA,iCACAf,WAAA,mBACAqB,aAAA,OAGA9G,SACAgC,WAAA,OACA,SAAAZ,GACA,MAAAA,GAAAY,cAGAyE,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GACAA,EAAAC,QAAA,eAvBAlM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAEAF,SACAC,OAAA,oBACAsb,SAAA,UAAA,kBACAA,SAAA,sBAAA,GACAA,SAAA,kBAAA,kBCPA,WACA,YAQA,SAAAoO,GAAAnc,EAAAsH,EAAA8U,EAAAzpB,EAAAof,GAcA,QAAAgE,KACAzO,EAAAE,QAAA,UAGA,QAAA6U,GAAAtoB,GACAiJ,EAAAsf,UAAA,EACAhV,EAAAoK,MAAA3d,GAGA,QAAAwoB,KACAvf,EAAAsf,UAAA,EAGA,QAAAjpB,KACA2J,EAAAsf,UAAA,EACA,OAAAtf,EAAAwf,KAAAlnB,GACA3C,EAAAW,OAAA0J,EAAAwf,KAAAH,EAAAE,GAEA5pB,EAAAU,KAAA2J,EAAAwf,KAAAH,EAAAE,GA/BA,GAAAvf,GAAA7F,IAEA6F,GAAAlG,aAAA,YAAA,cACAkG,EAAA+Y,MAAAA,EACA/Y,EAAAuV,UAAA,KACAvV,EAAA3J,KAAAA,EACA2J,EAAAwf,KAAAJ,EAGArK,EAAAE,SAAAne,KAAA,SAAAye,GACAvV,EAAAuV,UAAAA,IAjBA/f,QACAC,OAAA,oBACA+K,WAAA,iCAAA2e,GAEAA,EAAAzpB,SAAA,eAAA,oBAAA,SAAA,OAAA,yBCPA,WACA,YAQA,SAAA+pB,GAAAzc,EAAArN,GAQA,QAAA+pB,GAAAzhB,GACAtI,EAAAM,KAAAgI,MAAAA,GAAA,SAAAlH,GACAiJ,EAAAwf,KAAAzoB,IATA,GAAAiJ,GAAA7F,IAEA6F,GAAA0f,KAAAA,EACA1f,EAAAwf,QAEAxf,EAAA0f,KAAA1c,EAAA/E,OAZAzI,QACAC,OAAA,oBACA+K,WAAA,iCAAAif,GAEAA,EAAA/pB,SAAA,eAAA,WCPA,WACA,YAQA,SAAAiqB,GAAArV,EAAA8U,EAAAzpB,GAOA,QAAAojB,KACAzO,EAAAE,QAAA,UAGA,QAAAoV,GAAA3hB,GACAtI,EAAAY,QAAA0H,MAAAA,GACA,WACAqM,EAAAoK,OAAA,KAbA,GAAA1U,GAAA7F,IAEA6F,GAAAwf,KAAAJ,EACApf,EAAA+Y,MAAAA,EACA/Y,EAAA4f,cAAAA,EAXApqB,QACAC,OAAA,oBACA+K,WAAA,iCAAAmf,GAEAA,EAAAjqB,SAAA,oBAAA,SAAA,WCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EACAC,MAAA,mBACAhE,OAAA,QACAiE,IAAA,6BACAhL,MACA2D,aAAA,cACAsH,UAAA,6BAEAC,OACAC,YACAC,YAAA,iDACAf,WAAA,2BACAqB,aAAA,OAEAxJ,QACAO,MACAikB,MAAA,IACAgD,QAAA,GAEA/R,MACA+O,MAAA,SACAgD,QAAA,IAGA9kB,SACA+kB,cAAA,eAAA,iBAAA,SAAA9c,EAAAoN,GACA,OACAxX,KAAAwX,EAAAG,UAAAvN,EAAApK,MACAkV,KAAA9K,EAAA8K,KACAG,UAAAmC,EAAAI,eAAAxN,EAAA8K,MACAI,UAAAkC,EAAAC,eAAArN,EAAA8K,SAGAtM,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,mBACAlK,EAAAmK,eAIAT,MAAA,uBACAC,IAAA,OACAhL,MACA2D,aAAA,eAEAimB,SAAA,eAAA,SAAA,YAAA,SAAA/c,EAAA5G,EAAAuO,GACAA,EAAAhN,MACA4D,YAAA,wDACAf,WAAA,iCACAqB,aAAA,KACAme,SAAA,SACAnnB,KAAA,KACAkC,SACAqkB,OAAA,WACA,OACA9mB,GAAA,KAAA2F,MAAA,KAAAgiB,UAAA,KAAAC,SAAA,KAAAC,MAAA,KACAC,WAAA,EAAAC,QAAA,KAAAC,UAAA,KAAAC,YAAA,KACAC,eAAA,KAAAC,iBAAA,KAAAC,UAAA,KACAC,SAAA,KAAA7mB,YAAA,UAIA/C,OAAAD,KAAA,WACAsF,EAAAgB,GAAA,kBAAA,MAAAwX,QAAA,KACA,WACAxY,EAAAgB,GAAA,yBAIA8D,MAAA,wBACAC,IAAA,gBACAhL,MACA2D,aAAA,eAEAimB,SAAA,eAAA,SAAA,YAAA,SAAA/c,EAAA5G,EAAAuO,GACAA,EAAAhN,MACA4D,YAAA,wDACAf,WAAA,iCACAqB,aAAA,KACAme,SAAA,SACAnnB,KAAA,KACAkC,SACAqkB,QAAA,OAAA,SAAAzpB,GACA,MAAAA,GAAAM,KAAAgI,MAAA+E,EAAA/E,QAAA3C,cAGAvE,OAAAD,KAAA,WACAsF,EAAAgB,GAAA,kBAAA,MAAAwX,QAAA,KACA,WACAxY,EAAAgB,GAAA,WAIA8D,MAAA,0BACAhE,OAAA,kBACAiE,IAAA,WACAhL,MACA2D,aAAA,cACAsH,UAAA,gCAEAC,OACAC,YACAC,YAAA,wDACAf,WAAA,iCACAqB,aAAA,OAGA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,mBACAlK,EAAAmK,eAIAT,MAAA,0BACAC,IAAA,kBACAhL,MACA2D,aAAA,eAEAimB,SAAA,eAAA,SAAA,YAAA,SAAA/c,EAAA5G,EAAAuO,GACAA,EAAAhN,MACA4D,YAAA,+DACAf,WAAA,iCACAqB,aAAA,KACAhJ,KAAA,KACAkC,SACAqkB,QAAA,OAAA,SAAAzpB,GACA,MAAAA,GAAAM,KAAAgI,MAAA+E,EAAA/E,QAAA3C,cAGAvE,OAAAD,KAAA,WACAsF,EAAAgB,GAAA,kBAAA,MAAAwX,QAAA,KACA,WACAxY,EAAAgB,GAAA,WA3IA5H,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAAkrB,GAAAxnB,EAAAzD,EAAAyZ,EAAA+H,EAAA/a,EAAA0jB,EAAAhE,EAAA/G,GA2BA,QAAA8L,GAAArB,EAAAsB,GACAtB,EAAAY,UAAAU,EACAnrB,EAAAW,OAAAkpB,EAAA,WACAxf,EAAA+gB,UACA/gB,EAAA+Y,UAIA,QAAAgI,KACAprB,EAAAG,OACA8C,KAAAknB,EAAAlnB,KAAA,EACAC,KAAAmH,EAAA6Q,aACA/C,KAAAA,KACAkT,EAAAC,GAGA,QAAAD,GAAA7qB,EAAA+I,GACAc,EAAAwP,MAAAJ,EAAAC,MAAAnQ,EAAA,SACAc,EAAAkhB,WAAAhiB,EAAA,iBACAc,EAAA4Q,WAAA5Q,EAAAkhB,WACAlhB,EAAApH,KAAAknB,EAAAlnB,KACAoH,EAAAmhB,MAAAhrB,EAGA,QAAA8qB,GAAAzb,GACA2R,EAAA3R,MAAAA,EAAArP,KAAAkhB,SAGA,QAAA0B,KACA/Y,EAAAwf,MACAlnB,GAAA,KAAA2F,MAAA,KAAAgiB,UAAA,KAAAC,SAAA,KAAAC,MAAA,KACAC,UAAA,KAAAC,QAAA,KAAAC,UAAA,KAAAC,YAAA,KACAC,eAAA,KAAAC,iBAAA,KAAAC,UAAA,KACAC,SAAA,KAAA7mB,YAAA,MAIA,QAAAgU,KACA,GAAA/W,IAAAiJ,EAAAiO,UAAA,KAAAjO,EAAAohB,QAAA,MAAA,QAIA,OAHA,OAAAphB,EAAAiO,WACAlX,EAAAiO,KAAA,MAEAjO,EAGA,QAAAsqB,GAAAzoB,GACAoH,EAAApH,KAAAA,EACAoH,EAAAshB,aAGA,QAAAA,KACAllB,EAAAmlB,aAAAnlB,EAAA+e,UACAviB,KAAAoH,EAAApH,KACAkV,KAAA9N,EAAAiO,UAAA,KAAAjO,EAAAohB,QAAA,MAAA,QACAxW,OAAA5K,EAAAwhB,gBAhFA,GAAAxhB,GAAA7F,IAEA6F,GAAAlG,aAAA,YAAA,cACAkG,EAAAyhB,eAAA,KACAzhB,EAAAuV,UAAA,KACAvV,EAAA+gB,QAAAA,EACA/gB,EAAA6gB,UAAAA,EACA7gB,EAAAmhB,SACAnhB,EAAApH,KAAA,EACAoH,EAAAkhB,WAAA,KACAlhB,EAAA+Y,MAAAA,EACA/Y,EAAAwP,MAAA,KACAxP,EAAAqhB,SAAAA,EACArhB,EAAAiO,UAAA6R,EAAA7R,UACAjO,EAAAohB,QAAAtB,EAAA5R,UACAlO,EAAA6Q,aAAAiL,EAAAjL,aACA7Q,EAAAshB,WAAAA,EAEAthB,EAAA+gB,UACAhM,EAAAE,SAAAne,KAAA,SAAAye,GACAvV,EAAAuV,UAAAA,IAEAnc,EAAAM,WAAA5C,KAAA,SAAA0D,GACAwF,EAAAyhB,eAAAjnB,IA9BAhF,QACAC,OAAA,oBACA+K,WAAA,2BAAAogB,GAEAA,EAAAlrB,SAAA,YAAA,OAAA,aAAA,eAAA,SAAA,eAAA,sBAAA,yBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,eACAhE,OAAA,QACAiE,IAAA,WACAhL,MACA2D,aAAA,cACAsH,UAAA,iBAEAC,OACAC,YACAC,YAAA,iCACAf,WAAA,iCACAqB,aAAA,OAGA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,WACAlK,EAAAmK,eAxBAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAAgsB,GAAAnqB,EAAAb,GAQA,QAAAirB,KACA,MAAAjrB,GAAAT,IAAA,sBAAAa,KAAA,SAAAG,GACA,MAAAA,GAAAd,OAIA,QAAAyrB,KACA,MAAAlrB,GAAAT,IAAA,mBAAAa,KAAA,SAAAG,GACA,MAAAA,GAAAd,OAfA,GAAAN,IACA8rB,WAAAA,EACAC,WAAAA,EAGA,OAAA/rB,GAZAL,QACAC,OAAA,oBACAe,QAAA,oBAAAkrB,GAEAA,EAAAhsB,SAAA,aAAA,YCPA,WACA,YAQA,SAAAmsB,GAAAvX,EAAAsX,GA2BA,QAAArX,KACAD,EAAAE,QAAA,UAGA,QAAAsX,GAAAC,GACA,MAAA,aAAAA,EACA,gBACA,YAAAA,EACA,aACA,kBAAAA,EACA,gBACA,YAAAA,EACA,eADA,OArCA,GAAA/hB,GAAA7F,IAEA6F,GAAAuK,OAAAA,EACAvK,EAAA8hB,cAAAA,EACA9hB,EAAA4hB,WAAAA,EACA5hB,EAAAgiB,cAAA,EACAhiB,EAAAiiB,kBAAA,EACAjiB,EAAAkiB,mBAAA,EACAliB,EAAAmiB,uBAAA,EACAniB,EAAAoiB,kBAAA,EAEA5sB,QAAAsO,QAAA8d,EAAA,SAAA/E,GACA,aAAAA,EAAAkF,YACA/hB,EAAAkiB,oBAAA,EACA,YAAArF,EAAAkF,YACA/hB,EAAAoiB,mBAAA,EACA,kBAAAvF,EAAAkF,YACA/hB,EAAAmiB,wBAAA,EACA,YAAAtF,EAAAkF,cACA/hB,EAAAiiB,mBAAA,KAIAjiB,EAAAgiB,cAAAhiB,EAAAkiB,mBAAAliB,EAAAoiB,kBACApiB,EAAAmiB,uBAAAniB,EAAAiiB,kBA/BAzsB,QACAC,OAAA,oBACA+K,WAAA,sCAAAqhB,GAEAA,EAAAnsB,SAAA,oBAAA,iBCPA,WACA,YAQA,SAAA2sB,GAAAziB,EAAA8hB,EAAA/W,GAqBA,QAAAhJ,KACA3B,EAAAsiB,iBAAA,EACAZ,EAAAC,aAAA7qB,KAAA,SAAAuE,GACA2E,EAAAuiB,QAAAlnB,EACA2E,EAAAsiB,iBAAA,GACA,SAAAjnB,GACA2E,EAAAuiB,QAAAlnB,EAAAlF,KACA6J,EAAAsiB,iBAAA,IAIA,QAAAE,KACAd,EAAAE,aAAA9qB,KAAA,SAAAX,GACAwU,EAAAhN,MACA4D,YAAA,uCACAf,WAAA,sCACAqB,aAAA,KACAhJ,KAAA,KACAkC,SACA6mB,WAAA,WACA,MAAAzrB,SAxCA,GAAA6J,GAAA7F,IAEA6F,GAAAuiB,WACAviB,EAAA2B,QAAAA,EACA3B,EAAAwiB,sBAAAA,EACAxiB,EAAAyiB,iBACAziB,EAAAsiB,iBAAA,EAEAtiB,EAAA2B,UAEA/B,EAAA3D,OAAA,aAAA,SAAAymB,GACA1iB,EAAAyiB,iBACAjtB,QAAAsO,QAAA4e,EAAAC,OAAA,SAAA9F,EAAApgB,IACAA,EAAAmmB,SAAA,aAAAnmB,EAAAmmB,SAAA,cACA5iB,EAAAyiB,cAAAhmB,GAAAogB,OArBArnB,QACAC,OAAA,oBACA+K,WAAA,iCAAA6hB,GAEAA,EAAA3sB,SAAA,SAAA,oBAAA,gBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,QACAhE,OAAA,QACAiE,IAAA,QACAhL,MACA2D,aAAA,cACAsH,UAAA,cAEAC,OACAC,YACAC,YAAA,2BACAf,WAAA,iBACAqB,aAAA,OAGA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,QACAlK,EAAAmK,eAxBAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAAmtB,GAAAjtB,GACA,GAAAC,GAAAD,EAAA,sBACAktB,SAAA/sB,OAAA,MAAAC,SAAA,GACA+sB,aAAAhtB,OAAA,QAGA,OAAAF,GAZAL,QACAC,OAAA,oBACAe,QAAA,cAAAqsB,GAEAA,EAAAntB,SAAA,gBCPA,WACA,YAQA,SAAAstB,GAAAH,GAMA,QAAAE,GAAA5lB,EAAA8lB,GACAJ,EAAAE,aAAA5lB,KAAAA,EAAA8lB,MAAAA,GAAA,WACAjjB,EAAAkjB,QAAAL,EAAAC,YAPA,GAAA9iB,GAAA7F,IAEA6F,GAAA+iB,YAAAA,EACA/iB,EAAAkjB,QAAAL,EAAAC,UAVAttB,QACAC,OAAA,oBACA+K,WAAA,iBAAAwiB,GAEAA,EAAAttB,SAAA,kBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,cACAhE,OAAA,QACAiE,IAAA,UACAhL,MACA2D,aAAA,cACAsH,UAAA,gBAEAC,OACAC,YACAC,YAAA,+BACAf,WAAA,2BACAqB,aAAA,OAGA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,UACAlK,EAAAmK,eAxBAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAAytB,GAAA5rB,EAAAb,GAWA,QAAA0sB,KACA,MAAA1sB,GAAAT,IAAA,qBAAAa,KAAA,SAAAG,GACA,MAAAA,GAAAd,OAIA,QAAAktB,GAAAltB,GACA,GAAAc,KAEA,OADAqsB,GAAArsB,EAAA,KAAAd,GACAc,EAGA,QAAAssB,GAAApmB,GACA,GAAAA,EAAA,CACA,GAAAjB,GAAAiB,EAAAjB,MAAA,IACA,OAAAA,GAAA,IAIA,QAAAsnB,GAAArmB,GACA,GAAAA,EAAA,CACA,GAAAjB,GAAAiB,EAAAjB,MAAA,IACAA,GAAA0d,OAAA,EAAA,EACA,IAAA6J,GAAAvnB,EAAA+Q,KAAA,IACA,OAAAwW,GAAA,MAAAA,EAAA,IAKA,QAAAH,GAAAvsB,EAAAwjB,EAAApkB,GAWA,MAVAX,SAAAsO,QAAA3N,EAAA,SAAA0mB,EAAApgB,GACAinB,EAAA7G,KACA8G,EAAA9G,IACA+G,EAAA7sB,GAAA,EAAA8lB,EAAAgH,EAAAtJ,EAAA9d,IACA6mB,EAAAvsB,EAAA8sB,EAAAtJ,EAAA9d,GAAAogB,IAEA+G,EAAA7sB,GAAA,EAAA8lB,EAAAgH,EAAAtJ,EAAA9d,OAIA1F,EAGA,QAAA6sB,GAAA7sB,EAAA+sB,EAAAC,EAAA5mB,GAEA,GAAA6mB,IACA7mB,KAAAA,GAEA8mB,KACAC,GAAA,CAsBA,OApBA1uB,SAAAsO,QAAAigB,EAAA,SAAAlH,EAAApgB,GACA,WAAAA,GAAA,UAAAA,EACAunB,EAAAvnB,GAAAogB,EAEA6G,EAAA7G,KACAoH,EAAAxnB,GAAAogB,EACAqH,GAAA,KAMAA,GACA1uB,QAAA2uB,OAAAH,GAAAC,QAAAA,KAIAH,GAAAI,GAAAF,EAAAxe,QACAzO,EAAAiO,KAAAgf,GAEAA,EAGA,QAAAH,GAAAtJ,EAAApd,GACA,GAAApG,EAUA,OARAA,GADAwjB,GAAApd,EACAod,EAAA6J,EAAAjnB,EACAod,EACAA,EACApd,EACAA,EAEA,GAKA,QAAAwmB,GAAAI,GACA,GAAAhtB,IAAA,CAMA,OALAvB,SAAAsO,QAAAigB,EAAA,SAAAlH,GACAA,GAAAA,EAAA5d,SACAlI,GAAA,KAGAA,EAGA,QAAA2sB,GAAAK,GACA,GAAAhtB,IAAA,CAMA,OALAvB,SAAAsO,QAAAigB,EAAA,SAAAlH,EAAApgB,GACA,WAAAA,IACA1F,GAAA,KAGAA,EAnHA,GAAAqtB,GAAA,IACAvuB,GACAutB,YAAAA,EACAC,oBAAAA,EACAE,YAAAA,EACAC,iBAAAA,EAGA,OAAA3tB,GAfAL,QACAC,OAAA,oBACAe,QAAA,mBAAA2sB,GAEAA,EAAAztB,SAAA,aAAA,YCPA,WACA,YAOA,SAAA2uB,GAAA/Z,EAAAga,EAAAC,EAAAC,GAQA,QAAAja,KACAD,EAAAE,QAAA,UARA,GAAAxK,GAAA7F,IAEA6F,GAAAuK,OAAAA,EACAvK,EAAAskB,cAAAA,EACAtkB,EAAAukB,SAAAA,EACAvkB,EAAAwkB,cAAAA,EAXAhvB,QAAAC,OAAA,oBACA+K,WAAA,wBAAA6jB,GAEAA,EAAA3uB,SAAA,oBAAA,gBAAA,WAAA,oBCNA,WACA,YAQA,SAAA+uB,GAAAtB,EAAAxY,GAYA,QAAAmX,GAAA4C,GACA,MAAA,OAAAA,EACA,gBAEA,eAIA,QAAA/iB,KACA3B,EAAA2kB,gBAAA,EACAxB,EAAAC,cAAAtsB,KAAA,SAAAG,GACA+I,EAAAgkB,WAAAb,EAAAE,oBAAApsB,GACA+I,EAAA2kB,gBAAA,GACA,SAAA1tB,GACA+I,EAAAgkB,WAAAb,EAAAE,oBAAApsB,EAAAd,MACA6J,EAAA2kB,gBAAA,IAIA,QAAAC,GAAAC,GACAla,EAAAhN,MACA4D,YAAA,qCACAf,WAAA,wBACAqB,aAAA,KACAhJ,KAAA,KACAkC,SACAupB,cAAA,WACA,MAAAO,IAEAN,SAAA,WACA,MAAAvkB,GAAAukB,UAEAC,cAAA,WACA,MAAAxkB,GAAAwkB,kBA5CA,GAAAxkB,GAAA7F,IAEA6F,GAAA2kB,gBAAA,EACA3kB,EAAA8hB,cAAAA,EACA9hB,EAAA2B,QAAAA,EACA3B,EAAA4kB,WAAAA,EACA5kB,EAAAukB,SAAApB,EAAAI,YACAvjB,EAAAwkB,cAAArB,EAAAK,iBAEAxjB,EAAA2B,UAhBAnM,QACAC,OAAA,oBACA+K,WAAA,2BAAAikB,GAEAA,EAAA/uB,SAAA,mBAAA,gBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,QACAhE,OAAA,QACAiE,IAAA,QACAhL,MACA2D,aAAA,cACAsH,UAAA,6BAEAC,OACAC,YACAC,YAAA,6BAGAxG,SACAyG,wBAAA,aAAA,SAAAhK,GACA,MAAAA,GAAAmK,eArBAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,qBACAhE,OAAA,QACAiE,IAAA,iBACAhL,MACA2D,aAAA,cACAsH,UAAA,uBAEAC,OACAC,YACAC,YAAA,6CACAf,WAAA,6BACAqB,aAAA,OAGA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,iBACAlK,EAAAmK,eAxBAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAAovB,GAAAzT,EAAA3a,GAQA,QAAAT,KAGA,QAAA8uB,GAAA9tB,GACA,GAAA+tB,KACAxvB,SAAAsO,QAAA7M,EAAAd,KAAA,SAAAA,GACA6uB,EAAAhgB,KAAA7O,IAEA,IAAA8uB,GAAA5T,EAAA,UACA,OAAA4T,GAAAD,EAAA,UARA,MAAAtuB,GAAAT,IAAA,0BAAAa,KAAAiuB,GAYA,QAAAG,KAGA,QAAAC,GAAAluB,GACA,GAAA+tB,KAQA,OAPAxvB,SAAAsO,QAAA7M,EAAAd,KAAA,SAAA+V,EAAAzP,GACA,GAAA2oB,KACA5vB,SAAAsO,QAAAoI,EAAA,SAAAmZ,EAAAC,GACAF,EAAApgB,MAAAvI,IAAA6oB,EAAApZ,IAAAmZ,MAEAL,EAAAvoB,GAAA2oB,IAEAJ,EAXA,MAAAtuB,GAAAT,IAAA,kBAAAa,KAAAquB,GArBA,GAAAtvB,IACAI,IAAAA,EACAivB,OAAAA,EAGA,OAAArvB,GAZAL,QACAC,OAAA,oBACAe,QAAA,0BAAAsuB,GAEAA,EAAApvB,SAAA,UAAA,YCPA,WACA,YAQA,SAAA6vB,GAAArY,EAAA4X,GACA,GAAA9kB,GAAA7F,IAEA6F,GAAAwlB,iBAAA,KACAxlB,EAAAylB,cAAA,KAEAX,EAAA7uB,MAAAa,KAAA,SAAA2uB,GACAzlB,EAAAylB,cAAAA,IAEAX,EAAAI,SAAApuB,KAAA,SAAA2uB,GACAzlB,EAAAwlB,iBAAAC,IAhBAjwB,QACAC,OAAA,oBACA+K,WAAA,6BAAA+kB,GAEAA,EAAA7vB,SAAA,UAAA,8BCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,UACAhE,OAAA,QACAiE,IAAA,UACAhL,MACA2D,aAAA,cACAsH,UAAA,gBAEAC,OACAC,YACAC,YAAA,+BACAf,WAAA,mBACAqB,aAAA,OAGA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,UACAlK,EAAAmK,eAxBAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAAgwB,GAAA9vB,GACA,GAAAC,GAAAD,EAAA,4BACAK,KACAF,OAAA,MACAC,SAAA,GAEAF,OACAC,OAAA,MACAC,SAAA,EACAqC,QAAAstB,SAAA,KAAAC,OAAA,QAIA,OAAA/vB,GAnBAL,QACAC,OAAA,oBACAe,QAAA,gBAAAkvB,GAEAA,EAAAhwB,SAAA,gBCPA,WACA,YAQA,SAAAmwB,GAAAxU,EAAAqU,EAAAtW,GAkBA,QAAA0W,KACA,GAAAC,GAAA,aACAJ,EAAAtU,EAAA,QAAArR,EAAA2lB,SAAAI,GACAH,EAAAvU,EAAA,QAAArR,EAAA4lB,OAAAG,EAEAL,GAAA5vB,OAAA8C,KAAAoH,EAAApH,KAAA,EAAAC,KAAA,GAAA8sB,SAAAA,EAAAC,OAAAA,GAAA,SAAA7uB,EAAAmI,GACAc,EAAAgmB,OAAAjvB,EACAiJ,EAAAwP,MAAAJ,EAAAC,MAAAnQ,EAAA,SACAc,EAAAkhB,WAAAhiB,EAAA,mBAKA,QAAA+mB,KAEA,GAAAA,GAAA,GAAA1a,KACAvL,GAAA4lB,OAAA,GAAAra,MAAA0a,EAAAC,cAAAD,EAAAE,WAAAF,EAAAG,UAAA,GAGA,QAAAC,KACA,GAAAV,GAAA,GAAApa,KAEAoa,GADA,IAAAA,EAAAQ,WACA,GAAA5a,MAAAoa,EAAAO,cAAA,EAAA,GAAAP,EAAAS,WAEA,GAAA7a,MAAAoa,EAAAO,cAAAP,EAAAQ,WAAA,EAAAR,EAAAS,WAGApmB,EAAA2lB,SAAAA,EAGA,QAAAtE,GAAAzoB,GACAoH,EAAApH,KAAAA,EACAoH,EAAA8lB,eAjDA,GAAA9lB,GAAA7F,IAEA6F,GAAAgmB,OAAA,KACAhmB,EAAA2lB,SAAA,KACA3lB,EAAAwP,MAAA,KACAxP,EAAAqhB,SAAAA,EACArhB,EAAA8lB,aAAAA,EACA9lB,EAAApH,KAAA,EACAoH,EAAAqmB,cAAAA,EACArmB,EAAA4lB,OAAA,KACA5lB,EAAAimB,MAAAA,EACAjmB,EAAAkhB,WAAA,KAEAlhB,EAAAimB,QACAjmB,EAAAqmB,gBACArmB,EAAA8lB,eAtBAtwB,QACAC,OAAA,oBACA+K,WAAA,mBAAAqlB,GAEAA,EAAAnwB,SAAA,UAAA,gBAAA,iBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,SACAyL,UAAA,EACAzP,OAAA,QATA1H,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,YACAhE,OAAA,UACAiE,IAAA,YACAhL,MACA2D,aAAA,aACAsH,UAAA,gCAEAC,OACAC,YACAC,YAAA,qCACAf,WAAA,qBACAqB,aAAA,OAGA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,YACAlK,EAAAmK,eAxBAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAA4wB,GAAAltB,EAAA+C,EAAA4Y,EAAAvd,GA0BA,QAAAnB,KACA8F,EAAAyC,cAAAoB,EAAAumB,iBAAAzvB,KAAA,WACAkJ,EAAAwF,MAAA,KACAxF,EAAAN,QAAA,KACAtG,EAAAM,UAAA,GAAA5C,KAAA,SAAA0D,GACAwF,EAAAumB,gBAAAC,EAAAhsB,KAEAua,EAAAG,aAAApe,KAAA,SAAAyJ,GACAP,EAAAumB,gBAAAlG,UAAA9f,GACA/I,EAAAqJ,IAAAb,EAAAumB,gBAAAlG,aAGA9kB,MAAA,WACAyE,EAAAN,QAAA,KACAM,EAAAwF,MAAA,UAvCA,GAAAxF,GAAA7F,IAEA6F,GAAAwF,MAAA,KACAxF,EAAA3J,KAAAA,EACA2J,EAAAumB,gBAAA,KACAvmB,EAAAN,QAAA,IAKA,IAAA8mB,GAAA,SAAAhsB,GACA,OACA4lB,UAAA5lB,EAAA4lB,UACAD,MAAA3lB,EAAA2lB,MACAF,UAAAzlB,EAAAylB,UACAI,QAAA7lB,EAAA6lB,QACAH,SAAA1lB,EAAA0lB,SACAjiB,MAAAzD,EAAAyD,OAIA7E,GAAAM,WAAA5C,KAAA,SAAA0D,GACAwF,EAAAumB,gBAAAC,EAAAhsB,KA7BAhF,QACAC,OAAA,oBACA+K,WAAA,qBAAA8lB,GAEAA,EAAA5wB,SAAA,YAAA,OAAA,qBAAA,iBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,gBACAhE,OAAA,UACAiE,IAAA,iBACAhL,MACA2D,gBAEAuH,OACAC,YACAC,YAAA,+CACAf,WAAA,yBACAqB,aAAA,OAGA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,SACAlK,EAAAmK,eAvBAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAA+wB,GAAAnS,EAAAnY,EAAAuqB,GAWA,QAAAC,KAEA3mB,EAAAwF,MAAA,KACAxF,EAAA4mB,oBAAA,KAEAzqB,EAAAuC,kBAAAsB,EAAA6mB,aAAA1G,OAAArpB,KAAA,WACAkJ,EAAAN,QAAA,OACAnE,MAAA,SAAAtE,GACA+I,EAAAN,QAAA,KACA,MAAAzI,EAAAgI,QAAAzJ,QAAAY,SAAAa,EAAAd,MAAAyO,OAAA8hB,EAAAvV,qBACAnR,EAAA4mB,oBAAA,QAEA5mB,EAAAwF,MAAA,UAtBA,GAAAxF,GAAA7F,IAEA6F,GAAAwF,MAAA,KACAxF,EAAA4mB,oBAAA,KACA5mB,EAAA2mB,aAAAA,EACA3mB,EAAA6mB,gBACA7mB,EAAAN,QAAA,KAEA4U,EAAA,WAAA9e,QAAAmC,QAAA,UAAAmd,UAfAtf,QACAC,OAAA,oBACA+K,WAAA,yBAAAimB,GAEAA,EAAA/wB,SAAA,WAAA,OAAA,qBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,eACAhE,OAAA,UACAiE,IAAA,oBACAhL,MACA2D,gBAEAuH,OACAC,YACAC,YAAA,6CACAf,WAAA,wBACAqB,aAAA,OAGA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,SACAlK,EAAAmK,eAvBAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAAoxB,GAAA9jB,EAAAsR,EAAAnY,EAAAG,GAcA,QAAAyqB,KACA/mB,EAAAgnB,WAAA,KACAhnB,EAAAwF,MAAA,KACAxF,EAAA6mB,aAAArnB,WAAAQ,EAAAinB,gBACAjnB,EAAAgnB,WAAA,QAEA7qB,EAAAqC,qBAAA/B,IAAAuG,EAAAvG,IAAAqB,YAAAkC,EAAA6mB,aAAArnB,WAAA1I,KAAA,WACAkJ,EAAAN,QAAA,OACAnE,MAAA,WACAyE,EAAAN,QAAA,KACAM,EAAAwF,MAAA,UAvBA,GAAAxF,GAAA7F,IAEA6F,GAAAknB,WAAA1xB,QAAAoB,YAAAoM,EAAAvG,KACAuD,EAAAinB,gBAAA,KACAjnB,EAAAgnB,WAAA,KACAhnB,EAAAwF,MAAA,KACAxF,EAAA+mB,YAAAA,EACA/mB,EAAA/B,MAAA3B,EAAAqB,KACAqC,EAAA6mB,gBACA7mB,EAAAN,QAAA,KAEA4U,EAAA,WAAA9e,QAAAmC,QAAA,aAAAmd,UAlBAtf,QACAC,OAAA,oBACA+K,WAAA,wBAAAsmB,GAEAA,EAAApxB,SAAA,eAAA,WAAA,OAAA,mBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,YACAhE,OAAA,UACAiE,IAAA,YACAhL,MACA2D,eACAsH,UAAA,kBAEAC,OACAC,YACAC,YAAA,qCACAf,WAAA,qBACAqB,aAAA,OAGA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,YACAlK,EAAAmK,eAxBAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YASA,SAAAyxB,GAAA3vB,EAAA8c,EAAAnY,EAAAG,EAAApD,GAuCA,QAAA6G,KAEA,GAAAqnB,IACA7nB,SAAAS,EAAAqnB,gBAAAppB,MACAkiB,MAAAngB,EAAAqnB,gBAAAlH,MACAmH,WAAAtnB,EAAAqnB,gBAAAE,UACAC,UAAAxnB,EAAAqnB,gBAAAnH,SACA1gB,SAAAQ,EAAAqnB,gBAAA7nB,SACA5E,KAAA,YAGA1B,GAAA5C,QACAqN,WAAA,UACAyjB,EAAA,SAAAjxB,GACAsP,QAAAC,IAAA,OAAAvP,IACA,SAAAqP,GACAC,QAAAC,IAAAF,KAtDA,GAAAxF,GAAA7F,IAEA6F,GAAAgnB,WAAA,KACAhnB,EAAAwF,MAAA,KACAxF,EAAAynB,gBAAA,KACAznB,EAAA/B,MAAA3B,EAAAqB,KACAqC,EAAAD,SAAAA,EACAC,EAAAqnB,mBACArnB,EAAAN,QAAA,KAEA4U,EAAA,WAAA9e,QAAAmC,QAAA,UAAAmd,UAlBAtf,QACAC,OAAA,oBACA+K,WAAA,qBAAA2mB,GAGAA,EAAAzxB,SAAA,aAAA,WAAA,OAAA,eAAA,eCPA,WACA,YAMA,SAAAgyB,KAoBA,QAAAjwB,GAAAC,EAAAiwB,GACA,GAAAC,IACAC,QAAA,OAAA,OAAA,OAAA,OAAA,QACAC,eAAA,SAAArY,GAEA,GAAAsY,GAAA,EACAC,EAAA,yBAEAC,EAAA,SAAAnN,KAAArL,GACAyY,EAAA,SAAApN,KAAArL,GACA0Y,EAAA,SAAArN,KAAArL,GACA2Y,EAAAJ,EAAAlN,KAAArL,GAEA4Y,GAAAJ,EAAAC,EAAAC,EAAAC,GACAE,EAAAjf,EAAAkf,KAAAF,EAAA,SAAAG,GACA,MAAAA,MAAA,IACAxuB,MAaA,OAXA+tB,IAAA,EAAAtY,EAAAzV,QAAAyV,EAAAzV,QAAA,GAAA,EAAA,GACA+tB,GAAA,GAAAO,EAGAP,EAAAtY,EAAAzV,QAAA,EAAAyuB,KAAAC,IAAAX,EAAA,IAAAA,EAGAA,EAAA,IAAAO,EAAAG,KAAAC,IAAAX,EAAA,IAAAA,EACAA,EAAA,IAAAO,EAAAG,KAAAC,IAAAX,EAAA,IAAAA,EACAA,EAAA,IAAAO,EAAAG,KAAAC,IAAAX,EAAA,IAAAA,GAKAY,SAAA,SAAAC,GAEA,GAAAC,EAiBA,OAfAA,GADAD,GAAA,GACA,EAEAA,GAAA,GACA,EAEAA,GAAA,GACA,EAEAA,GAAA,GACA,EAGA,GAGAC,IAAAA,EAAA,EAAAC,IAAA3uB,KAAA0tB,OAAAgB,KAGAnxB,GAAAuE,OAAA,kBAAA,SAAAuD,GACA,GAAAA,EAAA,CACA,GAAAupB,GAAAnB,EAAAe,SAAAf,EAAAE,eAAAtoB,GACAmoB,GAAA7vB,YAAA,WACA6vB,EAAAnZ,KAAA,MAAAwa,SAAA,MACAC,KAAAC,mBAAA,SACA9pB,MAAA,EAAA2pB,EAAAF,KACAI,KAAAC,mBAAAH,EAAAD,SAhFA,GAAA/wB,IACAC,SAAA,EACAC,SAAA,IACAC,SAAA,yQAMAR,OACAyxB,gBAAA,KAEAhxB,KAAAV,EAGA,OAAAM,GApBAvC,QACAC,OAAA,oBACAsC,UAAA,sBAAA2vB,MCNA,WACA,YAQA,SAAA1mB,GAAAC,GACAA,EAAAC,MAAA,YACAhE,OAAA,UACAiE,IAAA,YACAhL,MACA2D,aAAA,aACAsH,UAAA,gCAEAC,OACAC,YACAC,YAAA,qCACAf,WAAA,qBACAqB,aAAA,OAGA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA;AACAlK,EAAAmK,eAxBAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAA0zB,GAAAjtB,EAAA/C,GAYA,QAAAyE,KACAmC,EAAAR,WAAAQ,EAAAinB,iBACAjnB,EAAAwF,MAAA,KACAxF,EAAAN,QAAA,KACAM,EAAAgnB,WAAA,UAEAhnB,EAAAgnB,WAAA,KACA7qB,EAAA0B,eAAAmC,EAAAR,UAAA1I,KAAA,WACAkJ,EAAAwF,MAAA,KACAxF,EAAAN,QAAA,OACAnE,MAAA,WACAyE,EAAAN,QAAA,KACAM,EAAAwF,MAAA,WAvBA,GAAAxF,GAAA7F,IAEA6F,GAAAnC,eAAAA,EACAmC,EAAAgnB,WAAA,KACAhnB,EAAAwF,MAAA,KACAxF,EAAAN,QAAA,KAEAtG,EAAAM,WAAA5C,KAAA,SAAA0D,GACAwF,EAAAxF,QAAAA,IAfAhF,QACAC,OAAA,oBACA+K,WAAA,qBAAA4oB,GAEAA,EAAA1zB,SAAA,OAAA,gBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,YACAhE,OAAA,UACAiE,IAAA,gBACAhL,MACA2D,eACAsH,UAAA,kBAEAC,OACAC,YACAC,YAAA,qCACAf,WAAA,uBACAqB,aAAA,OAGA9G,SACAyG,wBAAA,aAAA,0BAAA,SAAAhK,EAAAiK,GAEA,MADAA,GAAAC,QAAA,YACAlK,EAAAmK,eAxBAnM,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBCPA,WACA,YAQA,SAAA2zB,GAAArmB,EAAA7G,EAAAG,GACA,GAAA0D,GAAA7F,IAEAgC,GAAAK,iBAAAC,IAAAuG,EAAAvG,MAAA3F,KAAA,WACAkJ,EAAAwF,MAAA,KACAxF,EAAAN,QAAA,OACAnE,MAAA,WACAyE,EAAAN,QAAA,KACAM,EAAAwF,MAAA,UAGAxF,EAAA/B,MAAA3B,EAAAqB,KAjBAnI,QACAC,OAAA,oBACA+K,WAAA,uBAAA6oB,GAEAA,EAAA3zB,SAAA,eAAA,OAAA,mBCPA,WACA,YAQA,SAAAsL,GAAAC,GACAA,EAAAC,MAAA,WACAyL,UAAA,EACAzP,OAAA,QATA1H,QACAC,OAAA,oBACAmM,OAAAZ,GAEAA,EAAAtL,SAAA,qBASA,WAAAF,QAAAC,OAAA,oBAAAL,KAAA,iBAAA,SAAAk0B,GAAAA,EAAA1M,IAAA,qBAAA,g5BC8jKA0M,EAAe1M,IAAI,qCAAqC,qjBACxD0M,EAAe1M,IAAI,qCAAqC,i7FACxD0M,EAAe1M,IAAI,qCAAqC,8gPACxD0M,EAAe1M,IAAI,qCAAqC,01HACxD0M,EAAe1M,IAAI,6CAA6C,qjDAChE0M,EAAe1M,IAAI,+BAA+B,ozDAClD0M,EAAe1M,IAAI,2BAA2B,8KAC9C0M,EAAe1M,IAAI,+BAA+B,ojCAClD0M,EAAe1M,IAAI,qCAAqC,0nCACxD0M,EAAe1M,IAAI,2BAA2B,4pDAC9C0M,EAAe1M,IAAI,iCAAiC;AACpD0M,EAAe1M,IAAI,uCAAuC,smFAC1D0M,EAAe1M,IAAI,+DAA+D,i7BAClF0M,EAAe1M,IAAI,wDAAwD,iyDAC3E0M,EAAe1M,IAAI,wDAAwD,6+HAC3E0M,EAAe1M,IAAI,iDAAiD,8jHACpE0M,EAAe1M,IAAI,kCAAkC,i7CACrD0M,EAAe1M,IAAI,mDAAmD,4jHACtE0M,EAAe1M,IAAI,4CAA4C,szIAC/D0M,EAAe1M,IAAI,gCAAgC;AACnD0M,EAAe1M,IAAI,sCAAsC,iUACzD0M,EAAe1M,IAAI,+BAA+B,wSAClD0M,EAAe1M,IAAI,iCAAiC,w7BACpD0M,EAAe1M,IAAI,6CAA6C,k4GAChE0M,EAAe1M,IAAI,+CAA+C","file":"app/app-ce786cd862.js","sourcesContent":["(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp', [\r\n            'ngStorage',\r\n            'tmh.dynamicLocale',\r\n            'pascalprecht.translate',\r\n            'ngResource',\r\n            'ngCookies',\r\n            'ngAria',\r\n            'ngCacheBuster',\r\n            'ngFileUpload',\r\n            'ui.bootstrap',\r\n            'ui.bootstrap.datetimepicker',\r\n            'ui.router',\r\n            'infinite-scroll',\r\n            // jhipster-needle-angularjs-add-module JHipster will add new module here\r\n            'angular-loading-bar',\r\n            'ngMap',\r\n            'ngFileSaver'\r\n        ])\r\n        .run(run);\r\n\r\n    run.$inject = ['stateHandler', 'translationHandler'];\r\n\r\n    function run(stateHandler, translationHandler) {\r\n        stateHandler.initialize();\r\n        translationHandler.initialize();\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('User', User);\r\n\r\n    User.$inject = ['$resource'];\r\n\r\n    function User ($resource) {\r\n        var service = $resource('api/users/:login', {}, {\r\n            'query': {method: 'GET', isArray: true},\r\n            'get': {\r\n                method: 'GET',\r\n                transformResponse: function (data) {\r\n                    data = angular.fromJson(data);\r\n                    return data;\r\n                }\r\n            },\r\n            'save': { method:'POST' },\r\n            'update': { method:'PUT' },\r\n            'delete':{ method:'DELETE'}\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('ProfileService', ProfileService);\r\n\r\n    ProfileService.$inject = ['$http'];\r\n\r\n    function ProfileService($http) {\r\n\r\n        var dataPromise;\r\n\r\n        var service = {\r\n            getProfileInfo : getProfileInfo\r\n        };\r\n\r\n        return service;\r\n\r\n        function getProfileInfo() {\r\n            if (angular.isUndefined(dataPromise)) {\r\n                dataPromise = $http.get('api/profile-info').then(function(result) {\r\n                    if (result.data.activeProfiles) {\r\n                        var response = {};\r\n                        response.activeProfiles = result.data.activeProfiles;\r\n                        response.ribbonEnv = result.data.ribbonEnv;\r\n                        response.inProduction = result.data.activeProfiles.indexOf(\"prod\") !== -1;\r\n                        response.swaggerEnabled = result.data.activeProfiles.indexOf(\"swagger\") !== -1;\r\n                        return response;\r\n                    }\r\n                });\r\n            }\r\n            return dataPromise;\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('pageRibbon', pageRibbon);\r\n\r\n    pageRibbon.$inject = ['ProfileService', '$rootScope', '$translate'];\r\n\r\n    function pageRibbon(ProfileService, $rootScope, $translate) {\r\n        var directive = {\r\n            replace : true,\r\n            restrict : 'AE',\r\n            template : '<div class=\"ribbon hidden\"><a href=\"\" data-translate=\"global.ribbon.{{ribbonEnv}}\">{{ribbonEnv}}</a></div>',\r\n            link : linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc(scope, element, attrs) {\r\n            ProfileService.getProfileInfo().then(function(response) {\r\n                if (response.ribbonEnv) {\r\n                    scope.ribbonEnv = response.ribbonEnv;\r\n                    element.addClass(response.ribbonEnv);\r\n                    element.removeClass('hidden');\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('ReporterService', ReporterService);\r\n\r\n    ReporterService.$inject = ['$resource'];\r\n\r\n    function ReporterService ($resource) {\r\n        var service = $resource('api/reporter/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    id: null,\r\n                    category_code: null\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('ProductService', ProductService);\r\n\r\n    ProductService.$inject = ['$resource'];\r\n\r\n    function ProductService ($resource) {\r\n        var service = $resource('api/product/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    id: null,\r\n                    category_code: null\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('MeansuerService', MeansuerService);\r\n\r\n    MeansuerService.$inject = ['$resource'];\r\n\r\n    function MeansuerService ($resource) {\r\n        var service = $resource('api/meansuer/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    reporter: null,\r\n                    category_code: null,\r\n                    product: null,\r\n                    page: null,\r\n                    size: 12,\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('LocationService', LocationService);\r\n\r\n    LocationService.$inject = ['$resource'];\r\n\r\n    function LocationService ($resource) {\r\n        var service = $resource('api/ward/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('IndustryService', IndustryService);\r\n\r\n    IndustryService.$inject = ['$resource'];\r\n\r\n    function IndustryService ($resource) {\r\n        var service = $resource('api/categories/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    id: null,\r\n                    category_code: null\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('CrawlService', CrawlService);\r\n\r\n    CrawlService.$inject = ['$resource'];\r\n\r\n    function CrawlService ($resource) {\r\n        var service = $resource('api/crawl/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    id: null,\r\n                    category_code: null\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('CategoriesService', CategoriesService);\r\n\r\n    CategoriesService.$inject = ['$resource'];\r\n\r\n    function CategoriesService ($resource) {\r\n        var service = $resource('api/categories/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    id: null,\r\n                    category_code: null\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('Register', Register);\r\n\r\n    Register.$inject = ['$resource'];\r\n\r\n    function Register ($resource) {\r\n        var service = $resource('api/user/:pathMethod',{},{\r\n            'get': {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            'query': {\r\n                method: 'GET',\r\n                interceptor: {\r\n                    response: function(response) {\r\n                        // expose response\r\n                        return response;\r\n                    }\r\n                }\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                interceptor: {\r\n                    response: function(response) {\r\n                        // expose response\r\n                        return response;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('Principal', Principal);\r\n\r\n    Principal.$inject = ['$q', 'Account', '$localStorage', '$sessionStorage'];\r\n\r\n    function Principal ($q, Account, $localStorage, $sessionStorage) {\r\n        var _identity,\r\n            _authenticated = false;\r\n\r\n        var service = {\r\n            authenticate: authenticate,\r\n            hasAnyAuthority: hasAnyAuthority,\r\n            hasAuthority: hasAuthority,\r\n            identity: identity,\r\n            isAuthenticated: isAuthenticated,\r\n            isIdentityResolved: isIdentityResolved\r\n        };\r\n\r\n        return service;\r\n\r\n        function authenticate (identity) {\r\n            _identity = identity;\r\n            _authenticated = identity !== null;\r\n        }\r\n\r\n        function hasAnyAuthority (authorities) {\r\n            if (!_authenticated || !_identity || !_identity.authorities) {\r\n                return false;\r\n            }\r\n\r\n            for (var i = 0; i < authorities.length; i++) {\r\n                if (_identity.authorities.indexOf(authorities[i]) !== -1) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        function hasAuthority (authority) {\r\n            if (!_authenticated) {\r\n                return $q.when(false);\r\n            }\r\n\r\n            return this.identity().then(function(_id) {\r\n                return _id.authorities && _id.authorities.indexOf(authority) !== -1;\r\n            }, function(){\r\n                return false;\r\n            });\r\n        }\r\n\r\n        function identity (force) {\r\n            var deferred = $q.defer();\r\n\r\n            if (force === true) {\r\n                _identity = undefined;\r\n            }\r\n\r\n            // check and see if we have retrieved the identity data from the server.\r\n            // if we have, reuse it by immediately resolving\r\n            if (angular.isDefined(_identity)) {\r\n                deferred.resolve(_identity);\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            // retrieve the identity data from the server, update the identity object, and then resolve.\r\n            Account.get().$promise\r\n                .then(getAccountThen)\r\n                .catch(getAccountCatch);\r\n\r\n            return deferred.promise;\r\n\r\n            function getAccountThen (account) {\r\n                _identity = account.data.Data;\r\n                $localStorage.permission = account.data.Data.Permission\r\n                $localStorage.role = account.data.Data.Role\r\n                _authenticated = true;\r\n                deferred.resolve(_identity);\r\n            }\r\n\r\n            function getAccountCatch () {\r\n                _identity = null;\r\n                _authenticated = false;\r\n                deferred.resolve(_identity);\r\n\r\n                delete $localStorage.authenticationToken;\r\n                delete $localStorage.permission;\r\n                delete $localStorage.role;\r\n                delete $sessionStorage.authenticationToken;\r\n            }\r\n        }\r\n\r\n        function isAuthenticated () {\r\n            return _authenticated;\r\n        }\r\n\r\n        function isIdentityResolved () {\r\n            return angular.isDefined(_identity);\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('PasswordResetInit', PasswordResetInit);\r\n\r\n    PasswordResetInit.$inject = ['$resource'];\r\n\r\n    function PasswordResetInit($resource) {\r\n        var service = $resource('api/account/reset-password/init', {}, {});\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('PasswordResetFinish', PasswordResetFinish);\r\n\r\n    PasswordResetFinish.$inject = ['$resource'];\r\n\r\n    function PasswordResetFinish($resource) {\r\n        var service = $resource('api/account/reset-password/finish', {}, {});\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('Password', Password);\r\n\r\n    Password.$inject = ['$resource'];\r\n\r\n    function Password($resource) {\r\n        var service = $resource('api/account/change-password', {}, {});\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('hasAuthority', hasAuthority);\r\n\r\n    hasAuthority.$inject = ['Principal'];\r\n\r\n    function hasAuthority(Principal) {\r\n        var directive = {\r\n            restrict: 'A',\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc(scope, element, attrs) {\r\n            var authority = attrs.hasAuthority.replace(/\\s+/g, '');\r\n\r\n            var setVisible = function () {\r\n                    element.removeClass('hidden');\r\n                },\r\n                setHidden = function () {\r\n                    element.addClass('hidden');\r\n                },\r\n                defineVisibility = function (reset) {\r\n\r\n                    if (reset) {\r\n                        setVisible();\r\n                    }\r\n\r\n                    Principal.hasAuthority(authority)\r\n                        .then(function (result) {\r\n                            if (result) {\r\n                                setVisible();\r\n                            } else {\r\n                                setHidden();\r\n                            }\r\n                        });\r\n                };\r\n\r\n            if (authority.length > 0) {\r\n                defineVisibility(true);\r\n\r\n                scope.$watch(function() {\r\n                    return Principal.isAuthenticated();\r\n                }, function() {\r\n                    defineVisibility(true);\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('hasAnyAuthority', hasAnyAuthority);\r\n\r\n    hasAnyAuthority.$inject = ['Principal'];\r\n\r\n    function hasAnyAuthority(Principal) {\r\n        var directive = {\r\n            restrict: 'A',\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc(scope, element, attrs) {\r\n            var authorities = attrs.hasAnyAuthority.replace(/\\s+/g, '').split(',');\r\n\r\n            var setVisible = function () {\r\n                    element.removeClass('hidden');\r\n                },\r\n                setHidden = function () {\r\n                    element.addClass('hidden');\r\n                },\r\n                defineVisibility = function (reset) {\r\n                    var result;\r\n                    if (reset) {\r\n                        setVisible();\r\n                    }\r\n\r\n                    result = Principal.hasAnyAuthority(authorities);\r\n                    if (result) {\r\n                        setVisible();\r\n                    } else {\r\n                        setHidden();\r\n                    }\r\n                };\r\n\r\n            if (authorities.length > 0) {\r\n                defineVisibility(true);\r\n\r\n                scope.$watch(function() {\r\n                    return Principal.isAuthenticated();\r\n                }, function() {\r\n                    defineVisibility(true);\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('Auth', Auth);\r\n\r\n    Auth.$inject = ['$rootScope', '$state', '$sessionStorage', '$q', '$translate', 'Principal', 'AuthServerProvider', 'Account', 'LoginService', 'Register', 'Activate', 'Password', 'PasswordResetInit', 'PasswordResetFinish'];\r\n\r\n    function Auth ($rootScope, $state, $sessionStorage, $q, $translate, Principal, AuthServerProvider, Account, LoginService, Register, Activate, Password, PasswordResetInit, PasswordResetFinish) {\r\n        var service = {\r\n            activateAccount: activateAccount,\r\n            authorize: authorize,\r\n            changePassword: changePassword,\r\n            createAccount: createAccount,\r\n            getPreviousState: getPreviousState,\r\n            login: login,\r\n            logout: logout,\r\n            loginWithToken: loginWithToken,\r\n            resetPasswordFinish: resetPasswordFinish,\r\n            resetPasswordInit: resetPasswordInit,\r\n            resetPreviousState: resetPreviousState,\r\n            storePreviousState: storePreviousState,\r\n            updateAccount: updateAccount\r\n        };\r\n\r\n        return service;\r\n\r\n        function activateAccount (key, callback) {\r\n            var cb = callback || angular.noop;\r\n\r\n            return Activate.get(key,\r\n                function (response) {\r\n                    return cb(response);\r\n                },\r\n                function (err) {\r\n                    return cb(err);\r\n                }.bind(this)).$promise;\r\n        }\r\n\r\n        function authorize (force) {\r\n            var authReturn = Principal.identity(force).then(authThen);\r\n\r\n            return authReturn;\r\n\r\n            function authThen () {\r\n                var isAuthenticated = Principal.isAuthenticated();\r\n\r\n                // an authenticated user can't access to login and register pages\r\n                if (isAuthenticated && $rootScope.toState.parent === 'account' && ($rootScope.toState.name === 'login' || $rootScope.toState.name === 'register' || $rootScope.toState.name === 'social-auth')) {\r\n                    $state.go('home');\r\n                }\r\n\r\n                // recover and clear previousState after external login redirect (e.g. oauth2)\r\n                if (isAuthenticated && !$rootScope.fromState.name && getPreviousState()) {\r\n                    var previousState = getPreviousState();\r\n                    resetPreviousState();\r\n                    $state.go(previousState.name, previousState.params);\r\n                }\r\n\r\n                if ($rootScope.toState.data.authorities && $rootScope.toState.data.authorities.length > 0 && !Principal.hasAnyAuthority($rootScope.toState.data.authorities)) {\r\n                    if (isAuthenticated) {\r\n                        // user is signed in but not authorized for desired state\r\n                        $state.go('accessdenied');\r\n                    }\r\n                    else {\r\n                        // user is not authenticated. stow the state they wanted before you\r\n                        // send them to the login service, so you can return them when you're done\r\n                        storePreviousState($rootScope.toState.name, $rootScope.toStateParams);\r\n\r\n                        // now, send them to the signin state so they can log in\r\n                        $state.go('accessdenied').then(function() {\r\n                            LoginService.open();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function changePassword (newPassword, callback) {\r\n            var cb = callback || angular.noop;\r\n\r\n            return Password.save(newPassword, function () {\r\n                return cb();\r\n            }, function (err) {\r\n                return cb(err);\r\n            }).$promise;\r\n        }\r\n\r\n        function createAccount (account, callback) {\r\n            var cb = callback || angular.noop;\r\n\r\n            return Register.save(account,\r\n                function () {\r\n                    return cb(account);\r\n                },\r\n                function (err) {\r\n                    this.logout();\r\n                    return cb(err);\r\n                }.bind(this)).$promise;\r\n        }\r\n\r\n        function login (credentials, callback) {\r\n            var cb = callback || angular.noop;\r\n            var deferred = $q.defer();\r\n\r\n            AuthServerProvider.login(credentials)\r\n                .then(loginThen)\r\n                .catch(function (err) {\r\n                    this.logout();\r\n                    deferred.reject(err);\r\n                    return cb(err);\r\n                }.bind(this));\r\n\r\n            function loginThen (data) {\r\n                Principal.identity(true).then(function(account) {\r\n                    // After the login the language will be changed to\r\n                    // the language selected by the user during his registration\r\n                    // if (account!== null) {\r\n                    //     $translate.use(account.langKey).then(function () {\r\n                    //         $translate.refresh();\r\n                    //     });\r\n                    // }\r\n                    deferred.resolve(data);\r\n                });\r\n                return cb();\r\n            }\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        function loginWithToken(jwt, rememberMe) {\r\n            return AuthServerProvider.loginWithToken(jwt, rememberMe);\r\n        }\r\n\r\n        function logout () {\r\n            AuthServerProvider.logout();\r\n            Principal.authenticate(null);\r\n        }\r\n\r\n        function resetPasswordFinish (keyAndPassword, callback) {\r\n            var cb = callback || angular.noop;\r\n\r\n            return PasswordResetFinish.save(keyAndPassword, function () {\r\n                return cb();\r\n            }, function (err) {\r\n                return cb(err);\r\n            }).$promise;\r\n        }\r\n\r\n        function resetPasswordInit (mail, callback) {\r\n            var cb = callback || angular.noop;\r\n\r\n            return PasswordResetInit.save(mail, function() {\r\n                return cb();\r\n            }, function (err) {\r\n                return cb(err);\r\n            }).$promise;\r\n        }\r\n\r\n        function updateAccount (account, callback) {\r\n            var cb = callback || angular.noop;\r\n\r\n            return Account.save(account,\r\n                function () {\r\n                    return cb(account);\r\n                },\r\n                function (err) {\r\n                    return cb(err);\r\n                }.bind(this)).$promise;\r\n        }\r\n\r\n        function getPreviousState() {\r\n            var previousState = $sessionStorage.previousState;\r\n            return previousState;\r\n        }\r\n\r\n        function resetPreviousState() {\r\n            delete $sessionStorage.previousState;\r\n        }\r\n\r\n        function storePreviousState(previousStateName, previousStateParams) {\r\n            var previousState = { \"name\": previousStateName, \"params\": previousStateParams };\r\n            $sessionStorage.previousState = previousState;\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('AuthServerProvider', AuthServerProvider);\r\n\r\n    AuthServerProvider.$inject = ['$http', '$localStorage', '$sessionStorage', '$q'];\r\n\r\n    function AuthServerProvider ($http, $localStorage, $sessionStorage, $q) {\r\n        var service = {\r\n            getToken: getToken,\r\n            login: login,\r\n            loginWithToken: loginWithToken,\r\n            storeAuthenticationToken: storeAuthenticationToken,\r\n            logout: logout\r\n        };\r\n\r\n        return service;\r\n\r\n        function getToken () {\r\n\r\n            return $localStorage.authenticationToken || $sessionStorage.authenticationToken;\r\n        }\r\n\r\n        function login (credentials) {\r\n\r\n            var data = {\r\n                username: credentials.username,\r\n                password: credentials.password,\r\n                rememberMe: credentials.rememberMe,\r\n                page: 'front'\r\n            };\r\n            return $http.post('api/login', data).success(authenticateSuccess);\r\n\r\n            function authenticateSuccess (data, status, headers) {\r\n                var bearerToken = headers('Authorization') ? headers('Authorization') : \"\";\r\n                if (angular.isDefined(bearerToken) && bearerToken.slice(0, 7) === 'Bearer ') {\r\n                    var jwt = bearerToken.slice(7, bearerToken.length);\r\n                    service.storeAuthenticationToken(jwt, credentials.rememberMe);\r\n                    return jwt;\r\n                }else{\r\n                    var jwt = data.Data.token;\r\n                    service.storeAuthenticationToken(jwt, credentials.rememberMe);\r\n                }\r\n            }\r\n        }\r\n\r\n        function loginWithToken(jwt, rememberMe) {\r\n            var deferred = $q.defer();\r\n\r\n            if (angular.isDefined(jwt)) {\r\n                this.storeAuthenticationToken(jwt, rememberMe);\r\n                deferred.resolve(jwt);\r\n            } else {\r\n                deferred.reject();\r\n            }\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        function storeAuthenticationToken(jwt, rememberMe) {\r\n            if(rememberMe){\r\n                $localStorage.authenticationToken = jwt;\r\n            } else {\r\n                $sessionStorage.authenticationToken = jwt;\r\n            }\r\n        }\r\n\r\n        function logout () {\r\n            delete $localStorage.authenticationToken;\r\n            delete $localStorage.permission;\r\n            delete $localStorage.role;\r\n            delete $sessionStorage.authenticationToken;\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('Activate', Activate);\r\n\r\n    Activate.$inject = ['$resource'];\r\n\r\n    function Activate ($resource) {\r\n        var service = $resource('api/activate', {}, {\r\n            'get': { method: 'GET', params: {}, isArray: false}\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('Account', Account);\r\n\r\n    Account.$inject = ['$resource'];\r\n\r\n    function Account ($resource) {\r\n        var service = $resource('api/account', {}, {\r\n            'get': { method: 'GET', params: {}, isArray: false,\r\n                interceptor: {\r\n                    response: function(response) {\r\n                        // expose response\r\n                        return response;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('NavbarController', NavbarController);\r\n\r\n    NavbarController.$inject = ['$state', 'Auth', 'Principal', 'ProfileService', 'LoginService', '$scope', '$localStorage'];\r\n\r\n    function NavbarController ($state, Auth, Principal, ProfileService, LoginService, $scope, $localStorage) {\r\n        var vm = this;\r\n\r\n        vm.isNavbarCollapsed = true;\r\n        vm.isShowNav = true;\r\n        vm.isAuthenticated = Principal.isAuthenticated;\r\n        vm.account = {};\r\n\r\n        ProfileService.getProfileInfo().then(function(response) {\r\n            vm.inProduction = response.inProduction;\r\n            vm.swaggerEnabled = response.swaggerEnabled;\r\n        });\r\n\r\n        vm.login = login;\r\n        vm.logout = logout;\r\n        vm.toggleNavbar = toggleNavbar;\r\n        vm.collapseNavbar = collapseNavbar;\r\n        vm.$state = $state;\r\n        vm.stateGo = stateGo;\r\n        vm.register = register;\r\n\r\n        $scope.$watch(function(){\r\n            switch ($state.current.name){\r\n                case 'home':\r\n                    vm.isShowNav = false;\r\n                    break;\r\n                default:\r\n                    vm.isShowNav = true;\r\n                    break;\r\n            }\r\n        })\r\n\r\n        init();\r\n\r\n        function init(){\r\n            getAccount();\r\n        }\r\n\r\n        function register(){\r\n            $state.go('register');\r\n        }\r\n\r\n        function getAccount() {\r\n            Principal.identity().then(function (account) {\r\n                vm.account = account;\r\n            });\r\n        }\r\n\r\n        function login() {\r\n            // collapseNavbar();\r\n            LoginService.open();\r\n        }\r\n\r\n        function logout() {\r\n            // collapseNavbar();\r\n            vm.account = {};\r\n            Auth.logout();\r\n            $state.go('home');\r\n        }\r\n\r\n        function toggleNavbar() {\r\n            vm.isNavbarCollapsed = !vm.isNavbarCollapsed;\r\n        }\r\n\r\n        function stateGo(link){\r\n            $state.go(link, {industry: $localStorage.industry})\r\n        }\r\n\r\n        function collapseNavbar() {\r\n            vm.isNavbarCollapsed = true;\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('activeMenu', activeMenu);\r\n\r\n    activeMenu.$inject = ['$translate', '$locale', 'tmhDynamicLocale'];\r\n\r\n    function activeMenu($translate, $locale, tmhDynamicLocale) {\r\n        var directive = {\r\n            restrict: 'A',\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc(scope, element, attrs) {\r\n            var language = attrs.activeMenu;\r\n\r\n            scope.$watch(function() {\r\n                return $translate.use();\r\n            }, function(selectedLanguage) {\r\n                if (language === selectedLanguage) {\r\n                    tmhDynamicLocale.set(language);\r\n                    element.addClass('active');\r\n                } else {\r\n                    element.removeClass('active');\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider\r\n            .state('error', {\r\n                parent: 'app',\r\n                url: '/error',\r\n                data: {\r\n                    authorities: [],\r\n                    pageTitle: 'error.title'\r\n                },\r\n                views: {\r\n                    'content@': {\r\n                        templateUrl: 'app/layouts/error/error.html'\r\n                    }\r\n                },\r\n                resolve: {\r\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                        $translatePartialLoader.addPart('error');\r\n                        return $translate.refresh();\r\n                    }]\r\n                }\r\n            })\r\n            .state('accessdenied', {\r\n                parent: 'app',\r\n                url: '/accessdenied',\r\n                data: {\r\n                    authorities: []\r\n                },\r\n                views: {\r\n                    'content@': {\r\n                        templateUrl: 'app/layouts/error/accessdenied.html'\r\n                    }\r\n                },\r\n                resolve: {\r\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                        $translatePartialLoader.addPart('error');\r\n                        return $translate.refresh();\r\n                    }]\r\n                }\r\n            });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('home', {\r\n            parent: 'app',\r\n            url: '/',\r\n            data: {\r\n                authorities: []\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/home/home.html',\r\n                    controller: 'HomeController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('home');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('HomeController', HomeController);\r\n\r\n    HomeController.$inject = ['$scope', '$localStorage', 'FileSaver', '$state', 'CategoriesService', 'CrawlService'];\r\n\r\n    function HomeController ($scope, $localStorage, FileSaver, $state, CategoriesService, CrawlService) {\r\n        var vm = this;\r\n\r\n        vm.industrySelected = '';\r\n        vm.lstIndustry = [];\r\n\r\n        vm.selected = selected;\r\n        vm.stateGo = stateGo;\r\n        vm.exportPDF = exportPDF;\r\n\r\n\r\n        loadAllIndustry();\r\n        $localStorage.industry = '';\r\n        function loadAllIndustry(){\r\n            CategoriesService.get({}, function(data){\r\n                vm.lstIndustry = data.Data;\r\n            })\r\n        }\r\n\r\n        function selected(item){\r\n            for(var i = 0; i < vm.lstIndustry.length; i++){\r\n                if(vm.lstIndustry[i].Code == item.Code){\r\n                    $localStorage.industry = item.Code;\r\n                    $localStorage.industryName = item.Name;\r\n                    vm.lstIndustry[i].selected = true;\r\n                }else{\r\n                    vm.lstIndustry[i].selected = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        function stateGo(link){\r\n            if($localStorage.industry != ''){\r\n                $state.go(link, {industry: $localStorage.industry})\r\n            }else{\r\n                alert('Your must choose industry firt');\r\n            }\r\n        }\r\n\r\n        function exportPDF() {\r\n            // CrawlService.get({\r\n            //     pathMethod: 'export'\r\n            // }, function(data){\r\n            //     //var fileData = new Blob([data], {type: 'application/pdf;charset=UTF-8'});\r\n            //     //FileSaver.saveAs(fileData, \"Report.pdf\");\r\n            // })\r\n\r\n            window.open(API_CONFIG.API_URL + '/api/crawl/export');\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('store', {\r\n            parent: 'entity',\r\n            url: '/store/{industry}',\r\n            data: {\r\n                // authorities: ['ROLE_ADMIN'],\r\n                // pageTitle: 'store.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/entities/store/store.html',\r\n                    controller: 'StoreController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    // $translatePartialLoader.addPart('store');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('StoreService', StoreService);\r\n\r\n    StoreService.$inject = ['$resource'];\r\n\r\n    function StoreService ($resource) {\r\n        var service = $resource('api/store/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    id: null,\r\n                    category_code: null\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('StoreController', StoreController);\r\n\r\n    StoreController.$inject = ['$scope', 'StoreService', 'LocationService', '$localStorage', 'NgMap', '$stateParams'];\r\n\r\n    function StoreController($scope, StoreService, LocationService, $localStorage, NgMap, $stateParams) {\r\n        var vm = this;\r\n\r\n        vm.lstStore = [];\r\n        vm.lstCity = [{\r\n            CityCode: \"00\",\r\n            CityName: \"Tất cả\"\r\n        }];\r\n        vm.lstDistrict = [{\r\n            DistrictCode: \"000\",\r\n            DistrictName: \"Tất cả\"\r\n        }];\r\n        vm.lstWard = [{\r\n            WardCode: \"00000\",\r\n            WardName: \"Tất cả\"\r\n        }];\r\n\r\n        vm.lstStorePage = [];\r\n\r\n        vm.dataSearch = {\r\n            city_code: '00',\r\n            district_code : '000',\r\n            ward_code: '00000'\r\n        }\r\n\r\n        vm.lstCount = [];\r\n        vm.lstCalculate = [];\r\n        vm.industry = $stateParams.industry;\r\n        vm.industryName = $localStorage.industryName;\r\n        vm.isStart = 0;\r\n        \r\n        vm.url = ''\r\n        vm.userRole = $localStorage.role ? $localStorage.role : '';\r\n\r\n        vm.area = 0;\r\n        vm.popular = 0;\r\n        vm.markerNumber= 1;\r\n        vm.distance = 0;\r\n        vm.countStoreCity = 0;\r\n        vm.countStoreDistrict = 0;\r\n        vm.countCalculate = 0;\r\n\r\n        vm.destinationA = '';\r\n        vm.destinationB = '';\r\n        vm.origin1 = '';\r\n        vm.origin2 = '';\r\n        vm.center = 'B1 Tô Hiệu, Nghĩa Tân, Cầu Giấy, Hà Nội , Việt Nam';\r\n\r\n        vm.searchStore = searchStore;\r\n        vm.searchStorePage = searchStorePage;\r\n        vm.calculateDistance = calculateDistance;\r\n        vm.citySelected  = citySelected;\r\n        vm.districtSelected = districtSelected;\r\n        vm.wardSelected = wardSelected;\r\n        vm.startStop = startStop;\r\n        vm.continute = continute;\r\n\r\n\r\n        init();\r\n\r\n        function init(){\r\n            loadAllCity();\r\n        }\r\n\r\n        function searchStore() {\r\n\r\n            if(vm.userRole.toUpperCase() == 'FREE USER' || vm.userRole.toUpperCase() == ''){\r\n                alert('Đề nghị nâng cấp tài khoản để nhận kết quả ')\r\n            }else{\r\n                countStore();\r\n                searchStorePage();\r\n\r\n                vm.lstStore = [];\r\n                vm.url = API_CONFIG.KMZ_URL + vm.dataSearch.city_code +'.kmz';\r\n\r\n                StoreService.get({\r\n                    pathMethod: 'front',\r\n                    category_code: vm.industry,\r\n                    city_code: vm.dataSearch.city_code != '00' ? vm.dataSearch.city_code : null,\r\n                    district_code: vm.dataSearch.district_code != '000' ? vm.dataSearch.district_code : null,\r\n                    ward_code: vm.dataSearch.ward_code != '00000' ? vm.dataSearch.ward_code : null,\r\n                    page: vm.page,\r\n                    size: 1000000\r\n                }, function (data) {\r\n                    angular.forEach(data.Data, function (element, index) {\r\n                        var item = {\r\n                            id: element.ID,\r\n                            code: element.Code,\r\n                            name: element.Name,\r\n                            adress: element.Adress,\r\n                            information: element.Information,\r\n                            ward_code: element.WardCode,\r\n                            latitude: element.Latitude,\r\n                            longitude: element.Longitude,\r\n                            category_code: element.CategoryCode,\r\n                            type: element.Type,\r\n                            note: element.Note\r\n                        }\r\n                        vm.lstStore.push(item);\r\n                    });\r\n    \r\n                    vm.total = data.Error.Code;\r\n                    vm.center = data.Data.length > 0 ? data.Data[0].Adress : vm.center;\r\n    \r\n                    setTimeout(function(){\r\n                        NgMap.getMap().then(function(map) {\r\n                            map.setZoom(14);\r\n                        })\r\n                    }, 500)\r\n\r\n                }, function (error) {\r\n                    console.log(error)\r\n                });\r\n            }\r\n        }\r\n\r\n        function searchStorePage() {\r\n                vm.lstStorePage = [];\r\n\r\n                StoreService.get({\r\n                    pathMethod: 'front',\r\n                    category_code: vm.industry,\r\n                    city_code: vm.dataSearch.city_code != '00' ? vm.dataSearch.city_code : null,\r\n                    district_code: vm.dataSearch.district_code != '000' ? vm.dataSearch.district_code : null,\r\n                    ward_code: vm.dataSearch.ward_code != '00000' ? vm.dataSearch.ward_code : null,\r\n                    page: vm.page,\r\n                    size: 12\r\n                }, function (data) {\r\n                    angular.forEach(data.Data, function (element, index) {\r\n                        var item = {\r\n                            id: element.ID,\r\n                            code: element.Code,\r\n                            name: element.Name,\r\n                            adress: element.Adress,\r\n                            information: element.Information,\r\n                            ward_code: element.WardCode,\r\n                            latitude: element.Latitude,\r\n                            longitude: element.Longitude,\r\n                            category_code: element.CategoryCode,\r\n                            type: element.Type,\r\n                            note: element.Note\r\n                        }\r\n                        vm.lstStorePage.push(item);\r\n                    });\r\n    \r\n                    vm.total = data.Error.Code;\r\n\r\n                }, function (error) {\r\n                    console.log(error)\r\n                });\r\n        }\r\n\r\n        function countStore() {\r\n                StoreService.get({\r\n                    pathMethod: 'count',\r\n                    category_code: vm.industry,\r\n                    city_code: vm.dataSearch.city_code != '00' ? vm.dataSearch.city_code : null,\r\n                    district_code: vm.dataSearch.district_code != '000' ? vm.dataSearch.district_code : null,\r\n                    ward_code: vm.dataSearch.ward_code != '00000' ? vm.dataSearch.ward_code : null,\r\n                    page: vm.page,\r\n                    size: 1000000\r\n                }, function (data) {\r\n                    vm.lstCount = data.Data;\r\n                })\r\n        }\r\n\r\n        function calculateDistance(){\r\n            var itemStart = {};\r\n            var itemEnd = {};\r\n            vm.startItem = vm.startItem ? vm.startItem : '';\r\n            vm.endItem =vm.endItem ?vm.endItem : '';\r\n\r\n            if(vm.countCalculate <= 10){\r\n                if(vm.startItem != '' && vm.endItem != ''){\r\n                    for(var i = 0; i < vm.lstStore.length; i++){\r\n                        if(vm.lstStore[i].id == vm.startItem){\r\n                            \r\n                            vm.destinationA = vm.lstStore[i].adress;\r\n                            vm.origin1 = vm.lstStore[i].adress;\r\n                            vm.startTitle = vm.lstStore[i].name;\r\n        \r\n                            itemStart = angular.copy(vm.lstStore[i]);\r\n                            itemStart.isStart = true;\r\n                            itemStart.count = vm.countCalculate;\r\n                        }\r\n        \r\n                        if(vm.lstStore[i].id == vm.endItem){\r\n                            vm.destinationB = vm.lstStore[i].adress;\r\n                            vm.origin2 = vm.lstStore[i].adress;\r\n                            vm.endTitle = vm.lstStore[i].name;\r\n        \r\n                            itemEnd = angular.copy(vm.lstStore[i]);\r\n                            itemEnd.count = vm.countCalculate;\r\n                        }\r\n                    }\r\n        \r\n                    var service = new google.maps.DistanceMatrixService();\r\n                    service.getDistanceMatrix(\r\n                    {\r\n                        origins: [vm.origin1, vm.origin2],\r\n                        destinations: [vm.destinationA, vm.destinationB],\r\n                        travelMode: 'DRIVING'\r\n                    }, callback);\r\n        \r\n                    function callback(response) {\r\n                        if(response.rows.length > 0){\r\n        \r\n                            $scope.$apply(function(){\r\n                                vm.drive = response.rows[0].elements[1].distance.text;\r\n                                vm.minuteDrive = response.rows[0].elements[1].duration.text;\r\n        \r\n                                itemStart.drive = response.rows[0].elements[1].distance.text;\r\n                                itemStart.minuteDrive = response.rows[0].elements[1].duration.text;\r\n        \r\n                                vm.lstCalculate.push(itemStart);\r\n                                vm.lstCalculate.push(itemEnd);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    vm.countCalculate += 1;\r\n                }else{\r\n                    alert('Chưa chọn địa điểm');\r\n                }\r\n                \r\n            }else{\r\n                alert('Vượt quá số lần tìm cho phép');\r\n            }\r\n        }\r\n\r\n        function loadAllCity(){\r\n            LocationService.get({\r\n                pathMethod: 'suggestcity'\r\n            },function(data){\r\n                angular.forEach(data.Data, function(element){\r\n                    vm.lstCity.push(element);\r\n                })\r\n            });\r\n        }\r\n\r\n        function citySelected(){\r\n\r\n            vm.dataSearch.district_code = '000';\r\n            vm.dataSearch.ward_code = '00000';\r\n\r\n            vm.dataSearch.district_name = '';\r\n            vm.dataSearch.ward_name = '';\r\n\r\n            angular.forEach(vm.lstCity, function(element){\r\n                if(element.CityCode == vm.dataSearch.city_code){\r\n                    vm.dataSearch.city_name = element.CityName;\r\n                }\r\n            });\r\n\r\n            loadDistrictByCity();\r\n        }\r\n\r\n        function districtSelected(){\r\n            vm.dataSearch.ward_code = '00000';\r\n            vm.dataSearch.ward_name = '';\r\n\r\n            angular.forEach(vm.lstDistrict, function(element){\r\n                if(element.DistrictCode == vm.dataSearch.district_code){\r\n                    vm.dataSearch.district_name = element.DistrictName;\r\n                }\r\n            });\r\n\r\n            loadByWardDistrict();\r\n        }\r\n\r\n        function wardSelected(){\r\n            \r\n            angular.forEach(vm.lstWard, function(element){\r\n                if(element.WardCode == vm.dataSearch.ward_code){\r\n                    vm.area = element.Area;\r\n                    vm.popular = element.Population;\r\n                    vm.dataSearch.ward_name = element.WardName;\r\n                }\r\n            });\r\n        }\r\n\r\n        function loadDistrictByCity(){\r\n            LocationService.get({\r\n                pathMethod: 'suggestdistrict',\r\n                city_code: vm.dataSearch.city_code != '00' ? vm.dataSearch.city_code : null\r\n            }, function (data) {\r\n                vm.lstDistrict = [{\r\n                    DistrictCode: \"000\",\r\n                    DistrictName: \"Tất cả\"\r\n                }];\r\n\r\n                angular.forEach(data.Data, function(element){\r\n                    vm.lstDistrict.push(element);\r\n                })\r\n            });\r\n        }\r\n\r\n\r\n        function loadByWardDistrict(){\r\n            return LocationService.get({\r\n                pathMethod: 'suggestward',\r\n                city_code: vm.dataSearch.city_code != '00' ? vm.dataSearch.city_code : null,\r\n                district_code: vm.dataSearch.district_code != '000' ? vm.dataSearch.district_code : null\r\n            }, function (data) {\r\n                \r\n                vm.lstWard = [{\r\n                    WardCode: \"00000\",\r\n                    WardName: \"Tất cả\"\r\n                }];\r\n\r\n                 angular.forEach(data.Data, function(element){\r\n                    vm.lstWard.push(element);\r\n                })\r\n            });\r\n        }\r\n\r\n        function startStop(type){\r\n            vm.isStart = type;\r\n        }\r\n\r\n        function continute(){\r\n            var btn_kq = angular.element('#btn_kq');\r\n            var csroll = btn_kq.offset();\r\n            $(window).scrollTop(csroll.top - 300);\r\n        }\r\n\r\n        NgMap.getMap().then(function(map) {\r\n            vm.showCustomMarker= function(evt) {\r\n              map.customMarkers.foo.setVisible(true);\r\n              map.customMarkers.foo.setPosition(this.getPosition());\r\n            };\r\n\r\n            vm.closeCustomMarker= function(evt) {\r\n              this.style.display = 'none';\r\n            };\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('legislation', {\r\n            parent: 'entity',\r\n            url: '/legislation/{industry}',\r\n            data: {\r\n                // authorities: ['ROLE_ADMIN'],\r\n                // pageTitle: 'legislation.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/entities/legislation/legislation.html',\r\n                    controller: 'LegislationController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    // $translatePartialLoader.addPart('legislation');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('LegislationService', LegislationService);\r\n\r\n    LegislationService.$inject = ['$resource'];\r\n\r\n    function LegislationService ($resource) {\r\n        var service = $resource('api/legislation/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    id: null,\r\n                    category_code: null,\r\n                    page: null,\r\n                    size: 12\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('LegislationDetailController', LegislationDetailController);\r\n\r\n    LegislationDetailController.$inject = ['$uibModalInstance', 'data'];\r\n\r\n    function LegislationDetailController($uibModalInstance, data) {\r\n        var vm = this;\r\n\r\n        vm.cancel = cancel;\r\n\r\n        vm.legislation = angular.copy(data);\r\n        console.log('vm.legislation', vm.legislation);\r\n\r\n        function cancel(){\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('LegislationController', LegislationController);\r\n\r\n    LegislationController.$inject = ['$stateParams', 'LegislationService', 'ReporterService', 'ProductService', 'MeansuerService', '$uibModal', '$localStorage'];\r\n\r\n    function LegislationController($stateParams, LegislationService, ReporterService, ProductService, MeansuerService, $uibModal, $localStorage) {\r\n        var vm = this;\r\n\r\n        vm.categoryCode = $stateParams.industry;\r\n\r\n        vm.pageLegislation = 1;\r\n        vm.totalLegislation = 0;\r\n        vm.userRole = $localStorage.role ? $localStorage.role : '';\r\n\r\n        vm.pageNTM = 1;\r\n        vm.totalNTM = 0;\r\n\r\n        vm.dataSearch = {};\r\n        vm.lstLegislation = [];\r\n        vm.lstMeansuer = [];\r\n        vm.lstMeansuerBP = [];\r\n\r\n        vm.search = search;\r\n        vm.getLegislation = getLegislation;\r\n        vm.getMeansuer = getMeansuer;\r\n        vm.loadSuggestrReporter = loadSuggestrReporter;\r\n        vm.selestSuggestReporter = selestSuggestReporter;\r\n        vm.loadSuggestProduct = loadSuggestProduct;\r\n        vm.selestSuggestProduct = selestSuggestProduct;\r\n        // vm.loadSuggestIndustry = loadSuggestIndustry;\r\n        // vm.selestSuggestIndustry = selestSuggestIndustry;\r\n        vm.detail = detail;\r\n\r\n\r\n        function search() {\r\n\r\n            if(vm.userRole.toUpperCase() == 'FREE USER' || vm.userRole.toUpperCase() == ''){\r\n                alert('Đề nghị nâng cấp tài khoản để nhận kết quả ')\r\n            }else{\r\n                if (vm.dataSearch.reporter == null || vm.dataSearch.reporter == '' || vm.dataSearch.product == null || vm.dataSearch.product == '') {\r\n                    alert('Seach input invalid')\r\n                } else {\r\n                    vm.isSearch = true;\r\n                    getLegislation();\r\n                    getMeansuer();\r\n                    getMeansuerBP();\r\n                }\r\n            }\r\n        }\r\n\r\n        function detail(item) {\r\n            $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'app/entities/legislation/legislation.detail.html',\r\n                controller: 'LegislationDetailController',\r\n                controllerAs: 'vm',\r\n                size: 'lg',\r\n                resolve: {\r\n                    data: function () {\r\n                        return item\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        function getLegislation() {\r\n            LegislationService.get({\r\n                pathMethod: 'get',\r\n                category_code: vm.categoryCode,\r\n                reporter: vm.dataSearch.reporter,\r\n                page: vm.pageLegislation\r\n            }, function (data) {\r\n                vm.lstLegislation = data.Data\r\n                for (var i = 0; i < vm.lstLegislation.length; i++) {\r\n                    vm.lstLegislation[i].StartDate = new Date(vm.lstLegislation[i].StartDate);\r\n                    vm.lstLegislation[i].EndDate = new Date(vm.lstLegislation[i].EndDate);\r\n                }\r\n                vm.totalLegislation = data.Error.Code;\r\n                vm.totalLegislationU = data.Error.Message;\r\n            });\r\n        }\r\n\r\n        function getMeansuer() {\r\n            MeansuerService.get({\r\n                category_code: vm.categoryCode,\r\n                reporter: vm.dataSearch.reporter,\r\n                product: vm.dataSearch.product_code,\r\n                page: vm.pageNTM\r\n            }, function (data) {\r\n                vm.lstMeansuer = data.Data;\r\n                vm.totalNTM = data.Error.Code;\r\n            });\r\n        }\r\n\r\n        function getMeansuerBP() {\r\n            MeansuerService.get({\r\n                pathMethod: 'BP',\r\n                category_code: vm.categoryCode,\r\n                reporter: vm.dataSearch.reporter,\r\n                product: vm.dataSearch.product_code,\r\n                page: 1000000\r\n            }, function (data) {\r\n                vm.lstMeansuerBP = data.Data;\r\n                console.log('vm.lstMeansuerBP', vm.lstMeansuerBP);\r\n            });\r\n        }\r\n\r\n        function loadSuggestrReporter(val) {\r\n            return ReporterService.get({\r\n                name: val != '' ? val : null\r\n            }).$promise.then(function (data) {\r\n                return data.Data;\r\n            });\r\n        }\r\n\r\n        function selestSuggestReporter($item, $model, $label, $event) {\r\n            vm.dataSearch.reporter_code = $item.Code;\r\n            // vm.dataSearch.category_code = $item.Code;\r\n        }\r\n\r\n        function loadSuggestProduct(val) {\r\n            return ProductService.get({\r\n                name: val != '' ? val : null\r\n            }).$promise.then(function (data) {\r\n                return data.Data;\r\n            });\r\n        }\r\n\r\n        function selestSuggestProduct($item, $model, $label, $event) {\r\n            vm.dataSearch.product_code = $item.Code;\r\n            // vm.dataSearch.category_code = $item.Code;\r\n        }\r\n\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('entity', {\r\n            abstract: true,\r\n            parent: 'app'\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .filter('words', words);\r\n\r\n    function words() {\r\n        return wordsFilter;\r\n\r\n        function wordsFilter(input, words) {\r\n            if (isNaN(words)) {\r\n                return input;\r\n            }\r\n            if (words <= 0) {\r\n                return '';\r\n            }\r\n            if (input) {\r\n                var inputWords = input.split(/\\s+/);\r\n                if (inputWords.length > words) {\r\n                    input = inputWords.slice(0, words).join(' ') + '...';\r\n                }\r\n            }\r\n            return input;\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .filter('characters', characters);\r\n\r\n    function characters () {\r\n        return charactersFilter;\r\n\r\n        function charactersFilter(input, chars, breakOnWord) {\r\n            if (isNaN(chars)) {\r\n                return input;\r\n            }\r\n            if (chars <= 0) {\r\n                return '';\r\n            }\r\n            if (input && input.length > chars) {\r\n                input = input.substring(0, chars);\r\n\r\n                if (!breakOnWord) {\r\n                    var lastspace = input.lastIndexOf(' ');\r\n                    // Get last space\r\n                    if (lastspace !== -1) {\r\n                        input = input.substr(0, lastspace);\r\n                    }\r\n                } else {\r\n                    while (input.charAt(input.length-1) === ' ') {\r\n                        input = input.substr(0, input.length - 1);\r\n                    }\r\n                }\r\n                return input + '...';\r\n            }\r\n            return input;\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('jhSortBy', jhSortBy);\r\n\r\n    function jhSortBy() {\r\n        var directive = {\r\n            restrict: 'A',\r\n            scope: false,\r\n            require: '^jhSort',\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc(scope, element, attrs, parentCtrl) {\r\n            element.bind('click', function () {\r\n                parentCtrl.sort(attrs.jhSortBy);\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('jhSort', jhSort);\r\n\r\n    function jhSort () {\r\n        var directive = {\r\n            restrict: 'A',\r\n            scope: {\r\n                predicate: '=jhSort',\r\n                ascending: '=',\r\n                callback: '&'\r\n            },\r\n            controller: SortController,\r\n            controllerAs: 'vm',\r\n            bindToController: true\r\n        };\r\n\r\n        return directive;\r\n    }\r\n\r\n    SortController.$inject = ['$scope', '$element'];\r\n\r\n    function SortController ($scope, $element) {\r\n        var vm = this;\r\n\r\n        vm.applyClass = applyClass;\r\n        vm.resetClasses = resetClasses;\r\n        vm.sort = sort;\r\n        vm.triggerApply = triggerApply;\r\n\r\n        $scope.$watchGroup(['vm.predicate', 'vm.ascending'], vm.triggerApply);\r\n        vm.triggerApply();\r\n\r\n        function applyClass (element) {\r\n            var thisIcon = element.find('span.glyphicon'),\r\n                sortIcon = 'glyphicon-sort',\r\n                sortAsc = 'glyphicon-sort-by-attributes',\r\n                sortDesc = 'glyphicon-sort-by-attributes-alt',\r\n                remove = sortIcon + ' ' + sortDesc,\r\n                add = sortAsc;\r\n            if (!vm.ascending) {\r\n                remove = sortIcon + ' ' + sortAsc;\r\n                add = sortDesc;\r\n            }\r\n            vm.resetClasses();\r\n            thisIcon.removeClass(remove);\r\n            thisIcon.addClass(add);\r\n        }\r\n\r\n        function resetClasses () {\r\n            var allThIcons = $element.find('span.glyphicon'),\r\n                sortIcon = 'glyphicon-sort',\r\n                sortAsc = 'glyphicon-sort-by-attributes',\r\n                sortDesc = 'glyphicon-sort-by-attributes-alt';\r\n            allThIcons.removeClass(sortAsc + ' ' + sortDesc);\r\n            allThIcons.addClass(sortIcon);\r\n        }\r\n\r\n        function sort (field) {\r\n            if (field !== vm.predicate) {\r\n                vm.ascending = true;\r\n            } else {\r\n                vm.ascending = !vm.ascending;\r\n            }\r\n            vm.predicate = field;\r\n            $scope.$apply();\r\n            vm.callback();\r\n        }\r\n\r\n        function triggerApply (values)  {\r\n            vm.resetClasses();\r\n            if (values && values[0] !== '_score') {\r\n                vm.applyClass($element.find('th[jh-sort-by=\\'' + values[0] + '\\']'));\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function(){\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('ParseLinks', ParseLinks);\r\n\r\n    function ParseLinks () {\r\n\r\n        var service = {\r\n            parse : parse\r\n        };\r\n\r\n        return service;\r\n\r\n        function parse(header) {\r\n            if (header.length === 0) {\r\n                throw new Error('input must not be of zero length');\r\n            }\r\n\r\n            // Split parts by comma\r\n            var parts = header.split(',');\r\n            var links = {};\r\n            // Parse each part into a named link\r\n            angular.forEach(parts, function(p) {\r\n                var section = p.split('>;');\r\n                if (section.length !== 2) {\r\n                    throw new Error('section could not be split on \">;\"');\r\n                }\r\n                var url = section[0].replace(/<(.*)/, '$1').trim();\r\n                var queryString = {};\r\n                url.replace(\r\n                    new RegExp('([^?=&]+)(=([^&]*))?', 'g'),\r\n                    function($0, $1, $2, $3) { queryString[$1] = $3; }\r\n                );\r\n                var page = queryString.page;\r\n                if (angular.isString(page)) {\r\n                    page = parseInt(page);\r\n                }\r\n                var name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\r\n                links[name] = page;\r\n            });\r\n            return links;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('PaginationUtil', PaginationUtil);\r\n\r\n    function PaginationUtil () {\r\n\r\n        var service = {\r\n            parseAscending : parseAscending,\r\n            parsePage : parsePage,\r\n            parsePredicate : parsePredicate\r\n        };\r\n\r\n        return service;\r\n\r\n        function parseAscending (sort) {\r\n            var sortArray = sort.split(',');\r\n            if (sortArray.length > 1){\r\n                return sort.split(',').slice(-1)[0] === 'asc';\r\n            } else {\r\n                // default to true if no sort defined\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // query params are strings, and need to be parsed\r\n        function parsePage (page) {\r\n            return parseInt(page);\r\n        }\r\n\r\n        // sort can be in the format `id,asc` or `id`\r\n        function parsePredicate (sort) {\r\n            var sortArray = sort.split(',');\r\n            if (sortArray.length > 1){\r\n                sortArray.pop();\r\n            }\r\n            return sortArray.join(',');\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    var jhiItemCount = {\r\n        template: '<div class=\"info\" data-translate=\"global.item-count\" ' +\r\n        'translate-value-first=\"{{(($ctrl.page - 1) * $ctrl.itemsPerPage) === 0 ? 1 : (($ctrl.page - 1) * $ctrl.itemsPerPage + 1)}}\" ' +\r\n        'translate-value-second=\"{{($ctrl.page * $ctrl.itemsPerPage) < $ctrl.queryCount ? ($ctrl.page * $ctrl.itemsPerPage) : $ctrl.queryCount}}\" ' +\r\n        'translate-value-total=\"{{$ctrl.queryCount}}\">' +\r\n        'Showing {{(($ctrl.page - 1) * $ctrl.itemsPerPage) == 0 ? 1 : (($ctrl.page - 1) * $ctrl.itemsPerPage + 1)}} - ' +\r\n        '{{($ctrl.page * $ctrl.itemsPerPage) < $ctrl.queryCount ? ($ctrl.page * $ctrl.itemsPerPage) : $ctrl.queryCount}} ' +\r\n        'of {{$ctrl.queryCount}} items.' +\r\n        '</div>',\r\n        bindings: {\r\n            page: '<',\r\n            queryCount: '<total',\r\n            itemsPerPage: '<'\r\n        }\r\n    };\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .component('jhiItemCount', jhiItemCount);\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .constant('errorConstants', (function() {\r\n            var problemBaseUrl = 'http://www.jhipster.tech/problem';\r\n            return {\r\n                EMAIL_ALREADY_USED_TYPE: problemBaseUrl + '/email-already-used',\r\n                LOGIN_ALREADY_USED_TYPE: problemBaseUrl + '/login-already-used',\r\n                EMAIL_NOT_FOUND_TYPE: problemBaseUrl + '/email-not-found'\r\n            }\r\n        })());\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('DateUtils', DateUtils);\r\n\r\n    DateUtils.$inject = ['$filter'];\r\n\r\n    function DateUtils($filter) {\r\n\r\n        var service = {\r\n            convertDateTimeFromServer: convertDateTimeFromServer,\r\n            convertLocalDateFromServer: convertLocalDateFromServer,\r\n            convertLocalDateToServer: convertLocalDateToServer,\r\n            dateformat: dateformat\r\n        };\r\n\r\n        return service;\r\n\r\n        function convertDateTimeFromServer(date) {\r\n            if (date) {\r\n                return new Date(date);\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        function convertLocalDateFromServer(date) {\r\n            if (date) {\r\n                var dateString = date.split('-');\r\n                return new Date(dateString[0], dateString[1] - 1, dateString[2]);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function convertLocalDateToServer(date) {\r\n            if (date) {\r\n                return $filter('date')(date, 'yyyy-MM-dd');\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        function dateformat() {\r\n            return 'yyyy-MM-dd';\r\n        }\r\n    }\r\n\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('DataUtils', DataUtils);\r\n\r\n    DataUtils.$inject = ['$window'];\r\n\r\n    function DataUtils ($window) {\r\n\r\n        var service = {\r\n            abbreviate: abbreviate,\r\n            byteSize: byteSize,\r\n            openFile: openFile,\r\n            toBase64: toBase64\r\n        };\r\n\r\n        return service;\r\n\r\n        function abbreviate (text) {\r\n            if (!angular.isString(text)) {\r\n                return '';\r\n            }\r\n            if (text.length < 30) {\r\n                return text;\r\n            }\r\n            return text ? (text.substring(0, 15) + '...' + text.slice(-10)) : '';\r\n        }\r\n\r\n        function byteSize (base64String) {\r\n            if (!angular.isString(base64String)) {\r\n                return '';\r\n            }\r\n\r\n            function endsWith(suffix, str) {\r\n                return str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n            }\r\n\r\n            function paddingSize(base64String) {\r\n                if (endsWith('==', base64String)) {\r\n                    return 2;\r\n                }\r\n                if (endsWith('=', base64String)) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            }\r\n\r\n            function size(base64String) {\r\n                return base64String.length / 4 * 3 - paddingSize(base64String);\r\n            }\r\n\r\n            function formatAsBytes(size) {\r\n                return size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') + ' bytes';\r\n            }\r\n\r\n            return formatAsBytes(size(base64String));\r\n        }\r\n\r\n        function openFile (type, data) {\r\n            $window.open('data:' + type + ';base64,' + data, '_blank', 'height=300,width=400');\r\n        }\r\n\r\n        function toBase64 (file, cb) {\r\n            var fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = function (e) {\r\n                var base64Data = e.target.result.substr(e.target.result.indexOf('base64,') + 'base64,'.length);\r\n                cb(base64Data);\r\n            };\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .filter('capitalize', capitalize);\r\n\r\n    function capitalize() {\r\n        return capitalizeFilter;\r\n\r\n        function capitalizeFilter (input) {\r\n            if (input !== null) {\r\n                input = input.toLowerCase();\r\n                input = input.substring(0, 1).toUpperCase() + input.substring(1);\r\n            }\r\n            return input;\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    /*jshint bitwise: false*/\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('Base64', Base64);\r\n\r\n    function Base64 () {\r\n        var keyStr = 'ABCDEFGHIJKLMNOP' +\r\n            'QRSTUVWXYZabcdef' +\r\n            'ghijklmnopqrstuv' +\r\n            'wxyz0123456789+/' +\r\n            '=';\r\n\r\n        var service = {\r\n            decode : decode,\r\n            encode : encode\r\n        };\r\n\r\n        return service;\r\n\r\n        function encode (input) {\r\n            var output = '',\r\n                chr1, chr2, chr3,\r\n                enc1, enc2, enc3, enc4,\r\n                i = 0;\r\n\r\n            while (i < input.length) {\r\n                chr1 = input.charCodeAt(i++);\r\n                chr2 = input.charCodeAt(i++);\r\n                chr3 = input.charCodeAt(i++);\r\n\r\n                enc1 = chr1 >> 2;\r\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n                enc4 = chr3 & 63;\r\n\r\n                if (isNaN(chr2)) {\r\n                    enc3 = enc4 = 64;\r\n                } else if (isNaN(chr3)) {\r\n                    enc4 = 64;\r\n                }\r\n\r\n                output = output +\r\n                    keyStr.charAt(enc1) +\r\n                    keyStr.charAt(enc2) +\r\n                    keyStr.charAt(enc3) +\r\n                    keyStr.charAt(enc4);\r\n            }\r\n\r\n            return output;\r\n        }\r\n\r\n        function decode (input) {\r\n            var output = '',\r\n                chr1, chr2, chr3,\r\n                enc1, enc2, enc3, enc4,\r\n                i = 0;\r\n\r\n            // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\r\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\r\n\r\n            while (i < input.length) {\r\n                enc1 = keyStr.indexOf(input.charAt(i++));\r\n                enc2 = keyStr.indexOf(input.charAt(i++));\r\n                enc3 = keyStr.indexOf(input.charAt(i++));\r\n                enc4 = keyStr.indexOf(input.charAt(i++));\r\n\r\n                chr1 = (enc1 << 2) | (enc2 >> 4);\r\n                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n                chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n                output = output + String.fromCharCode(chr1);\r\n\r\n                if (enc3 !== 64) {\r\n                    output = output + String.fromCharCode(chr2);\r\n                }\r\n                if (enc4 !== 64) {\r\n                    output = output + String.fromCharCode(chr3);\r\n                }\r\n            }\r\n\r\n            return output;\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('LoginService', LoginService);\r\n\r\n    LoginService.$inject = ['$uibModal'];\r\n\r\n    function LoginService ($uibModal) {\r\n        var service = {\r\n            open: open\r\n        };\r\n\r\n        var modalInstance = null;\r\n        var resetModal = function () {\r\n            modalInstance = null;\r\n        };\r\n\r\n        return service;\r\n\r\n        function open () {\r\n            if (modalInstance !== null) return;\r\n            modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'app/components/login/login.html',\r\n                controller: 'LoginController',\r\n                controllerAs: 'vm',\r\n                resolve: {\r\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                        $translatePartialLoader.addPart('login');\r\n                        return $translate.refresh();\r\n                    }]\r\n                }\r\n            });\r\n            modalInstance.result.then(\r\n                resetModal,\r\n                resetModal\r\n            );\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('LoginController', LoginController);\r\n\r\n    LoginController.$inject = ['$rootScope', '$state', '$timeout', 'Auth', '$uibModalInstance'];\r\n\r\n    function LoginController ($rootScope, $state, $timeout, Auth, $uibModalInstance) {\r\n        var vm = this;\r\n\r\n        vm.authenticationError = false;\r\n        vm.cancel = cancel;\r\n        vm.credentials = {};\r\n        vm.login = login;\r\n        vm.password = null;\r\n        vm.register = register;\r\n        vm.rememberMe = true;\r\n        vm.requestResetPassword = requestResetPassword;\r\n        vm.username = null;\r\n\r\n        $timeout(function (){angular.element('#username').focus();});\r\n\r\n        function cancel () {\r\n            vm.credentials = {\r\n                username: null,\r\n                password: null,\r\n                rememberMe: true\r\n            };\r\n            vm.authenticationError = false;\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n\r\n        function login (event) {\r\n            event.preventDefault();\r\n            Auth.login({\r\n                username: vm.username,\r\n                password: vm.password,\r\n                rememberMe: vm.rememberMe\r\n            }).then(function () {\r\n                vm.authenticationError = false;\r\n                $uibModalInstance.close();\r\n                if ($state.current.name === 'register' || $state.current.name === 'activate' ||\r\n                    $state.current.name === 'finishReset' || $state.current.name === 'requestReset') {\r\n                    $state.go('home');\r\n                }\r\n\r\n                $rootScope.$broadcast('authenticationSuccess');\r\n\r\n                // previousState was set in the authExpiredInterceptor before being redirected to login modal.\r\n                // since login is successful, go to stored previousState and clear previousState\r\n                if (Auth.getPreviousState()) {\r\n                    var previousState = Auth.getPreviousState();\r\n                    Auth.resetPreviousState();\r\n                    $state.go(previousState.name, previousState.params);\r\n                }\r\n\r\n                $state.go($state.current.name, {}, {reload: true});\r\n            }).catch(function () {\r\n                vm.authenticationError = true;\r\n            });\r\n        }\r\n\r\n        function register () {\r\n            $uibModalInstance.dismiss('cancel');\r\n            $state.go('register');\r\n        }\r\n\r\n        function requestResetPassword () {\r\n            $uibModalInstance.dismiss('cancel');\r\n            $state.go('requestReset');\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('JhiLanguageService', JhiLanguageService);\r\n\r\n    JhiLanguageService.$inject = ['$q', '$http', '$translate', 'LANGUAGES'];\r\n\r\n    function JhiLanguageService ($q, $http, $translate, LANGUAGES) {\r\n        var service = {\r\n            getAll: getAll,\r\n            getCurrent: getCurrent\r\n        };\r\n\r\n        return service;\r\n\r\n        function getAll () {\r\n            var deferred = $q.defer();\r\n            deferred.resolve(LANGUAGES);\r\n            return deferred.promise;\r\n        }\r\n\r\n        function getCurrent () {\r\n            var deferred = $q.defer();\r\n            var language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\r\n\r\n            deferred.resolve(language);\r\n\r\n            return deferred.promise;\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .filter('findLanguageFromKey', findLanguageFromKey)\r\n        .filter('findLanguageRtlFromKey', findLanguageRtlFromKey);\r\n\r\n    var languages = {\r\n        'en': { name: 'English' }\r\n        // jhipster-needle-i18n-language-key-pipe - JHipster will add/remove languages in this object\r\n    };\r\n\r\n    function findLanguageFromKey() {\r\n        return findLanguageFromKeyFilter;\r\n\r\n        function findLanguageFromKeyFilter(lang) {\r\n            return languages[lang].name;\r\n        }\r\n    }\r\n\r\n    function findLanguageRtlFromKey() {\r\n        return findLanguageRtlFromKeyFilter;\r\n\r\n        function findLanguageRtlFromKeyFilter(lang) {\r\n            return languages[lang].rtl;\r\n        }\r\n    }\r\n\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('JhiLanguageController', JhiLanguageController);\r\n\r\n    JhiLanguageController.$inject = ['$translate', 'JhiLanguageService', 'tmhDynamicLocale'];\r\n\r\n    function JhiLanguageController ($translate, JhiLanguageService, tmhDynamicLocale) {\r\n        var vm = this;\r\n\r\n        vm.changeLanguage = changeLanguage;\r\n        vm.languages = null;\r\n\r\n        JhiLanguageService.getAll().then(function (languages) {\r\n            vm.languages = languages;\r\n        });\r\n\r\n        function changeLanguage (languageKey) {\r\n            $translate.use(languageKey);\r\n            tmhDynamicLocale.set(languageKey);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n\r\n        /*\r\n         Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\r\n         They are written in English to avoid character encoding issues (not a perfect solution)\r\n         */\r\n        .constant('LANGUAGES', [\r\n            'en'\r\n            // jhipster-needle-i18n-language-constant - JHipster will add/remove languages in this array\r\n        ]\r\n    );\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('showValidation', showValidation);\r\n\r\n    function showValidation () {\r\n        var directive = {\r\n            restrict: 'A',\r\n            require: 'form',\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc (scope, element, attrs, formCtrl) {\r\n            element.find('.form-group').each(function() {\r\n                var $formGroup = angular.element(this);\r\n                var $inputs = $formGroup.find('input[ng-model],textarea[ng-model],select[ng-model]');\r\n\r\n                if ($inputs.length > 0) {\r\n                    $inputs.each(function() {\r\n                        var $input = angular.element(this);\r\n                        var inputName = $input.attr('name');\r\n                        scope.$watch(function() {\r\n                            return formCtrl[inputName].$invalid && formCtrl[inputName].$dirty;\r\n                        }, function(isInvalid) {\r\n                            $formGroup.toggleClass('has-error', isInvalid);\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .constant('paginationConstants', {\r\n            'itemsPerPage': 20\r\n        });\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('minbytes', minbytes);\r\n\r\n    function minbytes () {\r\n        var directive = {\r\n            restrict: 'A',\r\n            require: '?ngModel',\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc (scope, element, attrs, ngModel) {\r\n            if (!ngModel) {\r\n                return;\r\n            }\r\n\r\n            ngModel.$validators.minbytes = function (modelValue) {\r\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) >= attrs.minbytes;\r\n            };\r\n        }\r\n\r\n        function endsWith(suffix, str) {\r\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n        }\r\n\r\n        function paddingSize(base64String) {\r\n            if (endsWith('==', base64String)) {\r\n                return 2;\r\n            }\r\n            if (endsWith('=', base64String)) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        function numberOfBytes(base64String) {\r\n            return base64String.length / 4 * 3 - paddingSize(base64String);\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('maxbytes', maxbytes);\r\n\r\n    function maxbytes () {\r\n        var directive = {\r\n            restrict: 'A',\r\n            require: '?ngModel',\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc (scope, element, attrs, ngModel) {\r\n            if (!ngModel) {\r\n                return;\r\n            }\r\n\r\n            ngModel.$validators.maxbytes = function (modelValue) {\r\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) <= attrs.maxbytes;\r\n            };\r\n        }\r\n\r\n        function endsWith(suffix, str) {\r\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n        }\r\n\r\n        function paddingSize(base64String) {\r\n            if (endsWith('==', base64String)) {\r\n                return 2;\r\n            }\r\n            if (endsWith('=', base64String)) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        function numberOfBytes(base64String) {\r\n            return base64String.length / 4 * 3 - paddingSize(base64String);\r\n        }\r\n    }\r\n\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    var jhiAlertError = {\r\n        template: '<div class=\"alerts\" ng-cloak=\"\" role=\"alert\">' +\r\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\r\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre>{{ alert.msg }}</pre></uib-alert>' +\r\n                        '</div>' +\r\n                  '</div>',\r\n        controller: jhiAlertErrorController\r\n    };\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .component('jhiAlertError', jhiAlertError);\r\n\r\n    jhiAlertErrorController.$inject = ['$scope', 'AlertService', '$rootScope', '$translate'];\r\n\r\n    function jhiAlertErrorController ($scope, AlertService, $rootScope, $translate) {\r\n        var vm = this;\r\n\r\n        vm.alerts = [];\r\n\r\n        function addErrorAlert (message, key, data) {\r\n            key = key ? key : message;\r\n            vm.alerts.push(\r\n                AlertService.add(\r\n                    {\r\n                        type: 'danger',\r\n                        msg: key,\r\n                        params: data,\r\n                        timeout: 5000,\r\n                        toast: AlertService.isToast(),\r\n                        scoped: true\r\n                    },\r\n                    vm.alerts\r\n                )\r\n            );\r\n        }\r\n\r\n        var cleanHttpErrorListener = $rootScope.$on('hamiaFrontEndApp.httpError', function (event, httpResponse) {\r\n            var i;\r\n            event.stopPropagation();\r\n            switch (httpResponse.status) {\r\n            // connection refused, server not reachable\r\n            case 0:\r\n                addErrorAlert('Server not reachable','error.server.not.reachable');\r\n                break;\r\n\r\n            case 400:\r\n                var headers = Object.keys(httpResponse.headers()).filter(function (header) {\r\n                    return header.indexOf('app-error', header.length - 'app-error'.length) !== -1 || header.indexOf('app-params', header.length - 'app-params'.length) !== -1;\r\n                }).sort();\r\n                var errorHeader = httpResponse.headers(headers[0]);\r\n                var entityKey = httpResponse.headers(headers[1]);\r\n                if (angular.isString(errorHeader)) {\r\n                    var entityName = $translate.instant('global.menu.entities.' + entityKey);\r\n                    addErrorAlert(errorHeader, errorHeader, {entityName: entityName});\r\n                } else if (httpResponse.data && httpResponse.data.fieldErrors) {\r\n                    for (i = 0; i < httpResponse.data.fieldErrors.length; i++) {\r\n                        var fieldError = httpResponse.data.fieldErrors[i];\r\n                        // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\r\n                        var convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\r\n                        var fieldName = $translate.instant('hamiaFrontEndApp.' + fieldError.objectName + '.' + convertedField);\r\n                        addErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, {fieldName: fieldName});\r\n                    }\r\n                } else if (httpResponse.data && httpResponse.data.message) {\r\n                    addErrorAlert(httpResponse.data.message, httpResponse.data.message, httpResponse.data);\r\n                } else {\r\n                    addErrorAlert(httpResponse.data);\r\n                }\r\n                break;\r\n\r\n            case 404:\r\n                addErrorAlert('Not found','error.url.not.found');\r\n                break;\r\n\r\n            default:\r\n                if (httpResponse.data && httpResponse.data.message) {\r\n                    addErrorAlert(httpResponse.data.message);\r\n                } else {\r\n                    addErrorAlert(angular.toJson(httpResponse));\r\n                }\r\n            }\r\n        });\r\n\r\n        $scope.$on('$destroy', function () {\r\n            if(angular.isDefined(cleanHttpErrorListener) && cleanHttpErrorListener !== null){\r\n                cleanHttpErrorListener();\r\n                vm.alerts = [];\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .provider('AlertService', AlertService);\r\n\r\n    function AlertService () {\r\n        this.toast = false;\r\n        /*jshint validthis: true */\r\n        this.$get = getService;\r\n\r\n        this.showAsToast = function(isToast) {\r\n            this.toast = isToast;\r\n        };\r\n\r\n        getService.$inject = ['$timeout', '$sce', '$translate'];\r\n\r\n        function getService ($timeout, $sce,$translate) {\r\n            var toast = this.toast,\r\n                alertId = 0, // unique id for each alert. Starts from 0.\r\n                alerts = [],\r\n                timeout = 5000; // default timeout\r\n\r\n            return {\r\n                factory: factory,\r\n                isToast: isToast,\r\n                add: addAlert,\r\n                closeAlert: closeAlert,\r\n                closeAlertByIndex: closeAlertByIndex,\r\n                clear: clear,\r\n                get: get,\r\n                success: success,\r\n                error: error,\r\n                info: info,\r\n                warning : warning\r\n            };\r\n\r\n            function isToast() {\r\n                return toast;\r\n            }\r\n\r\n            function clear() {\r\n                alerts = [];\r\n            }\r\n\r\n            function get() {\r\n                return alerts;\r\n            }\r\n\r\n            function success(msg, params, position) {\r\n                return this.add({\r\n                    type: 'success',\r\n                    msg: msg,\r\n                    params: params,\r\n                    timeout: timeout,\r\n                    toast: toast,\r\n                    position: position\r\n                });\r\n            }\r\n\r\n            function error(msg, params, position) {\r\n                return this.add({\r\n                    type: 'danger',\r\n                    msg: msg,\r\n                    params: params,\r\n                    timeout: timeout,\r\n                    toast: toast,\r\n                    position: position\r\n                });\r\n            }\r\n\r\n            function warning(msg, params, position) {\r\n                return this.add({\r\n                    type: 'warning',\r\n                    msg: msg,\r\n                    params: params,\r\n                    timeout: timeout,\r\n                    toast: toast,\r\n                    position: position\r\n                });\r\n            }\r\n\r\n            function info(msg, params, position) {\r\n                return this.add({\r\n                    type: 'info',\r\n                    msg: msg,\r\n                    params: params,\r\n                    timeout: timeout,\r\n                    toast: toast,\r\n                    position: position\r\n                });\r\n            }\r\n\r\n            function factory(alertOptions) {\r\n                var alert = {\r\n                    type: alertOptions.type,\r\n                    msg: $sce.trustAsHtml(alertOptions.msg),\r\n                    id: alertOptions.alertId,\r\n                    timeout: alertOptions.timeout,\r\n                    toast: alertOptions.toast,\r\n                    position: alertOptions.position ? alertOptions.position : 'top right',\r\n                    scoped: alertOptions.scoped,\r\n                    close: function (alerts) {\r\n                        return closeAlert(this.id, alerts);\r\n                    }\r\n                };\r\n                if(!alert.scoped) {\r\n                    alerts.push(alert);\r\n                }\r\n                return alert;\r\n            }\r\n\r\n            function addAlert(alertOptions, extAlerts) {\r\n                alertOptions.alertId = alertId++;\r\n                alertOptions.msg = $translate.instant(alertOptions.msg, alertOptions.params);\r\n                var that = this;\r\n                var alert = this.factory(alertOptions);\r\n                if (alertOptions.timeout && alertOptions.timeout > 0) {\r\n                    $timeout(function () {\r\n                        that.closeAlert(alertOptions.alertId, extAlerts);\r\n                    }, alertOptions.timeout);\r\n                }\r\n                return alert;\r\n            }\r\n\r\n            function closeAlert(id, extAlerts) {\r\n                var thisAlerts = extAlerts ? extAlerts : alerts;\r\n                return closeAlertByIndex(thisAlerts.map(function(e) { return e.id; }).indexOf(id), thisAlerts);\r\n            }\r\n\r\n            function closeAlertByIndex(index, thisAlerts) {\r\n                return thisAlerts.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    var jhiAlert = {\r\n        template: '<div class=\"alerts\" ng-cloak=\"\" role=\"alert\">' +\r\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\r\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre ng-bind-html=\"alert.msg\"></pre></uib-alert>' +\r\n                        '</div>' +\r\n                  '</div>',\r\n        controller: jhiAlertController\r\n    };\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .component('jhiAlert', jhiAlert);\r\n\r\n    jhiAlertController.$inject = ['$scope', 'AlertService'];\r\n\r\n    function jhiAlertController($scope, AlertService) {\r\n        var vm = this;\r\n\r\n        vm.alerts = AlertService.get();\r\n        $scope.$on('$destroy', function () {\r\n            vm.alerts = [];\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('notificationInterceptor', notificationInterceptor);\r\n\r\n    notificationInterceptor.$inject = ['$q', 'AlertService'];\r\n\r\n    function notificationInterceptor ($q, AlertService) {\r\n        var service = {\r\n            response: response\r\n        };\r\n\r\n        return service;\r\n\r\n        function response (response) {\r\n            var headers = Object.keys(response.headers()).filter(function (header) {\r\n                return header.indexOf('app-alert', header.length - 'app-alert'.length) !== -1 || header.indexOf('app-params', header.length - 'app-params'.length) !== -1;\r\n            }).sort();\r\n            var alertKey = response.headers(headers[0]);\r\n            if (angular.isString(alertKey)) {\r\n                AlertService.success(alertKey, { param : response.headers(headers[1])});\r\n            }\r\n            return response;\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('errorHandlerInterceptor', errorHandlerInterceptor);\r\n\r\n    errorHandlerInterceptor.$inject = ['$q', '$rootScope'];\r\n\r\n    function errorHandlerInterceptor ($q, $rootScope) {\r\n        var service = {\r\n            responseError: responseError\r\n        };\r\n\r\n        return service;\r\n\r\n        function responseError (response) {\r\n            if (!(response.status === 401 && (response.data === '' || (response.data.path && response.data.path.indexOf('/api/account') === 0 )))) {\r\n                $rootScope.$emit('hamiaFrontEndApp.httpError', response);\r\n            }\r\n            return $q.reject(response);\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('authExpiredInterceptor', authExpiredInterceptor);\r\n\r\n    authExpiredInterceptor.$inject = ['$rootScope', '$q', '$injector', '$localStorage', '$sessionStorage'];\r\n\r\n    function authExpiredInterceptor($rootScope, $q, $injector, $localStorage, $sessionStorage) {\r\n        var service = {\r\n            responseError: responseError\r\n        };\r\n\r\n        return service;\r\n\r\n        function responseError(response) {\r\n            if (response.status === 401) {\r\n                delete $localStorage.authenticationToken;\r\n                delete $sessionStorage.authenticationToken;\r\n                var Principal = $injector.get('Principal');\r\n                if (Principal.isAuthenticated()) {\r\n                    var Auth = $injector.get('Auth');\r\n                    Auth.authorize(true);\r\n                }\r\n            }\r\n            return $q.reject(response);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('authInterceptor', authInterceptor);\r\n\r\n    authInterceptor.$inject = ['$rootScope', '$q', '$location', '$localStorage', '$sessionStorage'];\r\n\r\n    function authInterceptor($rootScope, $q, $location, $localStorage, $sessionStorage) {\r\n        var service = {\r\n            request: request\r\n        };\r\n\r\n        return service;\r\n\r\n        function request(config) {\r\n            if (!config || !config.url || /^http/.test(config.url)) return config;\r\n\r\n\r\n            /*jshint camelcase: false */\r\n            config.headers = config.headers || {};\r\n\r\n            //set Root URI API\r\n            if (config.url.indexOf('api') != -1) {\r\n                config.url = API_CONFIG.API_URL + '/' + config.url;\r\n            }\r\n\r\n            var token = $localStorage.authenticationToken || $sessionStorage.authenticationToken;\r\n            if (token) {\r\n                config.headers.Authorization = 'Bearer ' + token;\r\n            }\r\n            return config;\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('translationHandler', translationHandler);\r\n\r\n    translationHandler.$inject = ['$rootScope', '$window', '$state', '$translate'];\r\n\r\n    function translationHandler($rootScope, $window, $state, $translate) {\r\n        return {\r\n            initialize: initialize,\r\n            updateTitle: updateTitle\r\n        };\r\n\r\n        function initialize() {\r\n            // if the current translation changes, update the window title\r\n            var translateChangeSuccess = $rootScope.$on('$translateChangeSuccess', function() {\r\n                updateTitle();\r\n            });\r\n\r\n            $rootScope.$on('$destroy', function () {\r\n                if(angular.isDefined(translateChangeSuccess) && translateChangeSuccess !== null){\r\n                    translateChangeSuccess();\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        // update the window title using params in the following\r\n        // precedence\r\n        // 1. titleKey parameter\r\n        // 2. $state.$current.data.pageTitle (current state page title)\r\n        // 3. 'global.title'\r\n        function updateTitle(titleKey) {\r\n            if (!titleKey && $state.$current.data && $state.$current.data.pageTitle) {\r\n                titleKey = $state.$current.data.pageTitle;\r\n            }\r\n            $translate(titleKey || 'global.title').then(function (title) {\r\n                $window.document.title = title;\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('stateHandler', stateHandler);\r\n\r\n    stateHandler.$inject = ['$rootScope', '$state', '$sessionStorage', '$translate', 'JhiLanguageService', 'translationHandler', '$window',\r\n        'Auth', 'Principal', 'VERSION'];\r\n\r\n    function stateHandler($rootScope, $state, $sessionStorage, $translate, JhiLanguageService, translationHandler, $window,\r\n        Auth, Principal, VERSION) {\r\n        return {\r\n            initialize: initialize\r\n        };\r\n\r\n        function initialize() {\r\n            $rootScope.VERSION = VERSION;\r\n\r\n            var stateChangeStart = $rootScope.$on('$stateChangeStart', function (event, toState, toStateParams, fromState) {\r\n                $rootScope.toState = toState;\r\n                $rootScope.toStateParams = toStateParams;\r\n                $rootScope.fromState = fromState;\r\n\r\n                // Redirect to a state with an external URL (http://stackoverflow.com/a/30221248/1098564)\r\n                if (toState.external) {\r\n                    event.preventDefault();\r\n                    $window.open(toState.url, '_self');\r\n                }\r\n\r\n                if (Principal.isIdentityResolved()) {\r\n                    Auth.authorize();\r\n                }\r\n\r\n                // Update the language\r\n                JhiLanguageService.getCurrent().then(function (language) {\r\n                    $translate.use(language);\r\n                });\r\n            });\r\n\r\n            var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess',  function(event, toState, toParams, fromState, fromParams) {\r\n                var titleKey = 'global.title' ;\r\n\r\n                // Set the page title key to the one configured in state or use default one\r\n                if (toState.data.pageTitle) {\r\n                    titleKey = toState.data.pageTitle;\r\n                }\r\n                translationHandler.updateTitle(titleKey);\r\n            });\r\n\r\n            $rootScope.$on('$destroy', function () {\r\n                if(angular.isDefined(stateChangeStart) && stateChangeStart !== null){\r\n                    stateChangeStart();\r\n                }\r\n                if(angular.isDefined(stateChangeSuccess) && stateChangeSuccess !== null){\r\n                    stateChangeSuccess();\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(paginationConfig);\r\n\r\n    paginationConfig.$inject = ['uibPaginationConfig', 'paginationConstants'];\r\n\r\n    function paginationConfig(uibPaginationConfig, paginationConstants) {\r\n        uibPaginationConfig.itemsPerPage = paginationConstants.itemsPerPage;\r\n        uibPaginationConfig.maxSize = 5;\r\n        uibPaginationConfig.boundaryLinks = true;\r\n        uibPaginationConfig.firstText = '«';\r\n        uibPaginationConfig.previousText = '‹';\r\n        uibPaginationConfig.nextText = '›';\r\n        uibPaginationConfig.lastText = '»';\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(pagerConfig);\r\n\r\n    pagerConfig.$inject = ['uibPagerConfig', 'paginationConstants'];\r\n\r\n    function pagerConfig(uibPagerConfig, paginationConstants) {\r\n        uibPagerConfig.itemsPerPage = paginationConstants.itemsPerPage;\r\n        uibPagerConfig.previousText = '«';\r\n        uibPagerConfig.nextText = '»';\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('translationStorageProvider', translationStorageProvider);\r\n\r\n    translationStorageProvider.$inject = ['$cookies', '$log', 'LANGUAGES'];\r\n\r\n    function translationStorageProvider($cookies, $log, LANGUAGES) {\r\n        return {\r\n            get: get,\r\n            put: put\r\n        };\r\n\r\n        function get(name) {\r\n            if (LANGUAGES.indexOf($cookies.getObject(name)) === -1) {\r\n                $log.info('Resetting invalid cookie language \"' + $cookies.getObject(name) + '\" to preferred language \"en\"');\r\n                $cookies.putObject(name, 'en');\r\n            }\r\n            return $cookies.getObject(name);\r\n        }\r\n\r\n        function put(name, value) {\r\n            $cookies.putObject(name, value);\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(translationConfig);\r\n\r\n    translationConfig.$inject = ['$translateProvider', 'tmhDynamicLocaleProvider', 'BUILD_TIMESTAMP'];\r\n\r\n    function translationConfig($translateProvider, tmhDynamicLocaleProvider, BUILD_TIMESTAMP) {\r\n        // Initialize angular-translate\r\n        $translateProvider.useLoader('$translatePartialLoader', {\r\n            urlTemplate: 'i18n/{lang}/{part}.json' + (BUILD_TIMESTAMP ? '?build=' + BUILD_TIMESTAMP : '')\r\n        });\r\n\r\n        $translateProvider.preferredLanguage('en');\r\n        $translateProvider.useStorage('translationStorageProvider');\r\n        $translateProvider.useSanitizeValueStrategy('escaped');\r\n        $translateProvider.addInterpolation('$translateMessageFormatInterpolation');\r\n\r\n        tmhDynamicLocaleProvider.localeLocationPattern('i18n/angular-locale_{{locale}}.js');\r\n        tmhDynamicLocaleProvider.useCookieStorage();\r\n        tmhDynamicLocaleProvider.storageKey('NG_TRANSLATE_LANG_KEY');\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(localStorageConfig);\r\n\r\n    localStorageConfig.$inject = ['$localStorageProvider', '$sessionStorageProvider'];\r\n\r\n    function localStorageConfig($localStorageProvider, $sessionStorageProvider) {\r\n        $localStorageProvider.setKeyPrefix('jhi-');\r\n        $sessionStorageProvider.setKeyPrefix('jhi-');\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(httpConfig);\r\n\r\n    httpConfig.$inject = ['$urlRouterProvider', '$httpProvider', 'httpRequestInterceptorCacheBusterProvider', '$urlMatcherFactoryProvider'];\r\n\r\n    function httpConfig($urlRouterProvider, $httpProvider, httpRequestInterceptorCacheBusterProvider, $urlMatcherFactoryProvider) {\r\n        //Cache everything except rest api requests\r\n        httpRequestInterceptorCacheBusterProvider.setMatchlist([/.*api.*/, /.*protected.*/], true);\r\n\r\n        $urlRouterProvider.otherwise('/');\r\n\r\n        $httpProvider.interceptors.push('errorHandlerInterceptor');\r\n        $httpProvider.interceptors.push('authExpiredInterceptor');\r\n        $httpProvider.interceptors.push('authInterceptor');\r\n        $httpProvider.interceptors.push('notificationInterceptor');\r\n        // jhipster-needle-angularjs-add-interceptor JHipster will add new application http interceptor here\r\n\r\n        $urlMatcherFactoryProvider.type('boolean', {\r\n            name : 'boolean',\r\n            decode: function(val) { return val === true || val === 'true'; },\r\n            encode: function(val) { return val ? 1 : 0; },\r\n            equals: function(a, b) { return this.is(a) && a === b; },\r\n            is: function(val) { return [true,false,0,1].indexOf(val) >= 0; },\r\n            pattern: /bool|true|0|1/\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(compileServiceConfig);\r\n\r\n    compileServiceConfig.$inject = ['$compileProvider','DEBUG_INFO_ENABLED'];\r\n\r\n    function compileServiceConfig($compileProvider,DEBUG_INFO_ENABLED) {\r\n        // disable debug data on prod profile to improve performance\r\n        $compileProvider.debugInfoEnabled(DEBUG_INFO_ENABLED);\r\n\r\n        /*\r\n        If you wish to debug an application with this information\r\n        then you should open up a debug console in the browser\r\n        then call this method directly in this console:\r\n\r\n\t\tangular.reloadWithDebugInfo();\r\n\t\t*/\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(alertServiceConfig);\r\n\r\n    alertServiceConfig.$inject = ['AlertServiceProvider'];\r\n\r\n    function alertServiceConfig(AlertServiceProvider) {\r\n        // set below to true to make alerts look like toast\r\n        AlertServiceProvider.showAsToast(false);\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('app', {\r\n            abstract: true,\r\n            views: {\r\n                'navbar@': {\r\n                    templateUrl: 'app/layouts/navbar/navbar.html',\r\n                    controller: 'NavbarController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                authorize: ['Auth',\r\n                    function (Auth) {\r\n                        return Auth.authorize();\r\n                    }\r\n                ],\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('global');\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function () {\n    'use strict';\n    // DO NOT EDIT THIS FILE, EDIT THE GULP TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE\n    angular\n        .module('hamiaFrontEndApp')\n        .constant('VERSION', \"0.0.1-SNAPSHOT\")\n        .constant('DEBUG_INFO_ENABLED', false)\n        .constant('BUILD_TIMESTAMP', 1573404868025)\n;\n})();\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('UserManagementDialogController',UserManagementDialogController);\r\n\r\n    UserManagementDialogController.$inject = ['$stateParams', '$uibModalInstance', 'entity', 'User', 'JhiLanguageService'];\r\n\r\n    function UserManagementDialogController ($stateParams, $uibModalInstance, entity, User, JhiLanguageService) {\r\n        var vm = this;\r\n\r\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\r\n        vm.clear = clear;\r\n        vm.languages = null;\r\n        vm.save = save;\r\n        vm.user = entity;\r\n\r\n\r\n        JhiLanguageService.getAll().then(function (languages) {\r\n            vm.languages = languages;\r\n        });\r\n\r\n        function clear () {\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n\r\n        function onSaveSuccess (result) {\r\n            vm.isSaving = false;\r\n            $uibModalInstance.close(result);\r\n        }\r\n\r\n        function onSaveError () {\r\n            vm.isSaving = false;\r\n        }\r\n\r\n        function save () {\r\n            vm.isSaving = true;\r\n            if (vm.user.id !== null) {\r\n                User.update(vm.user, onSaveSuccess, onSaveError);\r\n            } else {\r\n                User.save(vm.user, onSaveSuccess, onSaveError);\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('UserManagementDetailController', UserManagementDetailController);\r\n\r\n    UserManagementDetailController.$inject = ['$stateParams', 'User'];\r\n\r\n    function UserManagementDetailController($stateParams, User) {\r\n        var vm = this;\r\n\r\n        vm.load = load;\r\n        vm.user = {};\r\n\r\n        vm.load($stateParams.login);\r\n\r\n        function load(login) {\r\n            User.get({login: login}, function(result) {\r\n                vm.user = result;\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('UserManagementDeleteController', UserManagementDeleteController);\r\n\r\n    UserManagementDeleteController.$inject = ['$uibModalInstance', 'entity', 'User'];\r\n\r\n    function UserManagementDeleteController ($uibModalInstance, entity, User) {\r\n        var vm = this;\r\n\r\n        vm.user = entity;\r\n        vm.clear = clear;\r\n        vm.confirmDelete = confirmDelete;\r\n\r\n        function clear () {\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n\r\n        function confirmDelete (login) {\r\n            User.delete({login: login},\r\n                function () {\r\n                    $uibModalInstance.close(true);\r\n                });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider\r\n        .state('user-management', {\r\n            parent: 'admin',\r\n            url: '/user-management?page&sort',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'userManagement.home.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/user-management/user-management.html',\r\n                    controller: 'UserManagementController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },            params: {\r\n                page: {\r\n                    value: '1',\r\n                    squash: true\r\n                },\r\n                sort: {\r\n                    value: 'id,asc',\r\n                    squash: true\r\n                }\r\n            },\r\n            resolve: {\r\n                pagingParams: ['$stateParams', 'PaginationUtil', function ($stateParams, PaginationUtil) {\r\n                    return {\r\n                        page: PaginationUtil.parsePage($stateParams.page),\r\n                        sort: $stateParams.sort,\r\n                        predicate: PaginationUtil.parsePredicate($stateParams.sort),\r\n                        ascending: PaginationUtil.parseAscending($stateParams.sort)\r\n                    };\r\n                }],\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('user-management');\r\n                    return $translate.refresh();\r\n                }]\r\n\r\n            }        })\r\n        .state('user-management.new', {\r\n            url: '/new',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN']\r\n            },\r\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\r\n                $uibModal.open({\r\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\r\n                    controller: 'UserManagementDialogController',\r\n                    controllerAs: 'vm',\r\n                    backdrop: 'static',\r\n                    size: 'lg',\r\n                    resolve: {\r\n                        entity: function () {\r\n                            return {\r\n                                id: null, login: null, firstName: null, lastName: null, email: null,\r\n                                activated: true, langKey: null, createdBy: null, createdDate: null,\r\n                                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\r\n                                resetKey: null, authorities: null\r\n                            };\r\n                        }\r\n                    }\r\n                }).result.then(function() {\r\n                    $state.go('user-management', null, { reload: true });\r\n                }, function() {\r\n                    $state.go('user-management');\r\n                });\r\n            }]\r\n        })\r\n        .state('user-management.edit', {\r\n            url: '/{login}/edit',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN']\r\n            },\r\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\r\n                $uibModal.open({\r\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\r\n                    controller: 'UserManagementDialogController',\r\n                    controllerAs: 'vm',\r\n                    backdrop: 'static',\r\n                    size: 'lg',\r\n                    resolve: {\r\n                        entity: ['User', function(User) {\r\n                            return User.get({login : $stateParams.login}).$promise;\r\n                        }]\r\n                    }\r\n                }).result.then(function() {\r\n                    $state.go('user-management', null, { reload: true });\r\n                }, function() {\r\n                    $state.go('^');\r\n                });\r\n            }]\r\n        })\r\n        .state('user-management-detail', {\r\n            parent: 'user-management',\r\n            url: '/{login}',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'user-management.detail.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/user-management/user-management-detail.html',\r\n                    controller: 'UserManagementDetailController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('user-management');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        })\r\n        .state('user-management.delete', {\r\n            url: '/{login}/delete',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN']\r\n            },\r\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\r\n                $uibModal.open({\r\n                    templateUrl: 'app/admin/user-management/user-management-delete-dialog.html',\r\n                    controller: 'UserManagementDeleteController',\r\n                    controllerAs: 'vm',\r\n                    size: 'md',\r\n                    resolve: {\r\n                        entity: ['User', function(User) {\r\n                            return User.get({login : $stateParams.login}).$promise;\r\n                        }]\r\n                    }\r\n                }).result.then(function() {\r\n                    $state.go('user-management', null, { reload: true });\r\n                }, function() {\r\n                    $state.go('^');\r\n                });\r\n            }]\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('UserManagementController', UserManagementController);\r\n\r\n    UserManagementController.$inject = ['Principal', 'User', 'ParseLinks', 'AlertService', '$state', 'pagingParams', 'paginationConstants', 'JhiLanguageService'];\r\n\r\n    function UserManagementController(Principal, User, ParseLinks, AlertService, $state, pagingParams, paginationConstants, JhiLanguageService) {\r\n        var vm = this;\r\n\r\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\r\n        vm.currentAccount = null;\r\n        vm.languages = null;\r\n        vm.loadAll = loadAll;\r\n        vm.setActive = setActive;\r\n        vm.users = [];\r\n        vm.page = 1;\r\n        vm.totalItems = null;\r\n        vm.clear = clear;\r\n        vm.links = null;\r\n        vm.loadPage = loadPage;\r\n        vm.predicate = pagingParams.predicate;\r\n        vm.reverse = pagingParams.ascending;\r\n        vm.itemsPerPage = paginationConstants.itemsPerPage;\r\n        vm.transition = transition;\r\n\r\n        vm.loadAll();\r\n        JhiLanguageService.getAll().then(function (languages) {\r\n            vm.languages = languages;\r\n        });\r\n        Principal.identity().then(function(account) {\r\n            vm.currentAccount = account;\r\n        });\r\n\r\n        function setActive (user, isActivated) {\r\n            user.activated = isActivated;\r\n            User.update(user, function () {\r\n                vm.loadAll();\r\n                vm.clear();\r\n            });\r\n        }\r\n\r\n        function loadAll () {\r\n            User.query({\r\n                page: pagingParams.page - 1,\r\n                size: vm.itemsPerPage,\r\n                sort: sort()\r\n            }, onSuccess, onError);\r\n        }\r\n\r\n        function onSuccess(data, headers) {\r\n            vm.links = ParseLinks.parse(headers('link'));\r\n            vm.totalItems = headers('X-Total-Count');\r\n            vm.queryCount = vm.totalItems;\r\n            vm.page = pagingParams.page;\r\n            vm.users = data;\r\n        }\r\n\r\n        function onError(error) {\r\n            AlertService.error(error.data.message);\r\n        }\r\n\r\n        function clear () {\r\n            vm.user = {\r\n                id: null, login: null, firstName: null, lastName: null, email: null,\r\n                activated: null, langKey: null, createdBy: null, createdDate: null,\r\n                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\r\n                resetKey: null, authorities: null\r\n            };\r\n        }\r\n\r\n        function sort () {\r\n            var result = [vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc')];\r\n            if (vm.predicate !== 'id') {\r\n                result.push('id');\r\n            }\r\n            return result;\r\n        }\r\n\r\n        function loadPage (page) {\r\n            vm.page = page;\r\n            vm.transition();\r\n        }\r\n\r\n        function transition () {\r\n            $state.transitionTo($state.$current, {\r\n                page: vm.page,\r\n                sort: vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc'),\r\n                search: vm.currentSearch\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('jhi-metrics', {\r\n            parent: 'admin',\r\n            url: '/metrics',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'metrics.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/metrics/metrics.html',\r\n                    controller: 'JhiMetricsMonitoringController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('metrics');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('JhiMetricsService', JhiMetricsService);\r\n\r\n    JhiMetricsService.$inject = ['$rootScope', '$http'];\r\n\r\n    function JhiMetricsService ($rootScope, $http) {\r\n        var service = {\r\n            getMetrics: getMetrics,\r\n            threadDump: threadDump\r\n        };\r\n\r\n        return service;\r\n\r\n        function getMetrics () {\r\n            return $http.get('management/metrics').then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        function threadDump () {\r\n            return $http.get('management/dump').then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('JhiMetricsMonitoringModalController', JhiMetricsMonitoringModalController);\r\n\r\n    JhiMetricsMonitoringModalController.$inject = ['$uibModalInstance', 'threadDump'];\r\n\r\n    function JhiMetricsMonitoringModalController ($uibModalInstance, threadDump) {\r\n        var vm = this;\r\n\r\n        vm.cancel = cancel;\r\n        vm.getLabelClass = getLabelClass;\r\n        vm.threadDump = threadDump;\r\n        vm.threadDumpAll = 0;\r\n        vm.threadDumpBlocked = 0;\r\n        vm.threadDumpRunnable = 0;\r\n        vm.threadDumpTimedWaiting = 0;\r\n        vm.threadDumpWaiting = 0;\r\n\r\n        angular.forEach(threadDump, function(value) {\r\n            if (value.threadState === 'RUNNABLE') {\r\n                vm.threadDumpRunnable += 1;\r\n            } else if (value.threadState === 'WAITING') {\r\n                vm.threadDumpWaiting += 1;\r\n            } else if (value.threadState === 'TIMED_WAITING') {\r\n                vm.threadDumpTimedWaiting += 1;\r\n            } else if (value.threadState === 'BLOCKED') {\r\n                vm.threadDumpBlocked += 1;\r\n            }\r\n        });\r\n\r\n        vm.threadDumpAll = vm.threadDumpRunnable + vm.threadDumpWaiting +\r\n            vm.threadDumpTimedWaiting + vm.threadDumpBlocked;\r\n\r\n        function cancel () {\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n\r\n        function getLabelClass (threadState) {\r\n            if (threadState === 'RUNNABLE') {\r\n                return 'label-success';\r\n            } else if (threadState === 'WAITING') {\r\n                return 'label-info';\r\n            } else if (threadState === 'TIMED_WAITING') {\r\n                return 'label-warning';\r\n            } else if (threadState === 'BLOCKED') {\r\n                return 'label-danger';\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('JhiMetricsMonitoringController', JhiMetricsMonitoringController);\r\n\r\n    JhiMetricsMonitoringController.$inject = ['$scope','JhiMetricsService', '$uibModal'];\r\n\r\n    function JhiMetricsMonitoringController ($scope, JhiMetricsService, $uibModal) {\r\n        var vm = this;\r\n\r\n        vm.metrics = {};\r\n        vm.refresh = refresh;\r\n        vm.refreshThreadDumpData = refreshThreadDumpData;\r\n        vm.servicesStats = {};\r\n        vm.updatingMetrics = true;\r\n\r\n        vm.refresh();\r\n\r\n        $scope.$watch('vm.metrics', function (newValue) {\r\n            vm.servicesStats = {};\r\n            angular.forEach(newValue.timers, function (value, key) {\r\n                if (key.includes('web.rest') || key.includes('service')) {\r\n                    vm.servicesStats[key] = value;\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n        function refresh () {\r\n            vm.updatingMetrics = true;\r\n            JhiMetricsService.getMetrics().then(function (promise) {\r\n                vm.metrics = promise;\r\n                vm.updatingMetrics = false;\r\n            }, function (promise) {\r\n                vm.metrics = promise.data;\r\n                vm.updatingMetrics = false;\r\n            });\r\n        }\r\n\r\n        function refreshThreadDumpData () {\r\n            JhiMetricsService.threadDump().then(function(data) {\r\n                $uibModal.open({\r\n                    templateUrl: 'app/admin/metrics/metrics.modal.html',\r\n                    controller: 'JhiMetricsMonitoringModalController',\r\n                    controllerAs: 'vm',\r\n                    size: 'lg',\r\n                    resolve: {\r\n                        threadDump: function() {\r\n                            return data;\r\n                        }\r\n\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('logs', {\r\n            parent: 'admin',\r\n            url: '/logs',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'logs.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/logs/logs.html',\r\n                    controller: 'LogsController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('logs');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('LogsService', LogsService);\r\n\r\n    LogsService.$inject = ['$resource'];\r\n\r\n    function LogsService ($resource) {\r\n        var service = $resource('management/logs', {}, {\r\n            'findAll': { method: 'GET', isArray: true},\r\n            'changeLevel': { method: 'PUT'}\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('LogsController', LogsController);\r\n\r\n    LogsController.$inject = ['LogsService'];\r\n\r\n    function LogsController (LogsService) {\r\n        var vm = this;\r\n\r\n        vm.changeLevel = changeLevel;\r\n        vm.loggers = LogsService.findAll();\r\n\r\n        function changeLevel (name, level) {\r\n            LogsService.changeLevel({name: name, level: level}, function () {\r\n                vm.loggers = LogsService.findAll();\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('jhi-health', {\r\n            parent: 'admin',\r\n            url: '/health',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'health.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/health/health.html',\r\n                    controller: 'JhiHealthCheckController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('health');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('JhiHealthService', JhiHealthService);\r\n\r\n    JhiHealthService.$inject = ['$rootScope', '$http'];\r\n\r\n    function JhiHealthService ($rootScope, $http) {\r\n        var separator = '.';\r\n        var service = {\r\n            checkHealth: checkHealth,\r\n            transformHealthData: transformHealthData,\r\n            getBaseName: getBaseName,\r\n            getSubSystemName: getSubSystemName\r\n        };\r\n\r\n        return service;\r\n\r\n        function checkHealth () {\r\n            return $http.get('management/health').then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        function transformHealthData (data) {\r\n            var response = [];\r\n            flattenHealthData(response, null, data);\r\n            return response;\r\n        }\r\n\r\n        function getBaseName (name) {\r\n            if (name) {\r\n                var split = name.split('.');\r\n                return split[0];\r\n            }\r\n        }\r\n\r\n        function getSubSystemName (name) {\r\n            if (name) {\r\n                var split = name.split('.');\r\n                split.splice(0, 1);\r\n                var remainder = split.join('.');\r\n                return remainder ? ' - ' + remainder : '';\r\n            }\r\n        }\r\n\r\n        /* private methods */\r\n        function flattenHealthData (result, path, data) {\r\n            angular.forEach(data, function (value, key) {\r\n                if (isHealthObject(value)) {\r\n                    if (hasSubSystem(value)) {\r\n                        addHealthObject(result, false, value, getModuleName(path, key));\r\n                        flattenHealthData(result, getModuleName(path, key), value);\r\n                    } else {\r\n                        addHealthObject(result, true, value, getModuleName(path, key));\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n\r\n        function addHealthObject (result, isLeaf, healthObject, name) {\r\n\r\n            var healthData = {\r\n                'name': name\r\n            };\r\n            var details = {};\r\n            var hasDetails = false;\r\n\r\n            angular.forEach(healthObject, function (value, key) {\r\n                if (key === 'status' || key === 'error') {\r\n                    healthData[key] = value;\r\n                } else {\r\n                    if (!isHealthObject(value)) {\r\n                        details[key] = value;\r\n                        hasDetails = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Add the of the details\r\n            if (hasDetails) {\r\n                angular.extend(healthData, { 'details': details});\r\n            }\r\n\r\n            // Only add nodes if they provide additional information\r\n            if (isLeaf || hasDetails || healthData.error) {\r\n                result.push(healthData);\r\n            }\r\n            return healthData;\r\n        }\r\n\r\n        function getModuleName (path, name) {\r\n            var result;\r\n            if (path && name) {\r\n                result = path + separator + name;\r\n            }  else if (path) {\r\n                result = path;\r\n            } else if (name) {\r\n                result = name;\r\n            } else {\r\n                result = '';\r\n            }\r\n            return result;\r\n        }\r\n\r\n        function hasSubSystem (healthObject) {\r\n            var result = false;\r\n            angular.forEach(healthObject, function (value) {\r\n                if (value && value.status) {\r\n                    result = true;\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n\r\n        function isHealthObject (healthObject) {\r\n            var result = false;\r\n            angular.forEach(healthObject, function (value, key) {\r\n                if (key === 'status') {\r\n                    result = true;\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular.module('hamiaFrontEndApp')\r\n        .controller('HealthModalController', HealthModalController);\r\n\r\n    HealthModalController.$inject = ['$uibModalInstance', 'currentHealth', 'baseName', 'subSystemName'];\r\n\r\n    function HealthModalController ($uibModalInstance, currentHealth, baseName, subSystemName) {\r\n        var vm = this;\r\n\r\n        vm.cancel = cancel;\r\n        vm.currentHealth = currentHealth;\r\n        vm.baseName = baseName;\r\n        vm.subSystemName = subSystemName;\r\n\r\n        function cancel() {\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('JhiHealthCheckController', JhiHealthCheckController);\r\n\r\n    JhiHealthCheckController.$inject = ['JhiHealthService', '$uibModal'];\r\n\r\n    function JhiHealthCheckController (JhiHealthService, $uibModal) {\r\n        var vm = this;\r\n\r\n        vm.updatingHealth = true;\r\n        vm.getLabelClass = getLabelClass;\r\n        vm.refresh = refresh;\r\n        vm.showHealth = showHealth;\r\n        vm.baseName = JhiHealthService.getBaseName;\r\n        vm.subSystemName = JhiHealthService.getSubSystemName;\r\n\r\n        vm.refresh();\r\n\r\n        function getLabelClass (statusState) {\r\n            if (statusState === 'UP') {\r\n                return 'label-success';\r\n            } else {\r\n                return 'label-danger';\r\n            }\r\n        }\r\n\r\n        function refresh () {\r\n            vm.updatingHealth = true;\r\n            JhiHealthService.checkHealth().then(function (response) {\r\n                vm.healthData = JhiHealthService.transformHealthData(response);\r\n                vm.updatingHealth = false;\r\n            }, function (response) {\r\n                vm.healthData =  JhiHealthService.transformHealthData(response.data);\r\n                vm.updatingHealth = false;\r\n            });\r\n        }\r\n\r\n        function showHealth (health) {\r\n            $uibModal.open({\r\n                templateUrl: 'app/admin/health/health.modal.html',\r\n                controller: 'HealthModalController',\r\n                controllerAs: 'vm',\r\n                size: 'lg',\r\n                resolve: {\r\n                    currentHealth: function() {\r\n                        return health;\r\n                    },\r\n                    baseName: function() {\r\n                        return vm.baseName;\r\n                    },\r\n                    subSystemName: function() {\r\n                        return vm.subSystemName;\r\n                    }\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig ($stateProvider) {\r\n        $stateProvider.state('docs', {\r\n            parent: 'admin',\r\n            url: '/docs',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'global.menu.admin.apidocs'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/docs/docs.html'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', function ($translate) {\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('jhi-configuration', {\r\n            parent: 'admin',\r\n            url: '/configuration',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'configuration.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/configuration/configuration.html',\r\n                    controller: 'JhiConfigurationController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('configuration');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('JhiConfigurationService', JhiConfigurationService);\r\n\r\n    JhiConfigurationService.$inject = ['$filter', '$http'];\r\n\r\n    function JhiConfigurationService ($filter, $http) {\r\n        var service = {\r\n            get: get,\r\n            getEnv: getEnv\r\n        };\r\n\r\n        return service;\r\n\r\n        function get () {\r\n            return $http.get('management/configprops').then(getConfigPropsComplete);\r\n\r\n            function getConfigPropsComplete (response) {\r\n                var properties = [];\r\n                angular.forEach(response.data, function (data) {\r\n                    properties.push(data);\r\n                });\r\n                var orderBy = $filter('orderBy');\r\n                return orderBy(properties, 'prefix');\r\n            }\r\n        }\r\n\r\n        function getEnv () {\r\n            return $http.get('management/env').then(getEnvComplete);\r\n\r\n            function getEnvComplete (response) {\r\n                var properties = {};\r\n                angular.forEach(response.data, function (val,key) {\r\n                    var vals = [];\r\n                    angular.forEach(val, function (v,k) {\r\n                        vals.push({ key:k, val:v });\r\n                    });\r\n                    properties[key] = vals;\r\n                });\r\n                return properties;\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('JhiConfigurationController', JhiConfigurationController);\r\n\r\n    JhiConfigurationController.$inject = ['$filter','JhiConfigurationService'];\r\n\r\n    function JhiConfigurationController (filter,JhiConfigurationService) {\r\n        var vm = this;\r\n\r\n        vm.allConfiguration = null;\r\n        vm.configuration = null;\r\n\r\n        JhiConfigurationService.get().then(function(configuration) {\r\n            vm.configuration = configuration;\r\n        });\r\n        JhiConfigurationService.getEnv().then(function (configuration) {\r\n            vm.allConfiguration = configuration;\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('audits', {\r\n            parent: 'admin',\r\n            url: '/audits',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'audits.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/audits/audits.html',\r\n                    controller: 'AuditsController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('audits');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('AuditsService', AuditsService);\r\n\r\n    AuditsService.$inject = ['$resource'];\r\n\r\n    function AuditsService ($resource) {\r\n        var service = $resource('management/audits/:id', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            'query': {\r\n                method: 'GET',\r\n                isArray: true,\r\n                params: {fromDate: null, toDate: null}\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('AuditsController', AuditsController);\r\n\r\n    AuditsController.$inject = ['$filter', 'AuditsService', 'ParseLinks'];\r\n\r\n    function AuditsController ($filter, AuditsService, ParseLinks) {\r\n        var vm = this;\r\n\r\n        vm.audits = null;\r\n        vm.fromDate = null;\r\n        vm.links = null;\r\n        vm.loadPage = loadPage;\r\n        vm.onChangeDate = onChangeDate;\r\n        vm.page = 1;\r\n        vm.previousMonth = previousMonth;\r\n        vm.toDate = null;\r\n        vm.today = today;\r\n        vm.totalItems = null;\r\n\r\n        vm.today();\r\n        vm.previousMonth();\r\n        vm.onChangeDate();\r\n\r\n        function onChangeDate () {\r\n            var dateFormat = 'yyyy-MM-dd';\r\n            var fromDate = $filter('date')(vm.fromDate, dateFormat);\r\n            var toDate = $filter('date')(vm.toDate, dateFormat);\r\n\r\n            AuditsService.query({page: vm.page -1, size: 20, fromDate: fromDate, toDate: toDate}, function(result, headers){\r\n                vm.audits = result;\r\n                vm.links = ParseLinks.parse(headers('link'));\r\n                vm.totalItems = headers('X-Total-Count');\r\n            });\r\n        }\r\n\r\n        // Date picker configuration\r\n        function today () {\r\n            // Today + 1 day - needed if the current day must be included\r\n            var today = new Date();\r\n            vm.toDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);\r\n        }\r\n\r\n        function previousMonth () {\r\n            var fromDate = new Date();\r\n            if (fromDate.getMonth() === 0) {\r\n                fromDate = new Date(fromDate.getFullYear() - 1, 11, fromDate.getDate());\r\n            } else {\r\n                fromDate = new Date(fromDate.getFullYear(), fromDate.getMonth() - 1, fromDate.getDate());\r\n            }\r\n\r\n            vm.fromDate = fromDate;\r\n        }\r\n\r\n        function loadPage (page) {\r\n            vm.page = page;\r\n            vm.onChangeDate();\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig ($stateProvider) {\r\n        $stateProvider.state('admin', {\r\n            abstract: true,\r\n            parent: 'app'\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('settings', {\r\n            parent: 'account',\r\n            url: '/settings',\r\n            data: {\r\n                authorities: ['ROLE_USER'],\r\n                pageTitle: 'global.menu.account.settings'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/account/settings/settings.html',\r\n                    controller: 'SettingsController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('settings');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('SettingsController', SettingsController);\r\n\r\n    SettingsController.$inject = ['Principal', 'Auth', 'JhiLanguageService', '$translate'];\r\n\r\n    function SettingsController (Principal, Auth, JhiLanguageService, $translate) {\r\n        var vm = this;\r\n\r\n        vm.error = null;\r\n        vm.save = save;\r\n        vm.settingsAccount = null;\r\n        vm.success = null;\r\n\r\n        /**\r\n         * Store the \"settings account\" in a separate variable, and not in the shared \"account\" variable.\r\n         */\r\n        var copyAccount = function (account) {\r\n            return {\r\n                activated: account.activated,\r\n                email: account.email,\r\n                firstName: account.firstName,\r\n                langKey: account.langKey,\r\n                lastName: account.lastName,\r\n                login: account.login\r\n            };\r\n        };\r\n\r\n        Principal.identity().then(function(account) {\r\n            vm.settingsAccount = copyAccount(account);\r\n        });\r\n\r\n        function save () {\r\n            Auth.updateAccount(vm.settingsAccount).then(function() {\r\n                vm.error = null;\r\n                vm.success = 'OK';\r\n                Principal.identity(true).then(function(account) {\r\n                    vm.settingsAccount = copyAccount(account);\r\n                });\r\n                JhiLanguageService.getCurrent().then(function(current) {\r\n                    if (vm.settingsAccount.langKey !== current) {\r\n                        $translate.use(vm.settingsAccount.langKey);\r\n                    }\r\n                });\r\n            }).catch(function() {\r\n                vm.success = null;\r\n                vm.error = 'ERROR';\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('requestReset', {\r\n            parent: 'account',\r\n            url: '/reset/request',\r\n            data: {\r\n                authorities: []\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/account/reset/request/reset.request.html',\r\n                    controller: 'RequestResetController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('reset');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('RequestResetController', RequestResetController);\r\n\r\n    RequestResetController.$inject = ['$timeout', 'Auth', 'errorConstants'];\r\n\r\n    function RequestResetController ($timeout, Auth, errorConstants) {\r\n        var vm = this;\r\n\r\n        vm.error = null;\r\n        vm.errorEmailNotExists = null;\r\n        vm.requestReset = requestReset;\r\n        vm.resetAccount = {};\r\n        vm.success = null;\r\n\r\n        $timeout(function (){angular.element('#email').focus();});\r\n\r\n        function requestReset () {\r\n\r\n            vm.error = null;\r\n            vm.errorEmailNotExists = null;\r\n\r\n            Auth.resetPasswordInit(vm.resetAccount.email).then(function () {\r\n                vm.success = 'OK';\r\n            }).catch(function (response) {\r\n                vm.success = null;\r\n                if (response.status === 400 && angular.fromJson(response.data).type === errorConstants.EMAIL_NOT_FOUND_TYPE) {\r\n                    vm.errorEmailNotExists = 'ERROR';\r\n                } else {\r\n                    vm.error = 'ERROR';\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('finishReset', {\r\n            parent: 'account',\r\n            url: '/reset/finish?key',\r\n            data: {\r\n                authorities: []\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/account/reset/finish/reset.finish.html',\r\n                    controller: 'ResetFinishController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('reset');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('ResetFinishController', ResetFinishController);\r\n\r\n    ResetFinishController.$inject = ['$stateParams', '$timeout', 'Auth', 'LoginService'];\r\n\r\n    function ResetFinishController ($stateParams, $timeout, Auth, LoginService) {\r\n        var vm = this;\r\n\r\n        vm.keyMissing = angular.isUndefined($stateParams.key);\r\n        vm.confirmPassword = null;\r\n        vm.doNotMatch = null;\r\n        vm.error = null;\r\n        vm.finishReset = finishReset;\r\n        vm.login = LoginService.open;\r\n        vm.resetAccount = {};\r\n        vm.success = null;\r\n\r\n        $timeout(function (){angular.element('#password').focus();});\r\n\r\n        function finishReset() {\r\n            vm.doNotMatch = null;\r\n            vm.error = null;\r\n            if (vm.resetAccount.password !== vm.confirmPassword) {\r\n                vm.doNotMatch = 'ERROR';\r\n            } else {\r\n                Auth.resetPasswordFinish({key: $stateParams.key, newPassword: vm.resetAccount.password}).then(function () {\r\n                    vm.success = 'OK';\r\n                }).catch(function () {\r\n                    vm.success = null;\r\n                    vm.error = 'ERROR';\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('register', {\r\n            parent: 'account',\r\n            url: '/register',\r\n            data: {\r\n                authorities: [],\r\n                pageTitle: 'register.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/account/register/register.html',\r\n                    controller: 'RegisterController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('register');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('RegisterController', RegisterController);\r\n\r\n\r\n    RegisterController.$inject = ['$translate', '$timeout', 'Auth', 'LoginService', 'Register'];\r\n\r\n    function RegisterController ($translate, $timeout, Auth, LoginService, Register) {\r\n        var vm = this;\r\n\r\n        vm.doNotMatch = null;\r\n        vm.error = null;\r\n        vm.errorUserExists = null;\r\n        vm.login = LoginService.open;\r\n        vm.register = register;\r\n        vm.registerAccount = {};\r\n        vm.success = null;\r\n\r\n        $timeout(function (){angular.element('#login').focus();});\r\n\r\n        // function register () {\r\n        //     if (vm.registerAccount.password !== vm.confirmPassword) {\r\n        //         vm.doNotMatch = 'ERROR';\r\n        //     } else {\r\n        //         vm.registerAccount.langKey = $translate.use();\r\n        //         vm.doNotMatch = null;\r\n        //         vm.error = null;\r\n        //         vm.errorUserExists = null;\r\n        //         vm.errorEmailExists = null;\r\n\r\n        //         Auth.createAccount(vm.registerAccount).then(function () {\r\n        //             vm.success = 'OK';\r\n        //         }).catch(function (response) {\r\n        //             vm.success = null;\r\n        //             if (response.status === 400 && angular.fromJson(response.data).type === errorConstants.LOGIN_ALREADY_USED_TYPE) {\r\n        //                 vm.errorUserExists = 'ERROR';\r\n        //             } else if (response.status === 400 && angular.fromJson(response.data).type === errorConstants.EMAIL_ALREADY_USED_TYPE) {\r\n        //                 vm.errorEmailExists = 'ERROR';\r\n        //             } else {\r\n        //                 vm.error = 'ERROR';\r\n        //             }\r\n        //         });\r\n        //     }\r\n        //}\r\n\r\n\r\n        function register(){\r\n\r\n            var userData = {\r\n                username: vm.registerAccount.login,\r\n                email: vm.registerAccount.email,\r\n                first_name: vm.registerAccount.fisrtName,\r\n                last_name: vm.registerAccount.lastName,\r\n                password:  vm.registerAccount.password,\r\n                role: 'Free User',\r\n            }\r\n            \r\n            Register.update({\r\n                pathMethod: 'create'\r\n            }, userData, function(data){\r\n                console.log('data', data);\r\n            }, function(error){\r\n                console.log(error)\r\n            })\r\n        }\r\n    }\r\n})();\r\n","/* globals $ */\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('passwordStrengthBar', passwordStrengthBar);\r\n\r\n    function passwordStrengthBar () {\r\n        var directive = {\r\n            replace: true,\r\n            restrict: 'E',\r\n            template: '<div id=\"strength\">' +\r\n                '<small data-translate=\"global.messages.validate.newpassword.strength\">Password strength:</small>' +\r\n                '<ul id=\"strengthBar\">' +\r\n                '<li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li>' +\r\n                '</ul>' +\r\n                '</div>',\r\n            scope: {\r\n                passwordToCheck: '='\r\n            },\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        /* private helper methods*/\r\n\r\n        function linkFunc(scope, iElement) {\r\n            var strength = {\r\n                colors: ['#F00', '#F90', '#FF0', '#9F0', '#0F0'],\r\n                mesureStrength: function (p) {\r\n\r\n                    var _force = 0;\r\n                    var _regex = /[$-/:-?{-~!\"^_`\\[\\]]/g; // \"\r\n\r\n                    var _lowerLetters = /[a-z]+/.test(p);\r\n                    var _upperLetters = /[A-Z]+/.test(p);\r\n                    var _numbers = /[0-9]+/.test(p);\r\n                    var _symbols = _regex.test(p);\r\n\r\n                    var _flags = [_lowerLetters, _upperLetters, _numbers, _symbols];\r\n                    var _passedMatches = $.grep(_flags, function (el) {\r\n                        return el === true;\r\n                    }).length;\r\n\r\n                    _force += 2 * p.length + ((p.length >= 10) ? 1 : 0);\r\n                    _force += _passedMatches * 10;\r\n\r\n                    // penalty (short password)\r\n                    _force = (p.length <= 6) ? Math.min(_force, 10) : _force;\r\n\r\n                    // penalty (poor variety of characters)\r\n                    _force = (_passedMatches === 1) ? Math.min(_force, 10) : _force;\r\n                    _force = (_passedMatches === 2) ? Math.min(_force, 20) : _force;\r\n                    _force = (_passedMatches === 3) ? Math.min(_force, 40) : _force;\r\n\r\n                    return _force;\r\n\r\n                },\r\n                getColor: function (s) {\r\n\r\n                    var idx;\r\n                    if (s <= 10) {\r\n                        idx = 0;\r\n                    }\r\n                    else if (s <= 20) {\r\n                        idx = 1;\r\n                    }\r\n                    else if (s <= 30) {\r\n                        idx = 2;\r\n                    }\r\n                    else if (s <= 40) {\r\n                        idx = 3;\r\n                    }\r\n                    else {\r\n                        idx = 4;\r\n                    }\r\n\r\n                    return { idx: idx + 1, col: this.colors[idx] };\r\n                }\r\n            };\r\n            scope.$watch('passwordToCheck', function (password) {\r\n                if (password) {\r\n                    var c = strength.getColor(strength.mesureStrength(password));\r\n                    iElement.removeClass('ng-hide');\r\n                    iElement.find('ul').children('li')\r\n                        .css({ 'background-color': '#DDD' })\r\n                        .slice(0, c.idx)\r\n                        .css({ 'background-color': c.col });\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('password', {\r\n            parent: 'account',\r\n            url: '/password',\r\n            data: {\r\n                authorities: ['ROLE_USER'],\r\n                pageTitle: 'global.menu.account.password'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/account/password/password.html',\r\n                    controller: 'PasswordController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('password');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('PasswordController', PasswordController);\r\n\r\n    PasswordController.$inject = ['Auth', 'Principal'];\r\n\r\n    function PasswordController (Auth, Principal) {\r\n        var vm = this;\r\n\r\n        vm.changePassword = changePassword;\r\n        vm.doNotMatch = null;\r\n        vm.error = null;\r\n        vm.success = null;\r\n\r\n        Principal.identity().then(function(account) {\r\n            vm.account = account;\r\n        });\r\n\r\n        function changePassword () {\r\n            if (vm.password !== vm.confirmPassword) {\r\n                vm.error = null;\r\n                vm.success = null;\r\n                vm.doNotMatch = 'ERROR';\r\n            } else {\r\n                vm.doNotMatch = null;\r\n                Auth.changePassword(vm.password).then(function () {\r\n                    vm.error = null;\r\n                    vm.success = 'OK';\r\n                }).catch(function () {\r\n                    vm.success = null;\r\n                    vm.error = 'ERROR';\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('activate', {\r\n            parent: 'account',\r\n            url: '/activate?key',\r\n            data: {\r\n                authorities: [],\r\n                pageTitle: 'activate.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/account/activate/activate.html',\r\n                    controller: 'ActivationController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('activate');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('ActivationController', ActivationController);\r\n\r\n    ActivationController.$inject = ['$stateParams', 'Auth', 'LoginService'];\r\n\r\n    function ActivationController ($stateParams, Auth, LoginService) {\r\n        var vm = this;\r\n\r\n        Auth.activateAccount({key: $stateParams.key}).then(function () {\r\n            vm.error = null;\r\n            vm.success = 'OK';\r\n        }).catch(function () {\r\n            vm.success = null;\r\n            vm.error = 'ERROR';\r\n        });\r\n\r\n        vm.login = LoginService.open;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('account', {\r\n            abstract: true,\r\n            parent: 'app'\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp', [\r\n            'ngStorage',\r\n            'tmh.dynamicLocale',\r\n            'pascalprecht.translate',\r\n            'ngResource',\r\n            'ngCookies',\r\n            'ngAria',\r\n            'ngCacheBuster',\r\n            'ngFileUpload',\r\n            'ui.bootstrap',\r\n            'ui.bootstrap.datetimepicker',\r\n            'ui.router',\r\n            'infinite-scroll',\r\n            // jhipster-needle-angularjs-add-module JHipster will add new module here\r\n            'angular-loading-bar',\r\n            'ngMap',\r\n            'ngFileSaver'\r\n        ])\r\n        .run(run);\r\n\r\n    run.$inject = ['stateHandler', 'translationHandler'];\r\n\r\n    function run(stateHandler, translationHandler) {\r\n        stateHandler.initialize();\r\n        translationHandler.initialize();\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('User', User);\r\n\r\n    User.$inject = ['$resource'];\r\n\r\n    function User ($resource) {\r\n        var service = $resource('api/users/:login', {}, {\r\n            'query': {method: 'GET', isArray: true},\r\n            'get': {\r\n                method: 'GET',\r\n                transformResponse: function (data) {\r\n                    data = angular.fromJson(data);\r\n                    return data;\r\n                }\r\n            },\r\n            'save': { method:'POST' },\r\n            'update': { method:'PUT' },\r\n            'delete':{ method:'DELETE'}\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('ProfileService', ProfileService);\r\n\r\n    ProfileService.$inject = ['$http'];\r\n\r\n    function ProfileService($http) {\r\n\r\n        var dataPromise;\r\n\r\n        var service = {\r\n            getProfileInfo : getProfileInfo\r\n        };\r\n\r\n        return service;\r\n\r\n        function getProfileInfo() {\r\n            if (angular.isUndefined(dataPromise)) {\r\n                dataPromise = $http.get('api/profile-info').then(function(result) {\r\n                    if (result.data.activeProfiles) {\r\n                        var response = {};\r\n                        response.activeProfiles = result.data.activeProfiles;\r\n                        response.ribbonEnv = result.data.ribbonEnv;\r\n                        response.inProduction = result.data.activeProfiles.indexOf(\"prod\") !== -1;\r\n                        response.swaggerEnabled = result.data.activeProfiles.indexOf(\"swagger\") !== -1;\r\n                        return response;\r\n                    }\r\n                });\r\n            }\r\n            return dataPromise;\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('pageRibbon', pageRibbon);\r\n\r\n    pageRibbon.$inject = ['ProfileService', '$rootScope', '$translate'];\r\n\r\n    function pageRibbon(ProfileService, $rootScope, $translate) {\r\n        var directive = {\r\n            replace : true,\r\n            restrict : 'AE',\r\n            template : '<div class=\"ribbon hidden\"><a href=\"\" data-translate=\"global.ribbon.{{ribbonEnv}}\">{{ribbonEnv}}</a></div>',\r\n            link : linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc(scope, element, attrs) {\r\n            ProfileService.getProfileInfo().then(function(response) {\r\n                if (response.ribbonEnv) {\r\n                    scope.ribbonEnv = response.ribbonEnv;\r\n                    element.addClass(response.ribbonEnv);\r\n                    element.removeClass('hidden');\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('ReporterService', ReporterService);\r\n\r\n    ReporterService.$inject = ['$resource'];\r\n\r\n    function ReporterService ($resource) {\r\n        var service = $resource('api/reporter/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    id: null,\r\n                    category_code: null\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('ProductService', ProductService);\r\n\r\n    ProductService.$inject = ['$resource'];\r\n\r\n    function ProductService ($resource) {\r\n        var service = $resource('api/product/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    id: null,\r\n                    category_code: null\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('MeansuerService', MeansuerService);\r\n\r\n    MeansuerService.$inject = ['$resource'];\r\n\r\n    function MeansuerService ($resource) {\r\n        var service = $resource('api/meansuer/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    reporter: null,\r\n                    category_code: null,\r\n                    product: null,\r\n                    page: null,\r\n                    size: 12,\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('LocationService', LocationService);\r\n\r\n    LocationService.$inject = ['$resource'];\r\n\r\n    function LocationService ($resource) {\r\n        var service = $resource('api/ward/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('IndustryService', IndustryService);\r\n\r\n    IndustryService.$inject = ['$resource'];\r\n\r\n    function IndustryService ($resource) {\r\n        var service = $resource('api/categories/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    id: null,\r\n                    category_code: null\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('CrawlService', CrawlService);\r\n\r\n    CrawlService.$inject = ['$resource'];\r\n\r\n    function CrawlService ($resource) {\r\n        var service = $resource('api/crawl/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    id: null,\r\n                    category_code: null\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('CategoriesService', CategoriesService);\r\n\r\n    CategoriesService.$inject = ['$resource'];\r\n\r\n    function CategoriesService ($resource) {\r\n        var service = $resource('api/categories/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    id: null,\r\n                    category_code: null\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('Register', Register);\r\n\r\n    Register.$inject = ['$resource'];\r\n\r\n    function Register ($resource) {\r\n        var service = $resource('api/user/:pathMethod',{},{\r\n            'get': {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            'query': {\r\n                method: 'GET',\r\n                interceptor: {\r\n                    response: function(response) {\r\n                        // expose response\r\n                        return response;\r\n                    }\r\n                }\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                interceptor: {\r\n                    response: function(response) {\r\n                        // expose response\r\n                        return response;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('Principal', Principal);\r\n\r\n    Principal.$inject = ['$q', 'Account', '$localStorage', '$sessionStorage'];\r\n\r\n    function Principal ($q, Account, $localStorage, $sessionStorage) {\r\n        var _identity,\r\n            _authenticated = false;\r\n\r\n        var service = {\r\n            authenticate: authenticate,\r\n            hasAnyAuthority: hasAnyAuthority,\r\n            hasAuthority: hasAuthority,\r\n            identity: identity,\r\n            isAuthenticated: isAuthenticated,\r\n            isIdentityResolved: isIdentityResolved\r\n        };\r\n\r\n        return service;\r\n\r\n        function authenticate (identity) {\r\n            _identity = identity;\r\n            _authenticated = identity !== null;\r\n        }\r\n\r\n        function hasAnyAuthority (authorities) {\r\n            if (!_authenticated || !_identity || !_identity.authorities) {\r\n                return false;\r\n            }\r\n\r\n            for (var i = 0; i < authorities.length; i++) {\r\n                if (_identity.authorities.indexOf(authorities[i]) !== -1) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        function hasAuthority (authority) {\r\n            if (!_authenticated) {\r\n                return $q.when(false);\r\n            }\r\n\r\n            return this.identity().then(function(_id) {\r\n                return _id.authorities && _id.authorities.indexOf(authority) !== -1;\r\n            }, function(){\r\n                return false;\r\n            });\r\n        }\r\n\r\n        function identity (force) {\r\n            var deferred = $q.defer();\r\n\r\n            if (force === true) {\r\n                _identity = undefined;\r\n            }\r\n\r\n            // check and see if we have retrieved the identity data from the server.\r\n            // if we have, reuse it by immediately resolving\r\n            if (angular.isDefined(_identity)) {\r\n                deferred.resolve(_identity);\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            // retrieve the identity data from the server, update the identity object, and then resolve.\r\n            Account.get().$promise\r\n                .then(getAccountThen)\r\n                .catch(getAccountCatch);\r\n\r\n            return deferred.promise;\r\n\r\n            function getAccountThen (account) {\r\n                _identity = account.data.Data;\r\n                $localStorage.permission = account.data.Data.Permission\r\n                $localStorage.role = account.data.Data.Role\r\n                _authenticated = true;\r\n                deferred.resolve(_identity);\r\n            }\r\n\r\n            function getAccountCatch () {\r\n                _identity = null;\r\n                _authenticated = false;\r\n                deferred.resolve(_identity);\r\n\r\n                delete $localStorage.authenticationToken;\r\n                delete $localStorage.permission;\r\n                delete $localStorage.role;\r\n                delete $sessionStorage.authenticationToken;\r\n            }\r\n        }\r\n\r\n        function isAuthenticated () {\r\n            return _authenticated;\r\n        }\r\n\r\n        function isIdentityResolved () {\r\n            return angular.isDefined(_identity);\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('PasswordResetInit', PasswordResetInit);\r\n\r\n    PasswordResetInit.$inject = ['$resource'];\r\n\r\n    function PasswordResetInit($resource) {\r\n        var service = $resource('api/account/reset-password/init', {}, {});\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('PasswordResetFinish', PasswordResetFinish);\r\n\r\n    PasswordResetFinish.$inject = ['$resource'];\r\n\r\n    function PasswordResetFinish($resource) {\r\n        var service = $resource('api/account/reset-password/finish', {}, {});\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('Password', Password);\r\n\r\n    Password.$inject = ['$resource'];\r\n\r\n    function Password($resource) {\r\n        var service = $resource('api/account/change-password', {}, {});\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('hasAuthority', hasAuthority);\r\n\r\n    hasAuthority.$inject = ['Principal'];\r\n\r\n    function hasAuthority(Principal) {\r\n        var directive = {\r\n            restrict: 'A',\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc(scope, element, attrs) {\r\n            var authority = attrs.hasAuthority.replace(/\\s+/g, '');\r\n\r\n            var setVisible = function () {\r\n                    element.removeClass('hidden');\r\n                },\r\n                setHidden = function () {\r\n                    element.addClass('hidden');\r\n                },\r\n                defineVisibility = function (reset) {\r\n\r\n                    if (reset) {\r\n                        setVisible();\r\n                    }\r\n\r\n                    Principal.hasAuthority(authority)\r\n                        .then(function (result) {\r\n                            if (result) {\r\n                                setVisible();\r\n                            } else {\r\n                                setHidden();\r\n                            }\r\n                        });\r\n                };\r\n\r\n            if (authority.length > 0) {\r\n                defineVisibility(true);\r\n\r\n                scope.$watch(function() {\r\n                    return Principal.isAuthenticated();\r\n                }, function() {\r\n                    defineVisibility(true);\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('hasAnyAuthority', hasAnyAuthority);\r\n\r\n    hasAnyAuthority.$inject = ['Principal'];\r\n\r\n    function hasAnyAuthority(Principal) {\r\n        var directive = {\r\n            restrict: 'A',\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc(scope, element, attrs) {\r\n            var authorities = attrs.hasAnyAuthority.replace(/\\s+/g, '').split(',');\r\n\r\n            var setVisible = function () {\r\n                    element.removeClass('hidden');\r\n                },\r\n                setHidden = function () {\r\n                    element.addClass('hidden');\r\n                },\r\n                defineVisibility = function (reset) {\r\n                    var result;\r\n                    if (reset) {\r\n                        setVisible();\r\n                    }\r\n\r\n                    result = Principal.hasAnyAuthority(authorities);\r\n                    if (result) {\r\n                        setVisible();\r\n                    } else {\r\n                        setHidden();\r\n                    }\r\n                };\r\n\r\n            if (authorities.length > 0) {\r\n                defineVisibility(true);\r\n\r\n                scope.$watch(function() {\r\n                    return Principal.isAuthenticated();\r\n                }, function() {\r\n                    defineVisibility(true);\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('Auth', Auth);\r\n\r\n    Auth.$inject = ['$rootScope', '$state', '$sessionStorage', '$q', '$translate', 'Principal', 'AuthServerProvider', 'Account', 'LoginService', 'Register', 'Activate', 'Password', 'PasswordResetInit', 'PasswordResetFinish'];\r\n\r\n    function Auth ($rootScope, $state, $sessionStorage, $q, $translate, Principal, AuthServerProvider, Account, LoginService, Register, Activate, Password, PasswordResetInit, PasswordResetFinish) {\r\n        var service = {\r\n            activateAccount: activateAccount,\r\n            authorize: authorize,\r\n            changePassword: changePassword,\r\n            createAccount: createAccount,\r\n            getPreviousState: getPreviousState,\r\n            login: login,\r\n            logout: logout,\r\n            loginWithToken: loginWithToken,\r\n            resetPasswordFinish: resetPasswordFinish,\r\n            resetPasswordInit: resetPasswordInit,\r\n            resetPreviousState: resetPreviousState,\r\n            storePreviousState: storePreviousState,\r\n            updateAccount: updateAccount\r\n        };\r\n\r\n        return service;\r\n\r\n        function activateAccount (key, callback) {\r\n            var cb = callback || angular.noop;\r\n\r\n            return Activate.get(key,\r\n                function (response) {\r\n                    return cb(response);\r\n                },\r\n                function (err) {\r\n                    return cb(err);\r\n                }.bind(this)).$promise;\r\n        }\r\n\r\n        function authorize (force) {\r\n            var authReturn = Principal.identity(force).then(authThen);\r\n\r\n            return authReturn;\r\n\r\n            function authThen () {\r\n                var isAuthenticated = Principal.isAuthenticated();\r\n\r\n                // an authenticated user can't access to login and register pages\r\n                if (isAuthenticated && $rootScope.toState.parent === 'account' && ($rootScope.toState.name === 'login' || $rootScope.toState.name === 'register' || $rootScope.toState.name === 'social-auth')) {\r\n                    $state.go('home');\r\n                }\r\n\r\n                // recover and clear previousState after external login redirect (e.g. oauth2)\r\n                if (isAuthenticated && !$rootScope.fromState.name && getPreviousState()) {\r\n                    var previousState = getPreviousState();\r\n                    resetPreviousState();\r\n                    $state.go(previousState.name, previousState.params);\r\n                }\r\n\r\n                if ($rootScope.toState.data.authorities && $rootScope.toState.data.authorities.length > 0 && !Principal.hasAnyAuthority($rootScope.toState.data.authorities)) {\r\n                    if (isAuthenticated) {\r\n                        // user is signed in but not authorized for desired state\r\n                        $state.go('accessdenied');\r\n                    }\r\n                    else {\r\n                        // user is not authenticated. stow the state they wanted before you\r\n                        // send them to the login service, so you can return them when you're done\r\n                        storePreviousState($rootScope.toState.name, $rootScope.toStateParams);\r\n\r\n                        // now, send them to the signin state so they can log in\r\n                        $state.go('accessdenied').then(function() {\r\n                            LoginService.open();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function changePassword (newPassword, callback) {\r\n            var cb = callback || angular.noop;\r\n\r\n            return Password.save(newPassword, function () {\r\n                return cb();\r\n            }, function (err) {\r\n                return cb(err);\r\n            }).$promise;\r\n        }\r\n\r\n        function createAccount (account, callback) {\r\n            var cb = callback || angular.noop;\r\n\r\n            return Register.save(account,\r\n                function () {\r\n                    return cb(account);\r\n                },\r\n                function (err) {\r\n                    this.logout();\r\n                    return cb(err);\r\n                }.bind(this)).$promise;\r\n        }\r\n\r\n        function login (credentials, callback) {\r\n            var cb = callback || angular.noop;\r\n            var deferred = $q.defer();\r\n\r\n            AuthServerProvider.login(credentials)\r\n                .then(loginThen)\r\n                .catch(function (err) {\r\n                    this.logout();\r\n                    deferred.reject(err);\r\n                    return cb(err);\r\n                }.bind(this));\r\n\r\n            function loginThen (data) {\r\n                Principal.identity(true).then(function(account) {\r\n                    // After the login the language will be changed to\r\n                    // the language selected by the user during his registration\r\n                    // if (account!== null) {\r\n                    //     $translate.use(account.langKey).then(function () {\r\n                    //         $translate.refresh();\r\n                    //     });\r\n                    // }\r\n                    deferred.resolve(data);\r\n                });\r\n                return cb();\r\n            }\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        function loginWithToken(jwt, rememberMe) {\r\n            return AuthServerProvider.loginWithToken(jwt, rememberMe);\r\n        }\r\n\r\n        function logout () {\r\n            AuthServerProvider.logout();\r\n            Principal.authenticate(null);\r\n        }\r\n\r\n        function resetPasswordFinish (keyAndPassword, callback) {\r\n            var cb = callback || angular.noop;\r\n\r\n            return PasswordResetFinish.save(keyAndPassword, function () {\r\n                return cb();\r\n            }, function (err) {\r\n                return cb(err);\r\n            }).$promise;\r\n        }\r\n\r\n        function resetPasswordInit (mail, callback) {\r\n            var cb = callback || angular.noop;\r\n\r\n            return PasswordResetInit.save(mail, function() {\r\n                return cb();\r\n            }, function (err) {\r\n                return cb(err);\r\n            }).$promise;\r\n        }\r\n\r\n        function updateAccount (account, callback) {\r\n            var cb = callback || angular.noop;\r\n\r\n            return Account.save(account,\r\n                function () {\r\n                    return cb(account);\r\n                },\r\n                function (err) {\r\n                    return cb(err);\r\n                }.bind(this)).$promise;\r\n        }\r\n\r\n        function getPreviousState() {\r\n            var previousState = $sessionStorage.previousState;\r\n            return previousState;\r\n        }\r\n\r\n        function resetPreviousState() {\r\n            delete $sessionStorage.previousState;\r\n        }\r\n\r\n        function storePreviousState(previousStateName, previousStateParams) {\r\n            var previousState = { \"name\": previousStateName, \"params\": previousStateParams };\r\n            $sessionStorage.previousState = previousState;\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('AuthServerProvider', AuthServerProvider);\r\n\r\n    AuthServerProvider.$inject = ['$http', '$localStorage', '$sessionStorage', '$q'];\r\n\r\n    function AuthServerProvider ($http, $localStorage, $sessionStorage, $q) {\r\n        var service = {\r\n            getToken: getToken,\r\n            login: login,\r\n            loginWithToken: loginWithToken,\r\n            storeAuthenticationToken: storeAuthenticationToken,\r\n            logout: logout\r\n        };\r\n\r\n        return service;\r\n\r\n        function getToken () {\r\n\r\n            return $localStorage.authenticationToken || $sessionStorage.authenticationToken;\r\n        }\r\n\r\n        function login (credentials) {\r\n\r\n            var data = {\r\n                username: credentials.username,\r\n                password: credentials.password,\r\n                rememberMe: credentials.rememberMe,\r\n                page: 'front'\r\n            };\r\n            return $http.post('api/login', data).success(authenticateSuccess);\r\n\r\n            function authenticateSuccess (data, status, headers) {\r\n                var bearerToken = headers('Authorization') ? headers('Authorization') : \"\";\r\n                if (angular.isDefined(bearerToken) && bearerToken.slice(0, 7) === 'Bearer ') {\r\n                    var jwt = bearerToken.slice(7, bearerToken.length);\r\n                    service.storeAuthenticationToken(jwt, credentials.rememberMe);\r\n                    return jwt;\r\n                }else{\r\n                    var jwt = data.Data.token;\r\n                    service.storeAuthenticationToken(jwt, credentials.rememberMe);\r\n                }\r\n            }\r\n        }\r\n\r\n        function loginWithToken(jwt, rememberMe) {\r\n            var deferred = $q.defer();\r\n\r\n            if (angular.isDefined(jwt)) {\r\n                this.storeAuthenticationToken(jwt, rememberMe);\r\n                deferred.resolve(jwt);\r\n            } else {\r\n                deferred.reject();\r\n            }\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        function storeAuthenticationToken(jwt, rememberMe) {\r\n            if(rememberMe){\r\n                $localStorage.authenticationToken = jwt;\r\n            } else {\r\n                $sessionStorage.authenticationToken = jwt;\r\n            }\r\n        }\r\n\r\n        function logout () {\r\n            delete $localStorage.authenticationToken;\r\n            delete $localStorage.permission;\r\n            delete $localStorage.role;\r\n            delete $sessionStorage.authenticationToken;\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('Activate', Activate);\r\n\r\n    Activate.$inject = ['$resource'];\r\n\r\n    function Activate ($resource) {\r\n        var service = $resource('api/activate', {}, {\r\n            'get': { method: 'GET', params: {}, isArray: false}\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('Account', Account);\r\n\r\n    Account.$inject = ['$resource'];\r\n\r\n    function Account ($resource) {\r\n        var service = $resource('api/account', {}, {\r\n            'get': { method: 'GET', params: {}, isArray: false,\r\n                interceptor: {\r\n                    response: function(response) {\r\n                        // expose response\r\n                        return response;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('NavbarController', NavbarController);\r\n\r\n    NavbarController.$inject = ['$state', 'Auth', 'Principal', 'ProfileService', 'LoginService', '$scope', '$localStorage'];\r\n\r\n    function NavbarController ($state, Auth, Principal, ProfileService, LoginService, $scope, $localStorage) {\r\n        var vm = this;\r\n\r\n        vm.isNavbarCollapsed = true;\r\n        vm.isShowNav = true;\r\n        vm.isAuthenticated = Principal.isAuthenticated;\r\n        vm.account = {};\r\n\r\n        ProfileService.getProfileInfo().then(function(response) {\r\n            vm.inProduction = response.inProduction;\r\n            vm.swaggerEnabled = response.swaggerEnabled;\r\n        });\r\n\r\n        vm.login = login;\r\n        vm.logout = logout;\r\n        vm.toggleNavbar = toggleNavbar;\r\n        vm.collapseNavbar = collapseNavbar;\r\n        vm.$state = $state;\r\n        vm.stateGo = stateGo;\r\n        vm.register = register;\r\n\r\n        $scope.$watch(function(){\r\n            switch ($state.current.name){\r\n                case 'home':\r\n                    vm.isShowNav = false;\r\n                    break;\r\n                default:\r\n                    vm.isShowNav = true;\r\n                    break;\r\n            }\r\n        })\r\n\r\n        init();\r\n\r\n        function init(){\r\n            getAccount();\r\n        }\r\n\r\n        function register(){\r\n            $state.go('register');\r\n        }\r\n\r\n        function getAccount() {\r\n            Principal.identity().then(function (account) {\r\n                vm.account = account;\r\n            });\r\n        }\r\n\r\n        function login() {\r\n            // collapseNavbar();\r\n            LoginService.open();\r\n        }\r\n\r\n        function logout() {\r\n            // collapseNavbar();\r\n            vm.account = {};\r\n            Auth.logout();\r\n            $state.go('home');\r\n        }\r\n\r\n        function toggleNavbar() {\r\n            vm.isNavbarCollapsed = !vm.isNavbarCollapsed;\r\n        }\r\n\r\n        function stateGo(link){\r\n            $state.go(link, {industry: $localStorage.industry})\r\n        }\r\n\r\n        function collapseNavbar() {\r\n            vm.isNavbarCollapsed = true;\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('activeMenu', activeMenu);\r\n\r\n    activeMenu.$inject = ['$translate', '$locale', 'tmhDynamicLocale'];\r\n\r\n    function activeMenu($translate, $locale, tmhDynamicLocale) {\r\n        var directive = {\r\n            restrict: 'A',\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc(scope, element, attrs) {\r\n            var language = attrs.activeMenu;\r\n\r\n            scope.$watch(function() {\r\n                return $translate.use();\r\n            }, function(selectedLanguage) {\r\n                if (language === selectedLanguage) {\r\n                    tmhDynamicLocale.set(language);\r\n                    element.addClass('active');\r\n                } else {\r\n                    element.removeClass('active');\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider\r\n            .state('error', {\r\n                parent: 'app',\r\n                url: '/error',\r\n                data: {\r\n                    authorities: [],\r\n                    pageTitle: 'error.title'\r\n                },\r\n                views: {\r\n                    'content@': {\r\n                        templateUrl: 'app/layouts/error/error.html'\r\n                    }\r\n                },\r\n                resolve: {\r\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                        $translatePartialLoader.addPart('error');\r\n                        return $translate.refresh();\r\n                    }]\r\n                }\r\n            })\r\n            .state('accessdenied', {\r\n                parent: 'app',\r\n                url: '/accessdenied',\r\n                data: {\r\n                    authorities: []\r\n                },\r\n                views: {\r\n                    'content@': {\r\n                        templateUrl: 'app/layouts/error/accessdenied.html'\r\n                    }\r\n                },\r\n                resolve: {\r\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                        $translatePartialLoader.addPart('error');\r\n                        return $translate.refresh();\r\n                    }]\r\n                }\r\n            });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('home', {\r\n            parent: 'app',\r\n            url: '/',\r\n            data: {\r\n                authorities: []\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/home/home.html',\r\n                    controller: 'HomeController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('home');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('HomeController', HomeController);\r\n\r\n    HomeController.$inject = ['$scope', '$localStorage', 'FileSaver', '$state', 'CategoriesService', 'CrawlService'];\r\n\r\n    function HomeController ($scope, $localStorage, FileSaver, $state, CategoriesService, CrawlService) {\r\n        var vm = this;\r\n\r\n        vm.industrySelected = '';\r\n        vm.lstIndustry = [];\r\n\r\n        vm.selected = selected;\r\n        vm.stateGo = stateGo;\r\n        vm.exportPDF = exportPDF;\r\n\r\n\r\n        loadAllIndustry();\r\n        $localStorage.industry = '';\r\n        function loadAllIndustry(){\r\n            CategoriesService.get({}, function(data){\r\n                vm.lstIndustry = data.Data;\r\n            })\r\n        }\r\n\r\n        function selected(item){\r\n            for(var i = 0; i < vm.lstIndustry.length; i++){\r\n                if(vm.lstIndustry[i].Code == item.Code){\r\n                    $localStorage.industry = item.Code;\r\n                    $localStorage.industryName = item.Name;\r\n                    vm.lstIndustry[i].selected = true;\r\n                }else{\r\n                    vm.lstIndustry[i].selected = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        function stateGo(link){\r\n            if($localStorage.industry != ''){\r\n                $state.go(link, {industry: $localStorage.industry})\r\n            }else{\r\n                alert('Your must choose industry firt');\r\n            }\r\n        }\r\n\r\n        function exportPDF() {\r\n            // CrawlService.get({\r\n            //     pathMethod: 'export'\r\n            // }, function(data){\r\n            //     //var fileData = new Blob([data], {type: 'application/pdf;charset=UTF-8'});\r\n            //     //FileSaver.saveAs(fileData, \"Report.pdf\");\r\n            // })\r\n\r\n            window.open(API_CONFIG.API_URL + '/api/crawl/export');\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('store', {\r\n            parent: 'entity',\r\n            url: '/store/{industry}',\r\n            data: {\r\n                // authorities: ['ROLE_ADMIN'],\r\n                // pageTitle: 'store.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/entities/store/store.html',\r\n                    controller: 'StoreController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    // $translatePartialLoader.addPart('store');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('StoreService', StoreService);\r\n\r\n    StoreService.$inject = ['$resource'];\r\n\r\n    function StoreService ($resource) {\r\n        var service = $resource('api/store/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    id: null,\r\n                    category_code: null\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('StoreController', StoreController);\r\n\r\n    StoreController.$inject = ['$scope', 'StoreService', 'LocationService', '$localStorage', 'NgMap', '$stateParams'];\r\n\r\n    function StoreController($scope, StoreService, LocationService, $localStorage, NgMap, $stateParams) {\r\n        var vm = this;\r\n\r\n        vm.lstStore = [];\r\n        vm.lstCity = [{\r\n            CityCode: \"00\",\r\n            CityName: \"Tất cả\"\r\n        }];\r\n        vm.lstDistrict = [{\r\n            DistrictCode: \"000\",\r\n            DistrictName: \"Tất cả\"\r\n        }];\r\n        vm.lstWard = [{\r\n            WardCode: \"00000\",\r\n            WardName: \"Tất cả\"\r\n        }];\r\n\r\n        vm.lstStorePage = [];\r\n\r\n        vm.dataSearch = {\r\n            city_code: '00',\r\n            district_code : '000',\r\n            ward_code: '00000'\r\n        }\r\n\r\n        vm.lstCount = [];\r\n        vm.lstCalculate = [];\r\n        vm.industry = $stateParams.industry;\r\n        vm.industryName = $localStorage.industryName;\r\n        vm.isStart = 0;\r\n        \r\n        vm.url = ''\r\n        vm.userRole = $localStorage.role ? $localStorage.role : '';\r\n\r\n        vm.area = 0;\r\n        vm.popular = 0;\r\n        vm.markerNumber= 1;\r\n        vm.distance = 0;\r\n        vm.countStoreCity = 0;\r\n        vm.countStoreDistrict = 0;\r\n        vm.countCalculate = 0;\r\n\r\n        vm.destinationA = '';\r\n        vm.destinationB = '';\r\n        vm.origin1 = '';\r\n        vm.origin2 = '';\r\n        vm.center = 'B1 Tô Hiệu, Nghĩa Tân, Cầu Giấy, Hà Nội , Việt Nam';\r\n\r\n        vm.searchStore = searchStore;\r\n        vm.searchStorePage = searchStorePage;\r\n        vm.calculateDistance = calculateDistance;\r\n        vm.citySelected  = citySelected;\r\n        vm.districtSelected = districtSelected;\r\n        vm.wardSelected = wardSelected;\r\n        vm.startStop = startStop;\r\n        vm.continute = continute;\r\n\r\n\r\n        init();\r\n\r\n        function init(){\r\n            loadAllCity();\r\n        }\r\n\r\n        function searchStore() {\r\n\r\n            if(vm.userRole.toUpperCase() == 'FREE USER' || vm.userRole.toUpperCase() == ''){\r\n                alert('Đề nghị nâng cấp tài khoản để nhận kết quả ')\r\n            }else{\r\n                countStore();\r\n                searchStorePage();\r\n\r\n                vm.lstStore = [];\r\n                vm.url = API_CONFIG.KMZ_URL + vm.dataSearch.city_code +'.kmz';\r\n\r\n                StoreService.get({\r\n                    pathMethod: 'front',\r\n                    category_code: vm.industry,\r\n                    city_code: vm.dataSearch.city_code != '00' ? vm.dataSearch.city_code : null,\r\n                    district_code: vm.dataSearch.district_code != '000' ? vm.dataSearch.district_code : null,\r\n                    ward_code: vm.dataSearch.ward_code != '00000' ? vm.dataSearch.ward_code : null,\r\n                    page: vm.page,\r\n                    size: 1000000\r\n                }, function (data) {\r\n                    angular.forEach(data.Data, function (element, index) {\r\n                        var item = {\r\n                            id: element.ID,\r\n                            code: element.Code,\r\n                            name: element.Name,\r\n                            adress: element.Adress,\r\n                            information: element.Information,\r\n                            ward_code: element.WardCode,\r\n                            latitude: element.Latitude,\r\n                            longitude: element.Longitude,\r\n                            category_code: element.CategoryCode,\r\n                            type: element.Type,\r\n                            note: element.Note\r\n                        }\r\n                        vm.lstStore.push(item);\r\n                    });\r\n    \r\n                    vm.total = data.Error.Code;\r\n                    vm.center = data.Data.length > 0 ? data.Data[0].Adress : vm.center;\r\n    \r\n                    setTimeout(function(){\r\n                        NgMap.getMap().then(function(map) {\r\n                            map.setZoom(14);\r\n                        })\r\n                    }, 500)\r\n\r\n                }, function (error) {\r\n                    console.log(error)\r\n                });\r\n            }\r\n        }\r\n\r\n        function searchStorePage() {\r\n                vm.lstStorePage = [];\r\n\r\n                StoreService.get({\r\n                    pathMethod: 'front',\r\n                    category_code: vm.industry,\r\n                    city_code: vm.dataSearch.city_code != '00' ? vm.dataSearch.city_code : null,\r\n                    district_code: vm.dataSearch.district_code != '000' ? vm.dataSearch.district_code : null,\r\n                    ward_code: vm.dataSearch.ward_code != '00000' ? vm.dataSearch.ward_code : null,\r\n                    page: vm.page,\r\n                    size: 12\r\n                }, function (data) {\r\n                    angular.forEach(data.Data, function (element, index) {\r\n                        var item = {\r\n                            id: element.ID,\r\n                            code: element.Code,\r\n                            name: element.Name,\r\n                            adress: element.Adress,\r\n                            information: element.Information,\r\n                            ward_code: element.WardCode,\r\n                            latitude: element.Latitude,\r\n                            longitude: element.Longitude,\r\n                            category_code: element.CategoryCode,\r\n                            type: element.Type,\r\n                            note: element.Note\r\n                        }\r\n                        vm.lstStorePage.push(item);\r\n                    });\r\n    \r\n                    vm.total = data.Error.Code;\r\n\r\n                }, function (error) {\r\n                    console.log(error)\r\n                });\r\n        }\r\n\r\n        function countStore() {\r\n                StoreService.get({\r\n                    pathMethod: 'count',\r\n                    category_code: vm.industry,\r\n                    city_code: vm.dataSearch.city_code != '00' ? vm.dataSearch.city_code : null,\r\n                    district_code: vm.dataSearch.district_code != '000' ? vm.dataSearch.district_code : null,\r\n                    ward_code: vm.dataSearch.ward_code != '00000' ? vm.dataSearch.ward_code : null,\r\n                    page: vm.page,\r\n                    size: 1000000\r\n                }, function (data) {\r\n                    vm.lstCount = data.Data;\r\n                })\r\n        }\r\n\r\n        function calculateDistance(){\r\n            var itemStart = {};\r\n            var itemEnd = {};\r\n            vm.startItem = vm.startItem ? vm.startItem : '';\r\n            vm.endItem =vm.endItem ?vm.endItem : '';\r\n\r\n            if(vm.countCalculate <= 10){\r\n                if(vm.startItem != '' && vm.endItem != ''){\r\n                    for(var i = 0; i < vm.lstStore.length; i++){\r\n                        if(vm.lstStore[i].id == vm.startItem){\r\n                            \r\n                            vm.destinationA = vm.lstStore[i].adress;\r\n                            vm.origin1 = vm.lstStore[i].adress;\r\n                            vm.startTitle = vm.lstStore[i].name;\r\n        \r\n                            itemStart = angular.copy(vm.lstStore[i]);\r\n                            itemStart.isStart = true;\r\n                            itemStart.count = vm.countCalculate;\r\n                        }\r\n        \r\n                        if(vm.lstStore[i].id == vm.endItem){\r\n                            vm.destinationB = vm.lstStore[i].adress;\r\n                            vm.origin2 = vm.lstStore[i].adress;\r\n                            vm.endTitle = vm.lstStore[i].name;\r\n        \r\n                            itemEnd = angular.copy(vm.lstStore[i]);\r\n                            itemEnd.count = vm.countCalculate;\r\n                        }\r\n                    }\r\n        \r\n                    var service = new google.maps.DistanceMatrixService();\r\n                    service.getDistanceMatrix(\r\n                    {\r\n                        origins: [vm.origin1, vm.origin2],\r\n                        destinations: [vm.destinationA, vm.destinationB],\r\n                        travelMode: 'DRIVING'\r\n                    }, callback);\r\n        \r\n                    function callback(response) {\r\n                        if(response.rows.length > 0){\r\n        \r\n                            $scope.$apply(function(){\r\n                                vm.drive = response.rows[0].elements[1].distance.text;\r\n                                vm.minuteDrive = response.rows[0].elements[1].duration.text;\r\n        \r\n                                itemStart.drive = response.rows[0].elements[1].distance.text;\r\n                                itemStart.minuteDrive = response.rows[0].elements[1].duration.text;\r\n        \r\n                                vm.lstCalculate.push(itemStart);\r\n                                vm.lstCalculate.push(itemEnd);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    vm.countCalculate += 1;\r\n                }else{\r\n                    alert('Chưa chọn địa điểm');\r\n                }\r\n                \r\n            }else{\r\n                alert('Vượt quá số lần tìm cho phép');\r\n            }\r\n        }\r\n\r\n        function loadAllCity(){\r\n            LocationService.get({\r\n                pathMethod: 'suggestcity'\r\n            },function(data){\r\n                angular.forEach(data.Data, function(element){\r\n                    vm.lstCity.push(element);\r\n                })\r\n            });\r\n        }\r\n\r\n        function citySelected(){\r\n\r\n            vm.dataSearch.district_code = '000';\r\n            vm.dataSearch.ward_code = '00000';\r\n\r\n            vm.dataSearch.district_name = '';\r\n            vm.dataSearch.ward_name = '';\r\n\r\n            angular.forEach(vm.lstCity, function(element){\r\n                if(element.CityCode == vm.dataSearch.city_code){\r\n                    vm.dataSearch.city_name = element.CityName;\r\n                }\r\n            });\r\n\r\n            loadDistrictByCity();\r\n        }\r\n\r\n        function districtSelected(){\r\n            vm.dataSearch.ward_code = '00000';\r\n            vm.dataSearch.ward_name = '';\r\n\r\n            angular.forEach(vm.lstDistrict, function(element){\r\n                if(element.DistrictCode == vm.dataSearch.district_code){\r\n                    vm.dataSearch.district_name = element.DistrictName;\r\n                }\r\n            });\r\n\r\n            loadByWardDistrict();\r\n        }\r\n\r\n        function wardSelected(){\r\n            \r\n            angular.forEach(vm.lstWard, function(element){\r\n                if(element.WardCode == vm.dataSearch.ward_code){\r\n                    vm.area = element.Area;\r\n                    vm.popular = element.Population;\r\n                    vm.dataSearch.ward_name = element.WardName;\r\n                }\r\n            });\r\n        }\r\n\r\n        function loadDistrictByCity(){\r\n            LocationService.get({\r\n                pathMethod: 'suggestdistrict',\r\n                city_code: vm.dataSearch.city_code != '00' ? vm.dataSearch.city_code : null\r\n            }, function (data) {\r\n                vm.lstDistrict = [{\r\n                    DistrictCode: \"000\",\r\n                    DistrictName: \"Tất cả\"\r\n                }];\r\n\r\n                angular.forEach(data.Data, function(element){\r\n                    vm.lstDistrict.push(element);\r\n                })\r\n            });\r\n        }\r\n\r\n\r\n        function loadByWardDistrict(){\r\n            return LocationService.get({\r\n                pathMethod: 'suggestward',\r\n                city_code: vm.dataSearch.city_code != '00' ? vm.dataSearch.city_code : null,\r\n                district_code: vm.dataSearch.district_code != '000' ? vm.dataSearch.district_code : null\r\n            }, function (data) {\r\n                \r\n                vm.lstWard = [{\r\n                    WardCode: \"00000\",\r\n                    WardName: \"Tất cả\"\r\n                }];\r\n\r\n                 angular.forEach(data.Data, function(element){\r\n                    vm.lstWard.push(element);\r\n                })\r\n            });\r\n        }\r\n\r\n        function startStop(type){\r\n            vm.isStart = type;\r\n        }\r\n\r\n        function continute(){\r\n            var btn_kq = angular.element('#btn_kq');\r\n            var csroll = btn_kq.offset();\r\n            $(window).scrollTop(csroll.top - 300);\r\n        }\r\n\r\n        NgMap.getMap().then(function(map) {\r\n            vm.showCustomMarker= function(evt) {\r\n              map.customMarkers.foo.setVisible(true);\r\n              map.customMarkers.foo.setPosition(this.getPosition());\r\n            };\r\n\r\n            vm.closeCustomMarker= function(evt) {\r\n              this.style.display = 'none';\r\n            };\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('legislation', {\r\n            parent: 'entity',\r\n            url: '/legislation/{industry}',\r\n            data: {\r\n                // authorities: ['ROLE_ADMIN'],\r\n                // pageTitle: 'legislation.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/entities/legislation/legislation.html',\r\n                    controller: 'LegislationController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    // $translatePartialLoader.addPart('legislation');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('LegislationService', LegislationService);\r\n\r\n    LegislationService.$inject = ['$resource'];\r\n\r\n    function LegislationService ($resource) {\r\n        var service = $resource('api/legislation/:pathMethod', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n            },\r\n            'update': {\r\n                method: 'POST',\r\n                params:{\r\n                    id: null,\r\n                    category_code: null,\r\n                    page: null,\r\n                    size: 12\r\n                }\r\n            },\r\n            'save': {\r\n                method: 'POST',\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('LegislationDetailController', LegislationDetailController);\r\n\r\n    LegislationDetailController.$inject = ['$uibModalInstance', 'data'];\r\n\r\n    function LegislationDetailController($uibModalInstance, data) {\r\n        var vm = this;\r\n\r\n        vm.cancel = cancel;\r\n\r\n        vm.legislation = angular.copy(data);\r\n        console.log('vm.legislation', vm.legislation);\r\n\r\n        function cancel(){\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('LegislationController', LegislationController);\r\n\r\n    LegislationController.$inject = ['$stateParams', 'LegislationService', 'ReporterService', 'ProductService', 'MeansuerService', '$uibModal', '$localStorage'];\r\n\r\n    function LegislationController($stateParams, LegislationService, ReporterService, ProductService, MeansuerService, $uibModal, $localStorage) {\r\n        var vm = this;\r\n\r\n        vm.categoryCode = $stateParams.industry;\r\n\r\n        vm.pageLegislation = 1;\r\n        vm.totalLegislation = 0;\r\n        vm.userRole = $localStorage.role ? $localStorage.role : '';\r\n\r\n        vm.pageNTM = 1;\r\n        vm.totalNTM = 0;\r\n\r\n        vm.dataSearch = {};\r\n        vm.lstLegislation = [];\r\n        vm.lstMeansuer = [];\r\n        vm.lstMeansuerBP = [];\r\n\r\n        vm.search = search;\r\n        vm.getLegislation = getLegislation;\r\n        vm.getMeansuer = getMeansuer;\r\n        vm.loadSuggestrReporter = loadSuggestrReporter;\r\n        vm.selestSuggestReporter = selestSuggestReporter;\r\n        vm.loadSuggestProduct = loadSuggestProduct;\r\n        vm.selestSuggestProduct = selestSuggestProduct;\r\n        // vm.loadSuggestIndustry = loadSuggestIndustry;\r\n        // vm.selestSuggestIndustry = selestSuggestIndustry;\r\n        vm.detail = detail;\r\n\r\n\r\n        function search() {\r\n\r\n            if(vm.userRole.toUpperCase() == 'FREE USER' || vm.userRole.toUpperCase() == ''){\r\n                alert('Đề nghị nâng cấp tài khoản để nhận kết quả ')\r\n            }else{\r\n                if (vm.dataSearch.reporter == null || vm.dataSearch.reporter == '' || vm.dataSearch.product == null || vm.dataSearch.product == '') {\r\n                    alert('Seach input invalid')\r\n                } else {\r\n                    vm.isSearch = true;\r\n                    getLegislation();\r\n                    getMeansuer();\r\n                    getMeansuerBP();\r\n                }\r\n            }\r\n        }\r\n\r\n        function detail(item) {\r\n            $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'app/entities/legislation/legislation.detail.html',\r\n                controller: 'LegislationDetailController',\r\n                controllerAs: 'vm',\r\n                size: 'lg',\r\n                resolve: {\r\n                    data: function () {\r\n                        return item\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        function getLegislation() {\r\n            LegislationService.get({\r\n                pathMethod: 'get',\r\n                category_code: vm.categoryCode,\r\n                reporter: vm.dataSearch.reporter,\r\n                page: vm.pageLegislation\r\n            }, function (data) {\r\n                vm.lstLegislation = data.Data\r\n                for (var i = 0; i < vm.lstLegislation.length; i++) {\r\n                    vm.lstLegislation[i].StartDate = new Date(vm.lstLegislation[i].StartDate);\r\n                    vm.lstLegislation[i].EndDate = new Date(vm.lstLegislation[i].EndDate);\r\n                }\r\n                vm.totalLegislation = data.Error.Code;\r\n                vm.totalLegislationU = data.Error.Message;\r\n            });\r\n        }\r\n\r\n        function getMeansuer() {\r\n            MeansuerService.get({\r\n                category_code: vm.categoryCode,\r\n                reporter: vm.dataSearch.reporter,\r\n                product: vm.dataSearch.product_code,\r\n                page: vm.pageNTM\r\n            }, function (data) {\r\n                vm.lstMeansuer = data.Data;\r\n                vm.totalNTM = data.Error.Code;\r\n            });\r\n        }\r\n\r\n        function getMeansuerBP() {\r\n            MeansuerService.get({\r\n                pathMethod: 'BP',\r\n                category_code: vm.categoryCode,\r\n                reporter: vm.dataSearch.reporter,\r\n                product: vm.dataSearch.product_code,\r\n                page: 1000000\r\n            }, function (data) {\r\n                vm.lstMeansuerBP = data.Data;\r\n                console.log('vm.lstMeansuerBP', vm.lstMeansuerBP);\r\n            });\r\n        }\r\n\r\n        function loadSuggestrReporter(val) {\r\n            return ReporterService.get({\r\n                name: val != '' ? val : null\r\n            }).$promise.then(function (data) {\r\n                return data.Data;\r\n            });\r\n        }\r\n\r\n        function selestSuggestReporter($item, $model, $label, $event) {\r\n            vm.dataSearch.reporter_code = $item.Code;\r\n            // vm.dataSearch.category_code = $item.Code;\r\n        }\r\n\r\n        function loadSuggestProduct(val) {\r\n            return ProductService.get({\r\n                name: val != '' ? val : null\r\n            }).$promise.then(function (data) {\r\n                return data.Data;\r\n            });\r\n        }\r\n\r\n        function selestSuggestProduct($item, $model, $label, $event) {\r\n            vm.dataSearch.product_code = $item.Code;\r\n            // vm.dataSearch.category_code = $item.Code;\r\n        }\r\n\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('entity', {\r\n            abstract: true,\r\n            parent: 'app'\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .filter('words', words);\r\n\r\n    function words() {\r\n        return wordsFilter;\r\n\r\n        function wordsFilter(input, words) {\r\n            if (isNaN(words)) {\r\n                return input;\r\n            }\r\n            if (words <= 0) {\r\n                return '';\r\n            }\r\n            if (input) {\r\n                var inputWords = input.split(/\\s+/);\r\n                if (inputWords.length > words) {\r\n                    input = inputWords.slice(0, words).join(' ') + '...';\r\n                }\r\n            }\r\n            return input;\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .filter('characters', characters);\r\n\r\n    function characters () {\r\n        return charactersFilter;\r\n\r\n        function charactersFilter(input, chars, breakOnWord) {\r\n            if (isNaN(chars)) {\r\n                return input;\r\n            }\r\n            if (chars <= 0) {\r\n                return '';\r\n            }\r\n            if (input && input.length > chars) {\r\n                input = input.substring(0, chars);\r\n\r\n                if (!breakOnWord) {\r\n                    var lastspace = input.lastIndexOf(' ');\r\n                    // Get last space\r\n                    if (lastspace !== -1) {\r\n                        input = input.substr(0, lastspace);\r\n                    }\r\n                } else {\r\n                    while (input.charAt(input.length-1) === ' ') {\r\n                        input = input.substr(0, input.length - 1);\r\n                    }\r\n                }\r\n                return input + '...';\r\n            }\r\n            return input;\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('jhSortBy', jhSortBy);\r\n\r\n    function jhSortBy() {\r\n        var directive = {\r\n            restrict: 'A',\r\n            scope: false,\r\n            require: '^jhSort',\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc(scope, element, attrs, parentCtrl) {\r\n            element.bind('click', function () {\r\n                parentCtrl.sort(attrs.jhSortBy);\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('jhSort', jhSort);\r\n\r\n    function jhSort () {\r\n        var directive = {\r\n            restrict: 'A',\r\n            scope: {\r\n                predicate: '=jhSort',\r\n                ascending: '=',\r\n                callback: '&'\r\n            },\r\n            controller: SortController,\r\n            controllerAs: 'vm',\r\n            bindToController: true\r\n        };\r\n\r\n        return directive;\r\n    }\r\n\r\n    SortController.$inject = ['$scope', '$element'];\r\n\r\n    function SortController ($scope, $element) {\r\n        var vm = this;\r\n\r\n        vm.applyClass = applyClass;\r\n        vm.resetClasses = resetClasses;\r\n        vm.sort = sort;\r\n        vm.triggerApply = triggerApply;\r\n\r\n        $scope.$watchGroup(['vm.predicate', 'vm.ascending'], vm.triggerApply);\r\n        vm.triggerApply();\r\n\r\n        function applyClass (element) {\r\n            var thisIcon = element.find('span.glyphicon'),\r\n                sortIcon = 'glyphicon-sort',\r\n                sortAsc = 'glyphicon-sort-by-attributes',\r\n                sortDesc = 'glyphicon-sort-by-attributes-alt',\r\n                remove = sortIcon + ' ' + sortDesc,\r\n                add = sortAsc;\r\n            if (!vm.ascending) {\r\n                remove = sortIcon + ' ' + sortAsc;\r\n                add = sortDesc;\r\n            }\r\n            vm.resetClasses();\r\n            thisIcon.removeClass(remove);\r\n            thisIcon.addClass(add);\r\n        }\r\n\r\n        function resetClasses () {\r\n            var allThIcons = $element.find('span.glyphicon'),\r\n                sortIcon = 'glyphicon-sort',\r\n                sortAsc = 'glyphicon-sort-by-attributes',\r\n                sortDesc = 'glyphicon-sort-by-attributes-alt';\r\n            allThIcons.removeClass(sortAsc + ' ' + sortDesc);\r\n            allThIcons.addClass(sortIcon);\r\n        }\r\n\r\n        function sort (field) {\r\n            if (field !== vm.predicate) {\r\n                vm.ascending = true;\r\n            } else {\r\n                vm.ascending = !vm.ascending;\r\n            }\r\n            vm.predicate = field;\r\n            $scope.$apply();\r\n            vm.callback();\r\n        }\r\n\r\n        function triggerApply (values)  {\r\n            vm.resetClasses();\r\n            if (values && values[0] !== '_score') {\r\n                vm.applyClass($element.find('th[jh-sort-by=\\'' + values[0] + '\\']'));\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function(){\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('ParseLinks', ParseLinks);\r\n\r\n    function ParseLinks () {\r\n\r\n        var service = {\r\n            parse : parse\r\n        };\r\n\r\n        return service;\r\n\r\n        function parse(header) {\r\n            if (header.length === 0) {\r\n                throw new Error('input must not be of zero length');\r\n            }\r\n\r\n            // Split parts by comma\r\n            var parts = header.split(',');\r\n            var links = {};\r\n            // Parse each part into a named link\r\n            angular.forEach(parts, function(p) {\r\n                var section = p.split('>;');\r\n                if (section.length !== 2) {\r\n                    throw new Error('section could not be split on \">;\"');\r\n                }\r\n                var url = section[0].replace(/<(.*)/, '$1').trim();\r\n                var queryString = {};\r\n                url.replace(\r\n                    new RegExp('([^?=&]+)(=([^&]*))?', 'g'),\r\n                    function($0, $1, $2, $3) { queryString[$1] = $3; }\r\n                );\r\n                var page = queryString.page;\r\n                if (angular.isString(page)) {\r\n                    page = parseInt(page);\r\n                }\r\n                var name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\r\n                links[name] = page;\r\n            });\r\n            return links;\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('PaginationUtil', PaginationUtil);\r\n\r\n    function PaginationUtil () {\r\n\r\n        var service = {\r\n            parseAscending : parseAscending,\r\n            parsePage : parsePage,\r\n            parsePredicate : parsePredicate\r\n        };\r\n\r\n        return service;\r\n\r\n        function parseAscending (sort) {\r\n            var sortArray = sort.split(',');\r\n            if (sortArray.length > 1){\r\n                return sort.split(',').slice(-1)[0] === 'asc';\r\n            } else {\r\n                // default to true if no sort defined\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // query params are strings, and need to be parsed\r\n        function parsePage (page) {\r\n            return parseInt(page);\r\n        }\r\n\r\n        // sort can be in the format `id,asc` or `id`\r\n        function parsePredicate (sort) {\r\n            var sortArray = sort.split(',');\r\n            if (sortArray.length > 1){\r\n                sortArray.pop();\r\n            }\r\n            return sortArray.join(',');\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    var jhiItemCount = {\r\n        template: '<div class=\"info\" data-translate=\"global.item-count\" ' +\r\n        'translate-value-first=\"{{(($ctrl.page - 1) * $ctrl.itemsPerPage) === 0 ? 1 : (($ctrl.page - 1) * $ctrl.itemsPerPage + 1)}}\" ' +\r\n        'translate-value-second=\"{{($ctrl.page * $ctrl.itemsPerPage) < $ctrl.queryCount ? ($ctrl.page * $ctrl.itemsPerPage) : $ctrl.queryCount}}\" ' +\r\n        'translate-value-total=\"{{$ctrl.queryCount}}\">' +\r\n        'Showing {{(($ctrl.page - 1) * $ctrl.itemsPerPage) == 0 ? 1 : (($ctrl.page - 1) * $ctrl.itemsPerPage + 1)}} - ' +\r\n        '{{($ctrl.page * $ctrl.itemsPerPage) < $ctrl.queryCount ? ($ctrl.page * $ctrl.itemsPerPage) : $ctrl.queryCount}} ' +\r\n        'of {{$ctrl.queryCount}} items.' +\r\n        '</div>',\r\n        bindings: {\r\n            page: '<',\r\n            queryCount: '<total',\r\n            itemsPerPage: '<'\r\n        }\r\n    };\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .component('jhiItemCount', jhiItemCount);\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .constant('errorConstants', (function() {\r\n            var problemBaseUrl = 'http://www.jhipster.tech/problem';\r\n            return {\r\n                EMAIL_ALREADY_USED_TYPE: problemBaseUrl + '/email-already-used',\r\n                LOGIN_ALREADY_USED_TYPE: problemBaseUrl + '/login-already-used',\r\n                EMAIL_NOT_FOUND_TYPE: problemBaseUrl + '/email-not-found'\r\n            }\r\n        })());\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('DateUtils', DateUtils);\r\n\r\n    DateUtils.$inject = ['$filter'];\r\n\r\n    function DateUtils($filter) {\r\n\r\n        var service = {\r\n            convertDateTimeFromServer: convertDateTimeFromServer,\r\n            convertLocalDateFromServer: convertLocalDateFromServer,\r\n            convertLocalDateToServer: convertLocalDateToServer,\r\n            dateformat: dateformat\r\n        };\r\n\r\n        return service;\r\n\r\n        function convertDateTimeFromServer(date) {\r\n            if (date) {\r\n                return new Date(date);\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        function convertLocalDateFromServer(date) {\r\n            if (date) {\r\n                var dateString = date.split('-');\r\n                return new Date(dateString[0], dateString[1] - 1, dateString[2]);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function convertLocalDateToServer(date) {\r\n            if (date) {\r\n                return $filter('date')(date, 'yyyy-MM-dd');\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        function dateformat() {\r\n            return 'yyyy-MM-dd';\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('DataUtils', DataUtils);\r\n\r\n    DataUtils.$inject = ['$window'];\r\n\r\n    function DataUtils ($window) {\r\n\r\n        var service = {\r\n            abbreviate: abbreviate,\r\n            byteSize: byteSize,\r\n            openFile: openFile,\r\n            toBase64: toBase64\r\n        };\r\n\r\n        return service;\r\n\r\n        function abbreviate (text) {\r\n            if (!angular.isString(text)) {\r\n                return '';\r\n            }\r\n            if (text.length < 30) {\r\n                return text;\r\n            }\r\n            return text ? (text.substring(0, 15) + '...' + text.slice(-10)) : '';\r\n        }\r\n\r\n        function byteSize (base64String) {\r\n            if (!angular.isString(base64String)) {\r\n                return '';\r\n            }\r\n\r\n            function endsWith(suffix, str) {\r\n                return str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n            }\r\n\r\n            function paddingSize(base64String) {\r\n                if (endsWith('==', base64String)) {\r\n                    return 2;\r\n                }\r\n                if (endsWith('=', base64String)) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            }\r\n\r\n            function size(base64String) {\r\n                return base64String.length / 4 * 3 - paddingSize(base64String);\r\n            }\r\n\r\n            function formatAsBytes(size) {\r\n                return size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') + ' bytes';\r\n            }\r\n\r\n            return formatAsBytes(size(base64String));\r\n        }\r\n\r\n        function openFile (type, data) {\r\n            $window.open('data:' + type + ';base64,' + data, '_blank', 'height=300,width=400');\r\n        }\r\n\r\n        function toBase64 (file, cb) {\r\n            var fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = function (e) {\r\n                var base64Data = e.target.result.substr(e.target.result.indexOf('base64,') + 'base64,'.length);\r\n                cb(base64Data);\r\n            };\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .filter('capitalize', capitalize);\r\n\r\n    function capitalize() {\r\n        return capitalizeFilter;\r\n\r\n        function capitalizeFilter (input) {\r\n            if (input !== null) {\r\n                input = input.toLowerCase();\r\n                input = input.substring(0, 1).toUpperCase() + input.substring(1);\r\n            }\r\n            return input;\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    /*jshint bitwise: false*/\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('Base64', Base64);\r\n\r\n    function Base64 () {\r\n        var keyStr = 'ABCDEFGHIJKLMNOP' +\r\n            'QRSTUVWXYZabcdef' +\r\n            'ghijklmnopqrstuv' +\r\n            'wxyz0123456789+/' +\r\n            '=';\r\n\r\n        var service = {\r\n            decode : decode,\r\n            encode : encode\r\n        };\r\n\r\n        return service;\r\n\r\n        function encode (input) {\r\n            var output = '',\r\n                chr1, chr2, chr3,\r\n                enc1, enc2, enc3, enc4,\r\n                i = 0;\r\n\r\n            while (i < input.length) {\r\n                chr1 = input.charCodeAt(i++);\r\n                chr2 = input.charCodeAt(i++);\r\n                chr3 = input.charCodeAt(i++);\r\n\r\n                enc1 = chr1 >> 2;\r\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n                enc4 = chr3 & 63;\r\n\r\n                if (isNaN(chr2)) {\r\n                    enc3 = enc4 = 64;\r\n                } else if (isNaN(chr3)) {\r\n                    enc4 = 64;\r\n                }\r\n\r\n                output = output +\r\n                    keyStr.charAt(enc1) +\r\n                    keyStr.charAt(enc2) +\r\n                    keyStr.charAt(enc3) +\r\n                    keyStr.charAt(enc4);\r\n            }\r\n\r\n            return output;\r\n        }\r\n\r\n        function decode (input) {\r\n            var output = '',\r\n                chr1, chr2, chr3,\r\n                enc1, enc2, enc3, enc4,\r\n                i = 0;\r\n\r\n            // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\r\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\r\n\r\n            while (i < input.length) {\r\n                enc1 = keyStr.indexOf(input.charAt(i++));\r\n                enc2 = keyStr.indexOf(input.charAt(i++));\r\n                enc3 = keyStr.indexOf(input.charAt(i++));\r\n                enc4 = keyStr.indexOf(input.charAt(i++));\r\n\r\n                chr1 = (enc1 << 2) | (enc2 >> 4);\r\n                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n                chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n                output = output + String.fromCharCode(chr1);\r\n\r\n                if (enc3 !== 64) {\r\n                    output = output + String.fromCharCode(chr2);\r\n                }\r\n                if (enc4 !== 64) {\r\n                    output = output + String.fromCharCode(chr3);\r\n                }\r\n            }\r\n\r\n            return output;\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('LoginService', LoginService);\r\n\r\n    LoginService.$inject = ['$uibModal'];\r\n\r\n    function LoginService ($uibModal) {\r\n        var service = {\r\n            open: open\r\n        };\r\n\r\n        var modalInstance = null;\r\n        var resetModal = function () {\r\n            modalInstance = null;\r\n        };\r\n\r\n        return service;\r\n\r\n        function open () {\r\n            if (modalInstance !== null) return;\r\n            modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'app/components/login/login.html',\r\n                controller: 'LoginController',\r\n                controllerAs: 'vm',\r\n                resolve: {\r\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                        $translatePartialLoader.addPart('login');\r\n                        return $translate.refresh();\r\n                    }]\r\n                }\r\n            });\r\n            modalInstance.result.then(\r\n                resetModal,\r\n                resetModal\r\n            );\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('LoginController', LoginController);\r\n\r\n    LoginController.$inject = ['$rootScope', '$state', '$timeout', 'Auth', '$uibModalInstance'];\r\n\r\n    function LoginController ($rootScope, $state, $timeout, Auth, $uibModalInstance) {\r\n        var vm = this;\r\n\r\n        vm.authenticationError = false;\r\n        vm.cancel = cancel;\r\n        vm.credentials = {};\r\n        vm.login = login;\r\n        vm.password = null;\r\n        vm.register = register;\r\n        vm.rememberMe = true;\r\n        vm.requestResetPassword = requestResetPassword;\r\n        vm.username = null;\r\n\r\n        $timeout(function (){angular.element('#username').focus();});\r\n\r\n        function cancel () {\r\n            vm.credentials = {\r\n                username: null,\r\n                password: null,\r\n                rememberMe: true\r\n            };\r\n            vm.authenticationError = false;\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n\r\n        function login (event) {\r\n            event.preventDefault();\r\n            Auth.login({\r\n                username: vm.username,\r\n                password: vm.password,\r\n                rememberMe: vm.rememberMe\r\n            }).then(function () {\r\n                vm.authenticationError = false;\r\n                $uibModalInstance.close();\r\n                if ($state.current.name === 'register' || $state.current.name === 'activate' ||\r\n                    $state.current.name === 'finishReset' || $state.current.name === 'requestReset') {\r\n                    $state.go('home');\r\n                }\r\n\r\n                $rootScope.$broadcast('authenticationSuccess');\r\n\r\n                // previousState was set in the authExpiredInterceptor before being redirected to login modal.\r\n                // since login is successful, go to stored previousState and clear previousState\r\n                if (Auth.getPreviousState()) {\r\n                    var previousState = Auth.getPreviousState();\r\n                    Auth.resetPreviousState();\r\n                    $state.go(previousState.name, previousState.params);\r\n                }\r\n\r\n                $state.go($state.current.name, {}, {reload: true});\r\n            }).catch(function () {\r\n                vm.authenticationError = true;\r\n            });\r\n        }\r\n\r\n        function register () {\r\n            $uibModalInstance.dismiss('cancel');\r\n            $state.go('register');\r\n        }\r\n\r\n        function requestResetPassword () {\r\n            $uibModalInstance.dismiss('cancel');\r\n            $state.go('requestReset');\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('JhiLanguageService', JhiLanguageService);\r\n\r\n    JhiLanguageService.$inject = ['$q', '$http', '$translate', 'LANGUAGES'];\r\n\r\n    function JhiLanguageService ($q, $http, $translate, LANGUAGES) {\r\n        var service = {\r\n            getAll: getAll,\r\n            getCurrent: getCurrent\r\n        };\r\n\r\n        return service;\r\n\r\n        function getAll () {\r\n            var deferred = $q.defer();\r\n            deferred.resolve(LANGUAGES);\r\n            return deferred.promise;\r\n        }\r\n\r\n        function getCurrent () {\r\n            var deferred = $q.defer();\r\n            var language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\r\n\r\n            deferred.resolve(language);\r\n\r\n            return deferred.promise;\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .filter('findLanguageFromKey', findLanguageFromKey)\r\n        .filter('findLanguageRtlFromKey', findLanguageRtlFromKey);\r\n\r\n    var languages = {\r\n        'en': { name: 'English' }\r\n        // jhipster-needle-i18n-language-key-pipe - JHipster will add/remove languages in this object\r\n    };\r\n\r\n    function findLanguageFromKey() {\r\n        return findLanguageFromKeyFilter;\r\n\r\n        function findLanguageFromKeyFilter(lang) {\r\n            return languages[lang].name;\r\n        }\r\n    }\r\n\r\n    function findLanguageRtlFromKey() {\r\n        return findLanguageRtlFromKeyFilter;\r\n\r\n        function findLanguageRtlFromKeyFilter(lang) {\r\n            return languages[lang].rtl;\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('JhiLanguageController', JhiLanguageController);\r\n\r\n    JhiLanguageController.$inject = ['$translate', 'JhiLanguageService', 'tmhDynamicLocale'];\r\n\r\n    function JhiLanguageController ($translate, JhiLanguageService, tmhDynamicLocale) {\r\n        var vm = this;\r\n\r\n        vm.changeLanguage = changeLanguage;\r\n        vm.languages = null;\r\n\r\n        JhiLanguageService.getAll().then(function (languages) {\r\n            vm.languages = languages;\r\n        });\r\n\r\n        function changeLanguage (languageKey) {\r\n            $translate.use(languageKey);\r\n            tmhDynamicLocale.set(languageKey);\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n\r\n        /*\r\n         Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\r\n         They are written in English to avoid character encoding issues (not a perfect solution)\r\n         */\r\n        .constant('LANGUAGES', [\r\n            'en'\r\n            // jhipster-needle-i18n-language-constant - JHipster will add/remove languages in this array\r\n        ]\r\n    );\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('showValidation', showValidation);\r\n\r\n    function showValidation () {\r\n        var directive = {\r\n            restrict: 'A',\r\n            require: 'form',\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc (scope, element, attrs, formCtrl) {\r\n            element.find('.form-group').each(function() {\r\n                var $formGroup = angular.element(this);\r\n                var $inputs = $formGroup.find('input[ng-model],textarea[ng-model],select[ng-model]');\r\n\r\n                if ($inputs.length > 0) {\r\n                    $inputs.each(function() {\r\n                        var $input = angular.element(this);\r\n                        var inputName = $input.attr('name');\r\n                        scope.$watch(function() {\r\n                            return formCtrl[inputName].$invalid && formCtrl[inputName].$dirty;\r\n                        }, function(isInvalid) {\r\n                            $formGroup.toggleClass('has-error', isInvalid);\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .constant('paginationConstants', {\r\n            'itemsPerPage': 20\r\n        });\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('minbytes', minbytes);\r\n\r\n    function minbytes () {\r\n        var directive = {\r\n            restrict: 'A',\r\n            require: '?ngModel',\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc (scope, element, attrs, ngModel) {\r\n            if (!ngModel) {\r\n                return;\r\n            }\r\n\r\n            ngModel.$validators.minbytes = function (modelValue) {\r\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) >= attrs.minbytes;\r\n            };\r\n        }\r\n\r\n        function endsWith(suffix, str) {\r\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n        }\r\n\r\n        function paddingSize(base64String) {\r\n            if (endsWith('==', base64String)) {\r\n                return 2;\r\n            }\r\n            if (endsWith('=', base64String)) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        function numberOfBytes(base64String) {\r\n            return base64String.length / 4 * 3 - paddingSize(base64String);\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('maxbytes', maxbytes);\r\n\r\n    function maxbytes () {\r\n        var directive = {\r\n            restrict: 'A',\r\n            require: '?ngModel',\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFunc (scope, element, attrs, ngModel) {\r\n            if (!ngModel) {\r\n                return;\r\n            }\r\n\r\n            ngModel.$validators.maxbytes = function (modelValue) {\r\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) <= attrs.maxbytes;\r\n            };\r\n        }\r\n\r\n        function endsWith(suffix, str) {\r\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n        }\r\n\r\n        function paddingSize(base64String) {\r\n            if (endsWith('==', base64String)) {\r\n                return 2;\r\n            }\r\n            if (endsWith('=', base64String)) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        function numberOfBytes(base64String) {\r\n            return base64String.length / 4 * 3 - paddingSize(base64String);\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    var jhiAlertError = {\r\n        template: '<div class=\"alerts\" ng-cloak=\"\" role=\"alert\">' +\r\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\r\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre>{{ alert.msg }}</pre></uib-alert>' +\r\n                        '</div>' +\r\n                  '</div>',\r\n        controller: jhiAlertErrorController\r\n    };\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .component('jhiAlertError', jhiAlertError);\r\n\r\n    jhiAlertErrorController.$inject = ['$scope', 'AlertService', '$rootScope', '$translate'];\r\n\r\n    function jhiAlertErrorController ($scope, AlertService, $rootScope, $translate) {\r\n        var vm = this;\r\n\r\n        vm.alerts = [];\r\n\r\n        function addErrorAlert (message, key, data) {\r\n            key = key ? key : message;\r\n            vm.alerts.push(\r\n                AlertService.add(\r\n                    {\r\n                        type: 'danger',\r\n                        msg: key,\r\n                        params: data,\r\n                        timeout: 5000,\r\n                        toast: AlertService.isToast(),\r\n                        scoped: true\r\n                    },\r\n                    vm.alerts\r\n                )\r\n            );\r\n        }\r\n\r\n        var cleanHttpErrorListener = $rootScope.$on('hamiaFrontEndApp.httpError', function (event, httpResponse) {\r\n            var i;\r\n            event.stopPropagation();\r\n            switch (httpResponse.status) {\r\n            // connection refused, server not reachable\r\n            case 0:\r\n                addErrorAlert('Server not reachable','error.server.not.reachable');\r\n                break;\r\n\r\n            case 400:\r\n                var headers = Object.keys(httpResponse.headers()).filter(function (header) {\r\n                    return header.indexOf('app-error', header.length - 'app-error'.length) !== -1 || header.indexOf('app-params', header.length - 'app-params'.length) !== -1;\r\n                }).sort();\r\n                var errorHeader = httpResponse.headers(headers[0]);\r\n                var entityKey = httpResponse.headers(headers[1]);\r\n                if (angular.isString(errorHeader)) {\r\n                    var entityName = $translate.instant('global.menu.entities.' + entityKey);\r\n                    addErrorAlert(errorHeader, errorHeader, {entityName: entityName});\r\n                } else if (httpResponse.data && httpResponse.data.fieldErrors) {\r\n                    for (i = 0; i < httpResponse.data.fieldErrors.length; i++) {\r\n                        var fieldError = httpResponse.data.fieldErrors[i];\r\n                        // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\r\n                        var convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\r\n                        var fieldName = $translate.instant('hamiaFrontEndApp.' + fieldError.objectName + '.' + convertedField);\r\n                        addErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, {fieldName: fieldName});\r\n                    }\r\n                } else if (httpResponse.data && httpResponse.data.message) {\r\n                    addErrorAlert(httpResponse.data.message, httpResponse.data.message, httpResponse.data);\r\n                } else {\r\n                    addErrorAlert(httpResponse.data);\r\n                }\r\n                break;\r\n\r\n            case 404:\r\n                addErrorAlert('Not found','error.url.not.found');\r\n                break;\r\n\r\n            default:\r\n                if (httpResponse.data && httpResponse.data.message) {\r\n                    addErrorAlert(httpResponse.data.message);\r\n                } else {\r\n                    addErrorAlert(angular.toJson(httpResponse));\r\n                }\r\n            }\r\n        });\r\n\r\n        $scope.$on('$destroy', function () {\r\n            if(angular.isDefined(cleanHttpErrorListener) && cleanHttpErrorListener !== null){\r\n                cleanHttpErrorListener();\r\n                vm.alerts = [];\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .provider('AlertService', AlertService);\r\n\r\n    function AlertService () {\r\n        this.toast = false;\r\n        /*jshint validthis: true */\r\n        this.$get = getService;\r\n\r\n        this.showAsToast = function(isToast) {\r\n            this.toast = isToast;\r\n        };\r\n\r\n        getService.$inject = ['$timeout', '$sce', '$translate'];\r\n\r\n        function getService ($timeout, $sce,$translate) {\r\n            var toast = this.toast,\r\n                alertId = 0, // unique id for each alert. Starts from 0.\r\n                alerts = [],\r\n                timeout = 5000; // default timeout\r\n\r\n            return {\r\n                factory: factory,\r\n                isToast: isToast,\r\n                add: addAlert,\r\n                closeAlert: closeAlert,\r\n                closeAlertByIndex: closeAlertByIndex,\r\n                clear: clear,\r\n                get: get,\r\n                success: success,\r\n                error: error,\r\n                info: info,\r\n                warning : warning\r\n            };\r\n\r\n            function isToast() {\r\n                return toast;\r\n            }\r\n\r\n            function clear() {\r\n                alerts = [];\r\n            }\r\n\r\n            function get() {\r\n                return alerts;\r\n            }\r\n\r\n            function success(msg, params, position) {\r\n                return this.add({\r\n                    type: 'success',\r\n                    msg: msg,\r\n                    params: params,\r\n                    timeout: timeout,\r\n                    toast: toast,\r\n                    position: position\r\n                });\r\n            }\r\n\r\n            function error(msg, params, position) {\r\n                return this.add({\r\n                    type: 'danger',\r\n                    msg: msg,\r\n                    params: params,\r\n                    timeout: timeout,\r\n                    toast: toast,\r\n                    position: position\r\n                });\r\n            }\r\n\r\n            function warning(msg, params, position) {\r\n                return this.add({\r\n                    type: 'warning',\r\n                    msg: msg,\r\n                    params: params,\r\n                    timeout: timeout,\r\n                    toast: toast,\r\n                    position: position\r\n                });\r\n            }\r\n\r\n            function info(msg, params, position) {\r\n                return this.add({\r\n                    type: 'info',\r\n                    msg: msg,\r\n                    params: params,\r\n                    timeout: timeout,\r\n                    toast: toast,\r\n                    position: position\r\n                });\r\n            }\r\n\r\n            function factory(alertOptions) {\r\n                var alert = {\r\n                    type: alertOptions.type,\r\n                    msg: $sce.trustAsHtml(alertOptions.msg),\r\n                    id: alertOptions.alertId,\r\n                    timeout: alertOptions.timeout,\r\n                    toast: alertOptions.toast,\r\n                    position: alertOptions.position ? alertOptions.position : 'top right',\r\n                    scoped: alertOptions.scoped,\r\n                    close: function (alerts) {\r\n                        return closeAlert(this.id, alerts);\r\n                    }\r\n                };\r\n                if(!alert.scoped) {\r\n                    alerts.push(alert);\r\n                }\r\n                return alert;\r\n            }\r\n\r\n            function addAlert(alertOptions, extAlerts) {\r\n                alertOptions.alertId = alertId++;\r\n                alertOptions.msg = $translate.instant(alertOptions.msg, alertOptions.params);\r\n                var that = this;\r\n                var alert = this.factory(alertOptions);\r\n                if (alertOptions.timeout && alertOptions.timeout > 0) {\r\n                    $timeout(function () {\r\n                        that.closeAlert(alertOptions.alertId, extAlerts);\r\n                    }, alertOptions.timeout);\r\n                }\r\n                return alert;\r\n            }\r\n\r\n            function closeAlert(id, extAlerts) {\r\n                var thisAlerts = extAlerts ? extAlerts : alerts;\r\n                return closeAlertByIndex(thisAlerts.map(function(e) { return e.id; }).indexOf(id), thisAlerts);\r\n            }\r\n\r\n            function closeAlertByIndex(index, thisAlerts) {\r\n                return thisAlerts.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    var jhiAlert = {\r\n        template: '<div class=\"alerts\" ng-cloak=\"\" role=\"alert\">' +\r\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\r\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre ng-bind-html=\"alert.msg\"></pre></uib-alert>' +\r\n                        '</div>' +\r\n                  '</div>',\r\n        controller: jhiAlertController\r\n    };\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .component('jhiAlert', jhiAlert);\r\n\r\n    jhiAlertController.$inject = ['$scope', 'AlertService'];\r\n\r\n    function jhiAlertController($scope, AlertService) {\r\n        var vm = this;\r\n\r\n        vm.alerts = AlertService.get();\r\n        $scope.$on('$destroy', function () {\r\n            vm.alerts = [];\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('notificationInterceptor', notificationInterceptor);\r\n\r\n    notificationInterceptor.$inject = ['$q', 'AlertService'];\r\n\r\n    function notificationInterceptor ($q, AlertService) {\r\n        var service = {\r\n            response: response\r\n        };\r\n\r\n        return service;\r\n\r\n        function response (response) {\r\n            var headers = Object.keys(response.headers()).filter(function (header) {\r\n                return header.indexOf('app-alert', header.length - 'app-alert'.length) !== -1 || header.indexOf('app-params', header.length - 'app-params'.length) !== -1;\r\n            }).sort();\r\n            var alertKey = response.headers(headers[0]);\r\n            if (angular.isString(alertKey)) {\r\n                AlertService.success(alertKey, { param : response.headers(headers[1])});\r\n            }\r\n            return response;\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('errorHandlerInterceptor', errorHandlerInterceptor);\r\n\r\n    errorHandlerInterceptor.$inject = ['$q', '$rootScope'];\r\n\r\n    function errorHandlerInterceptor ($q, $rootScope) {\r\n        var service = {\r\n            responseError: responseError\r\n        };\r\n\r\n        return service;\r\n\r\n        function responseError (response) {\r\n            if (!(response.status === 401 && (response.data === '' || (response.data.path && response.data.path.indexOf('/api/account') === 0 )))) {\r\n                $rootScope.$emit('hamiaFrontEndApp.httpError', response);\r\n            }\r\n            return $q.reject(response);\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('authExpiredInterceptor', authExpiredInterceptor);\r\n\r\n    authExpiredInterceptor.$inject = ['$rootScope', '$q', '$injector', '$localStorage', '$sessionStorage'];\r\n\r\n    function authExpiredInterceptor($rootScope, $q, $injector, $localStorage, $sessionStorage) {\r\n        var service = {\r\n            responseError: responseError\r\n        };\r\n\r\n        return service;\r\n\r\n        function responseError(response) {\r\n            if (response.status === 401) {\r\n                delete $localStorage.authenticationToken;\r\n                delete $sessionStorage.authenticationToken;\r\n                var Principal = $injector.get('Principal');\r\n                if (Principal.isAuthenticated()) {\r\n                    var Auth = $injector.get('Auth');\r\n                    Auth.authorize(true);\r\n                }\r\n            }\r\n            return $q.reject(response);\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('authInterceptor', authInterceptor);\r\n\r\n    authInterceptor.$inject = ['$rootScope', '$q', '$location', '$localStorage', '$sessionStorage'];\r\n\r\n    function authInterceptor($rootScope, $q, $location, $localStorage, $sessionStorage) {\r\n        var service = {\r\n            request: request\r\n        };\r\n\r\n        return service;\r\n\r\n        function request(config) {\r\n            if (!config || !config.url || /^http/.test(config.url)) return config;\r\n\r\n\r\n            /*jshint camelcase: false */\r\n            config.headers = config.headers || {};\r\n\r\n            //set Root URI API\r\n            if (config.url.indexOf('api') != -1) {\r\n                config.url = API_CONFIG.API_URL + '/' + config.url;\r\n            }\r\n\r\n            var token = $localStorage.authenticationToken || $sessionStorage.authenticationToken;\r\n            if (token) {\r\n                config.headers.Authorization = 'Bearer ' + token;\r\n            }\r\n            return config;\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('translationHandler', translationHandler);\r\n\r\n    translationHandler.$inject = ['$rootScope', '$window', '$state', '$translate'];\r\n\r\n    function translationHandler($rootScope, $window, $state, $translate) {\r\n        return {\r\n            initialize: initialize,\r\n            updateTitle: updateTitle\r\n        };\r\n\r\n        function initialize() {\r\n            // if the current translation changes, update the window title\r\n            var translateChangeSuccess = $rootScope.$on('$translateChangeSuccess', function() {\r\n                updateTitle();\r\n            });\r\n\r\n            $rootScope.$on('$destroy', function () {\r\n                if(angular.isDefined(translateChangeSuccess) && translateChangeSuccess !== null){\r\n                    translateChangeSuccess();\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        // update the window title using params in the following\r\n        // precedence\r\n        // 1. titleKey parameter\r\n        // 2. $state.$current.data.pageTitle (current state page title)\r\n        // 3. 'global.title'\r\n        function updateTitle(titleKey) {\r\n            if (!titleKey && $state.$current.data && $state.$current.data.pageTitle) {\r\n                titleKey = $state.$current.data.pageTitle;\r\n            }\r\n            $translate(titleKey || 'global.title').then(function (title) {\r\n                $window.document.title = title;\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('stateHandler', stateHandler);\r\n\r\n    stateHandler.$inject = ['$rootScope', '$state', '$sessionStorage', '$translate', 'JhiLanguageService', 'translationHandler', '$window',\r\n        'Auth', 'Principal', 'VERSION'];\r\n\r\n    function stateHandler($rootScope, $state, $sessionStorage, $translate, JhiLanguageService, translationHandler, $window,\r\n        Auth, Principal, VERSION) {\r\n        return {\r\n            initialize: initialize\r\n        };\r\n\r\n        function initialize() {\r\n            $rootScope.VERSION = VERSION;\r\n\r\n            var stateChangeStart = $rootScope.$on('$stateChangeStart', function (event, toState, toStateParams, fromState) {\r\n                $rootScope.toState = toState;\r\n                $rootScope.toStateParams = toStateParams;\r\n                $rootScope.fromState = fromState;\r\n\r\n                // Redirect to a state with an external URL (http://stackoverflow.com/a/30221248/1098564)\r\n                if (toState.external) {\r\n                    event.preventDefault();\r\n                    $window.open(toState.url, '_self');\r\n                }\r\n\r\n                if (Principal.isIdentityResolved()) {\r\n                    Auth.authorize();\r\n                }\r\n\r\n                // Update the language\r\n                JhiLanguageService.getCurrent().then(function (language) {\r\n                    $translate.use(language);\r\n                });\r\n            });\r\n\r\n            var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess',  function(event, toState, toParams, fromState, fromParams) {\r\n                var titleKey = 'global.title' ;\r\n\r\n                // Set the page title key to the one configured in state or use default one\r\n                if (toState.data.pageTitle) {\r\n                    titleKey = toState.data.pageTitle;\r\n                }\r\n                translationHandler.updateTitle(titleKey);\r\n            });\r\n\r\n            $rootScope.$on('$destroy', function () {\r\n                if(angular.isDefined(stateChangeStart) && stateChangeStart !== null){\r\n                    stateChangeStart();\r\n                }\r\n                if(angular.isDefined(stateChangeSuccess) && stateChangeSuccess !== null){\r\n                    stateChangeSuccess();\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(paginationConfig);\r\n\r\n    paginationConfig.$inject = ['uibPaginationConfig', 'paginationConstants'];\r\n\r\n    function paginationConfig(uibPaginationConfig, paginationConstants) {\r\n        uibPaginationConfig.itemsPerPage = paginationConstants.itemsPerPage;\r\n        uibPaginationConfig.maxSize = 5;\r\n        uibPaginationConfig.boundaryLinks = true;\r\n        uibPaginationConfig.firstText = '«';\r\n        uibPaginationConfig.previousText = '‹';\r\n        uibPaginationConfig.nextText = '›';\r\n        uibPaginationConfig.lastText = '»';\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(pagerConfig);\r\n\r\n    pagerConfig.$inject = ['uibPagerConfig', 'paginationConstants'];\r\n\r\n    function pagerConfig(uibPagerConfig, paginationConstants) {\r\n        uibPagerConfig.itemsPerPage = paginationConstants.itemsPerPage;\r\n        uibPagerConfig.previousText = '«';\r\n        uibPagerConfig.nextText = '»';\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('translationStorageProvider', translationStorageProvider);\r\n\r\n    translationStorageProvider.$inject = ['$cookies', '$log', 'LANGUAGES'];\r\n\r\n    function translationStorageProvider($cookies, $log, LANGUAGES) {\r\n        return {\r\n            get: get,\r\n            put: put\r\n        };\r\n\r\n        function get(name) {\r\n            if (LANGUAGES.indexOf($cookies.getObject(name)) === -1) {\r\n                $log.info('Resetting invalid cookie language \"' + $cookies.getObject(name) + '\" to preferred language \"en\"');\r\n                $cookies.putObject(name, 'en');\r\n            }\r\n            return $cookies.getObject(name);\r\n        }\r\n\r\n        function put(name, value) {\r\n            $cookies.putObject(name, value);\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(translationConfig);\r\n\r\n    translationConfig.$inject = ['$translateProvider', 'tmhDynamicLocaleProvider', 'BUILD_TIMESTAMP'];\r\n\r\n    function translationConfig($translateProvider, tmhDynamicLocaleProvider, BUILD_TIMESTAMP) {\r\n        // Initialize angular-translate\r\n        $translateProvider.useLoader('$translatePartialLoader', {\r\n            urlTemplate: 'i18n/{lang}/{part}.json' + (BUILD_TIMESTAMP ? '?build=' + BUILD_TIMESTAMP : '')\r\n        });\r\n\r\n        $translateProvider.preferredLanguage('en');\r\n        $translateProvider.useStorage('translationStorageProvider');\r\n        $translateProvider.useSanitizeValueStrategy('escaped');\r\n        $translateProvider.addInterpolation('$translateMessageFormatInterpolation');\r\n\r\n        tmhDynamicLocaleProvider.localeLocationPattern('i18n/angular-locale_{{locale}}.js');\r\n        tmhDynamicLocaleProvider.useCookieStorage();\r\n        tmhDynamicLocaleProvider.storageKey('NG_TRANSLATE_LANG_KEY');\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(localStorageConfig);\r\n\r\n    localStorageConfig.$inject = ['$localStorageProvider', '$sessionStorageProvider'];\r\n\r\n    function localStorageConfig($localStorageProvider, $sessionStorageProvider) {\r\n        $localStorageProvider.setKeyPrefix('jhi-');\r\n        $sessionStorageProvider.setKeyPrefix('jhi-');\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(httpConfig);\r\n\r\n    httpConfig.$inject = ['$urlRouterProvider', '$httpProvider', 'httpRequestInterceptorCacheBusterProvider', '$urlMatcherFactoryProvider'];\r\n\r\n    function httpConfig($urlRouterProvider, $httpProvider, httpRequestInterceptorCacheBusterProvider, $urlMatcherFactoryProvider) {\r\n        //Cache everything except rest api requests\r\n        httpRequestInterceptorCacheBusterProvider.setMatchlist([/.*api.*/, /.*protected.*/], true);\r\n\r\n        $urlRouterProvider.otherwise('/');\r\n\r\n        $httpProvider.interceptors.push('errorHandlerInterceptor');\r\n        $httpProvider.interceptors.push('authExpiredInterceptor');\r\n        $httpProvider.interceptors.push('authInterceptor');\r\n        $httpProvider.interceptors.push('notificationInterceptor');\r\n        // jhipster-needle-angularjs-add-interceptor JHipster will add new application http interceptor here\r\n\r\n        $urlMatcherFactoryProvider.type('boolean', {\r\n            name : 'boolean',\r\n            decode: function(val) { return val === true || val === 'true'; },\r\n            encode: function(val) { return val ? 1 : 0; },\r\n            equals: function(a, b) { return this.is(a) && a === b; },\r\n            is: function(val) { return [true,false,0,1].indexOf(val) >= 0; },\r\n            pattern: /bool|true|0|1/\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(compileServiceConfig);\r\n\r\n    compileServiceConfig.$inject = ['$compileProvider','DEBUG_INFO_ENABLED'];\r\n\r\n    function compileServiceConfig($compileProvider,DEBUG_INFO_ENABLED) {\r\n        // disable debug data on prod profile to improve performance\r\n        $compileProvider.debugInfoEnabled(DEBUG_INFO_ENABLED);\r\n\r\n        /*\r\n        If you wish to debug an application with this information\r\n        then you should open up a debug console in the browser\r\n        then call this method directly in this console:\r\n\r\n\t\tangular.reloadWithDebugInfo();\r\n\t\t*/\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(alertServiceConfig);\r\n\r\n    alertServiceConfig.$inject = ['AlertServiceProvider'];\r\n\r\n    function alertServiceConfig(AlertServiceProvider) {\r\n        // set below to true to make alerts look like toast\r\n        AlertServiceProvider.showAsToast(false);\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('app', {\r\n            abstract: true,\r\n            views: {\r\n                'navbar@': {\r\n                    templateUrl: 'app/layouts/navbar/navbar.html',\r\n                    controller: 'NavbarController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                authorize: ['Auth',\r\n                    function (Auth) {\r\n                        return Auth.authorize();\r\n                    }\r\n                ],\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('global');\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function () {\n    'use strict';\n    // DO NOT EDIT THIS FILE, EDIT THE GULP TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE\n    angular\n        .module('hamiaFrontEndApp')\n        .constant('VERSION', \"0.0.1-SNAPSHOT\")\n        .constant('DEBUG_INFO_ENABLED', false)\n        .constant('BUILD_TIMESTAMP', 1573404868025)\n;\n})();\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('UserManagementDialogController',UserManagementDialogController);\r\n\r\n    UserManagementDialogController.$inject = ['$stateParams', '$uibModalInstance', 'entity', 'User', 'JhiLanguageService'];\r\n\r\n    function UserManagementDialogController ($stateParams, $uibModalInstance, entity, User, JhiLanguageService) {\r\n        var vm = this;\r\n\r\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\r\n        vm.clear = clear;\r\n        vm.languages = null;\r\n        vm.save = save;\r\n        vm.user = entity;\r\n\r\n\r\n        JhiLanguageService.getAll().then(function (languages) {\r\n            vm.languages = languages;\r\n        });\r\n\r\n        function clear () {\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n\r\n        function onSaveSuccess (result) {\r\n            vm.isSaving = false;\r\n            $uibModalInstance.close(result);\r\n        }\r\n\r\n        function onSaveError () {\r\n            vm.isSaving = false;\r\n        }\r\n\r\n        function save () {\r\n            vm.isSaving = true;\r\n            if (vm.user.id !== null) {\r\n                User.update(vm.user, onSaveSuccess, onSaveError);\r\n            } else {\r\n                User.save(vm.user, onSaveSuccess, onSaveError);\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('UserManagementDetailController', UserManagementDetailController);\r\n\r\n    UserManagementDetailController.$inject = ['$stateParams', 'User'];\r\n\r\n    function UserManagementDetailController($stateParams, User) {\r\n        var vm = this;\r\n\r\n        vm.load = load;\r\n        vm.user = {};\r\n\r\n        vm.load($stateParams.login);\r\n\r\n        function load(login) {\r\n            User.get({login: login}, function(result) {\r\n                vm.user = result;\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('UserManagementDeleteController', UserManagementDeleteController);\r\n\r\n    UserManagementDeleteController.$inject = ['$uibModalInstance', 'entity', 'User'];\r\n\r\n    function UserManagementDeleteController ($uibModalInstance, entity, User) {\r\n        var vm = this;\r\n\r\n        vm.user = entity;\r\n        vm.clear = clear;\r\n        vm.confirmDelete = confirmDelete;\r\n\r\n        function clear () {\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n\r\n        function confirmDelete (login) {\r\n            User.delete({login: login},\r\n                function () {\r\n                    $uibModalInstance.close(true);\r\n                });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider\r\n        .state('user-management', {\r\n            parent: 'admin',\r\n            url: '/user-management?page&sort',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'userManagement.home.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/user-management/user-management.html',\r\n                    controller: 'UserManagementController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },            params: {\r\n                page: {\r\n                    value: '1',\r\n                    squash: true\r\n                },\r\n                sort: {\r\n                    value: 'id,asc',\r\n                    squash: true\r\n                }\r\n            },\r\n            resolve: {\r\n                pagingParams: ['$stateParams', 'PaginationUtil', function ($stateParams, PaginationUtil) {\r\n                    return {\r\n                        page: PaginationUtil.parsePage($stateParams.page),\r\n                        sort: $stateParams.sort,\r\n                        predicate: PaginationUtil.parsePredicate($stateParams.sort),\r\n                        ascending: PaginationUtil.parseAscending($stateParams.sort)\r\n                    };\r\n                }],\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('user-management');\r\n                    return $translate.refresh();\r\n                }]\r\n\r\n            }        })\r\n        .state('user-management.new', {\r\n            url: '/new',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN']\r\n            },\r\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\r\n                $uibModal.open({\r\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\r\n                    controller: 'UserManagementDialogController',\r\n                    controllerAs: 'vm',\r\n                    backdrop: 'static',\r\n                    size: 'lg',\r\n                    resolve: {\r\n                        entity: function () {\r\n                            return {\r\n                                id: null, login: null, firstName: null, lastName: null, email: null,\r\n                                activated: true, langKey: null, createdBy: null, createdDate: null,\r\n                                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\r\n                                resetKey: null, authorities: null\r\n                            };\r\n                        }\r\n                    }\r\n                }).result.then(function() {\r\n                    $state.go('user-management', null, { reload: true });\r\n                }, function() {\r\n                    $state.go('user-management');\r\n                });\r\n            }]\r\n        })\r\n        .state('user-management.edit', {\r\n            url: '/{login}/edit',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN']\r\n            },\r\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\r\n                $uibModal.open({\r\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\r\n                    controller: 'UserManagementDialogController',\r\n                    controllerAs: 'vm',\r\n                    backdrop: 'static',\r\n                    size: 'lg',\r\n                    resolve: {\r\n                        entity: ['User', function(User) {\r\n                            return User.get({login : $stateParams.login}).$promise;\r\n                        }]\r\n                    }\r\n                }).result.then(function() {\r\n                    $state.go('user-management', null, { reload: true });\r\n                }, function() {\r\n                    $state.go('^');\r\n                });\r\n            }]\r\n        })\r\n        .state('user-management-detail', {\r\n            parent: 'user-management',\r\n            url: '/{login}',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'user-management.detail.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/user-management/user-management-detail.html',\r\n                    controller: 'UserManagementDetailController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('user-management');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        })\r\n        .state('user-management.delete', {\r\n            url: '/{login}/delete',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN']\r\n            },\r\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\r\n                $uibModal.open({\r\n                    templateUrl: 'app/admin/user-management/user-management-delete-dialog.html',\r\n                    controller: 'UserManagementDeleteController',\r\n                    controllerAs: 'vm',\r\n                    size: 'md',\r\n                    resolve: {\r\n                        entity: ['User', function(User) {\r\n                            return User.get({login : $stateParams.login}).$promise;\r\n                        }]\r\n                    }\r\n                }).result.then(function() {\r\n                    $state.go('user-management', null, { reload: true });\r\n                }, function() {\r\n                    $state.go('^');\r\n                });\r\n            }]\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('UserManagementController', UserManagementController);\r\n\r\n    UserManagementController.$inject = ['Principal', 'User', 'ParseLinks', 'AlertService', '$state', 'pagingParams', 'paginationConstants', 'JhiLanguageService'];\r\n\r\n    function UserManagementController(Principal, User, ParseLinks, AlertService, $state, pagingParams, paginationConstants, JhiLanguageService) {\r\n        var vm = this;\r\n\r\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\r\n        vm.currentAccount = null;\r\n        vm.languages = null;\r\n        vm.loadAll = loadAll;\r\n        vm.setActive = setActive;\r\n        vm.users = [];\r\n        vm.page = 1;\r\n        vm.totalItems = null;\r\n        vm.clear = clear;\r\n        vm.links = null;\r\n        vm.loadPage = loadPage;\r\n        vm.predicate = pagingParams.predicate;\r\n        vm.reverse = pagingParams.ascending;\r\n        vm.itemsPerPage = paginationConstants.itemsPerPage;\r\n        vm.transition = transition;\r\n\r\n        vm.loadAll();\r\n        JhiLanguageService.getAll().then(function (languages) {\r\n            vm.languages = languages;\r\n        });\r\n        Principal.identity().then(function(account) {\r\n            vm.currentAccount = account;\r\n        });\r\n\r\n        function setActive (user, isActivated) {\r\n            user.activated = isActivated;\r\n            User.update(user, function () {\r\n                vm.loadAll();\r\n                vm.clear();\r\n            });\r\n        }\r\n\r\n        function loadAll () {\r\n            User.query({\r\n                page: pagingParams.page - 1,\r\n                size: vm.itemsPerPage,\r\n                sort: sort()\r\n            }, onSuccess, onError);\r\n        }\r\n\r\n        function onSuccess(data, headers) {\r\n            vm.links = ParseLinks.parse(headers('link'));\r\n            vm.totalItems = headers('X-Total-Count');\r\n            vm.queryCount = vm.totalItems;\r\n            vm.page = pagingParams.page;\r\n            vm.users = data;\r\n        }\r\n\r\n        function onError(error) {\r\n            AlertService.error(error.data.message);\r\n        }\r\n\r\n        function clear () {\r\n            vm.user = {\r\n                id: null, login: null, firstName: null, lastName: null, email: null,\r\n                activated: null, langKey: null, createdBy: null, createdDate: null,\r\n                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\r\n                resetKey: null, authorities: null\r\n            };\r\n        }\r\n\r\n        function sort () {\r\n            var result = [vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc')];\r\n            if (vm.predicate !== 'id') {\r\n                result.push('id');\r\n            }\r\n            return result;\r\n        }\r\n\r\n        function loadPage (page) {\r\n            vm.page = page;\r\n            vm.transition();\r\n        }\r\n\r\n        function transition () {\r\n            $state.transitionTo($state.$current, {\r\n                page: vm.page,\r\n                sort: vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc'),\r\n                search: vm.currentSearch\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('jhi-metrics', {\r\n            parent: 'admin',\r\n            url: '/metrics',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'metrics.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/metrics/metrics.html',\r\n                    controller: 'JhiMetricsMonitoringController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('metrics');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('JhiMetricsService', JhiMetricsService);\r\n\r\n    JhiMetricsService.$inject = ['$rootScope', '$http'];\r\n\r\n    function JhiMetricsService ($rootScope, $http) {\r\n        var service = {\r\n            getMetrics: getMetrics,\r\n            threadDump: threadDump\r\n        };\r\n\r\n        return service;\r\n\r\n        function getMetrics () {\r\n            return $http.get('management/metrics').then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        function threadDump () {\r\n            return $http.get('management/dump').then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('JhiMetricsMonitoringModalController', JhiMetricsMonitoringModalController);\r\n\r\n    JhiMetricsMonitoringModalController.$inject = ['$uibModalInstance', 'threadDump'];\r\n\r\n    function JhiMetricsMonitoringModalController ($uibModalInstance, threadDump) {\r\n        var vm = this;\r\n\r\n        vm.cancel = cancel;\r\n        vm.getLabelClass = getLabelClass;\r\n        vm.threadDump = threadDump;\r\n        vm.threadDumpAll = 0;\r\n        vm.threadDumpBlocked = 0;\r\n        vm.threadDumpRunnable = 0;\r\n        vm.threadDumpTimedWaiting = 0;\r\n        vm.threadDumpWaiting = 0;\r\n\r\n        angular.forEach(threadDump, function(value) {\r\n            if (value.threadState === 'RUNNABLE') {\r\n                vm.threadDumpRunnable += 1;\r\n            } else if (value.threadState === 'WAITING') {\r\n                vm.threadDumpWaiting += 1;\r\n            } else if (value.threadState === 'TIMED_WAITING') {\r\n                vm.threadDumpTimedWaiting += 1;\r\n            } else if (value.threadState === 'BLOCKED') {\r\n                vm.threadDumpBlocked += 1;\r\n            }\r\n        });\r\n\r\n        vm.threadDumpAll = vm.threadDumpRunnable + vm.threadDumpWaiting +\r\n            vm.threadDumpTimedWaiting + vm.threadDumpBlocked;\r\n\r\n        function cancel () {\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n\r\n        function getLabelClass (threadState) {\r\n            if (threadState === 'RUNNABLE') {\r\n                return 'label-success';\r\n            } else if (threadState === 'WAITING') {\r\n                return 'label-info';\r\n            } else if (threadState === 'TIMED_WAITING') {\r\n                return 'label-warning';\r\n            } else if (threadState === 'BLOCKED') {\r\n                return 'label-danger';\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('JhiMetricsMonitoringController', JhiMetricsMonitoringController);\r\n\r\n    JhiMetricsMonitoringController.$inject = ['$scope','JhiMetricsService', '$uibModal'];\r\n\r\n    function JhiMetricsMonitoringController ($scope, JhiMetricsService, $uibModal) {\r\n        var vm = this;\r\n\r\n        vm.metrics = {};\r\n        vm.refresh = refresh;\r\n        vm.refreshThreadDumpData = refreshThreadDumpData;\r\n        vm.servicesStats = {};\r\n        vm.updatingMetrics = true;\r\n\r\n        vm.refresh();\r\n\r\n        $scope.$watch('vm.metrics', function (newValue) {\r\n            vm.servicesStats = {};\r\n            angular.forEach(newValue.timers, function (value, key) {\r\n                if (key.includes('web.rest') || key.includes('service')) {\r\n                    vm.servicesStats[key] = value;\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n        function refresh () {\r\n            vm.updatingMetrics = true;\r\n            JhiMetricsService.getMetrics().then(function (promise) {\r\n                vm.metrics = promise;\r\n                vm.updatingMetrics = false;\r\n            }, function (promise) {\r\n                vm.metrics = promise.data;\r\n                vm.updatingMetrics = false;\r\n            });\r\n        }\r\n\r\n        function refreshThreadDumpData () {\r\n            JhiMetricsService.threadDump().then(function(data) {\r\n                $uibModal.open({\r\n                    templateUrl: 'app/admin/metrics/metrics.modal.html',\r\n                    controller: 'JhiMetricsMonitoringModalController',\r\n                    controllerAs: 'vm',\r\n                    size: 'lg',\r\n                    resolve: {\r\n                        threadDump: function() {\r\n                            return data;\r\n                        }\r\n\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('logs', {\r\n            parent: 'admin',\r\n            url: '/logs',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'logs.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/logs/logs.html',\r\n                    controller: 'LogsController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('logs');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('LogsService', LogsService);\r\n\r\n    LogsService.$inject = ['$resource'];\r\n\r\n    function LogsService ($resource) {\r\n        var service = $resource('management/logs', {}, {\r\n            'findAll': { method: 'GET', isArray: true},\r\n            'changeLevel': { method: 'PUT'}\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('LogsController', LogsController);\r\n\r\n    LogsController.$inject = ['LogsService'];\r\n\r\n    function LogsController (LogsService) {\r\n        var vm = this;\r\n\r\n        vm.changeLevel = changeLevel;\r\n        vm.loggers = LogsService.findAll();\r\n\r\n        function changeLevel (name, level) {\r\n            LogsService.changeLevel({name: name, level: level}, function () {\r\n                vm.loggers = LogsService.findAll();\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('jhi-health', {\r\n            parent: 'admin',\r\n            url: '/health',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'health.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/health/health.html',\r\n                    controller: 'JhiHealthCheckController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('health');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('JhiHealthService', JhiHealthService);\r\n\r\n    JhiHealthService.$inject = ['$rootScope', '$http'];\r\n\r\n    function JhiHealthService ($rootScope, $http) {\r\n        var separator = '.';\r\n        var service = {\r\n            checkHealth: checkHealth,\r\n            transformHealthData: transformHealthData,\r\n            getBaseName: getBaseName,\r\n            getSubSystemName: getSubSystemName\r\n        };\r\n\r\n        return service;\r\n\r\n        function checkHealth () {\r\n            return $http.get('management/health').then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        function transformHealthData (data) {\r\n            var response = [];\r\n            flattenHealthData(response, null, data);\r\n            return response;\r\n        }\r\n\r\n        function getBaseName (name) {\r\n            if (name) {\r\n                var split = name.split('.');\r\n                return split[0];\r\n            }\r\n        }\r\n\r\n        function getSubSystemName (name) {\r\n            if (name) {\r\n                var split = name.split('.');\r\n                split.splice(0, 1);\r\n                var remainder = split.join('.');\r\n                return remainder ? ' - ' + remainder : '';\r\n            }\r\n        }\r\n\r\n        /* private methods */\r\n        function flattenHealthData (result, path, data) {\r\n            angular.forEach(data, function (value, key) {\r\n                if (isHealthObject(value)) {\r\n                    if (hasSubSystem(value)) {\r\n                        addHealthObject(result, false, value, getModuleName(path, key));\r\n                        flattenHealthData(result, getModuleName(path, key), value);\r\n                    } else {\r\n                        addHealthObject(result, true, value, getModuleName(path, key));\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n\r\n        function addHealthObject (result, isLeaf, healthObject, name) {\r\n\r\n            var healthData = {\r\n                'name': name\r\n            };\r\n            var details = {};\r\n            var hasDetails = false;\r\n\r\n            angular.forEach(healthObject, function (value, key) {\r\n                if (key === 'status' || key === 'error') {\r\n                    healthData[key] = value;\r\n                } else {\r\n                    if (!isHealthObject(value)) {\r\n                        details[key] = value;\r\n                        hasDetails = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Add the of the details\r\n            if (hasDetails) {\r\n                angular.extend(healthData, { 'details': details});\r\n            }\r\n\r\n            // Only add nodes if they provide additional information\r\n            if (isLeaf || hasDetails || healthData.error) {\r\n                result.push(healthData);\r\n            }\r\n            return healthData;\r\n        }\r\n\r\n        function getModuleName (path, name) {\r\n            var result;\r\n            if (path && name) {\r\n                result = path + separator + name;\r\n            }  else if (path) {\r\n                result = path;\r\n            } else if (name) {\r\n                result = name;\r\n            } else {\r\n                result = '';\r\n            }\r\n            return result;\r\n        }\r\n\r\n        function hasSubSystem (healthObject) {\r\n            var result = false;\r\n            angular.forEach(healthObject, function (value) {\r\n                if (value && value.status) {\r\n                    result = true;\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n\r\n        function isHealthObject (healthObject) {\r\n            var result = false;\r\n            angular.forEach(healthObject, function (value, key) {\r\n                if (key === 'status') {\r\n                    result = true;\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular.module('hamiaFrontEndApp')\r\n        .controller('HealthModalController', HealthModalController);\r\n\r\n    HealthModalController.$inject = ['$uibModalInstance', 'currentHealth', 'baseName', 'subSystemName'];\r\n\r\n    function HealthModalController ($uibModalInstance, currentHealth, baseName, subSystemName) {\r\n        var vm = this;\r\n\r\n        vm.cancel = cancel;\r\n        vm.currentHealth = currentHealth;\r\n        vm.baseName = baseName;\r\n        vm.subSystemName = subSystemName;\r\n\r\n        function cancel() {\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('JhiHealthCheckController', JhiHealthCheckController);\r\n\r\n    JhiHealthCheckController.$inject = ['JhiHealthService', '$uibModal'];\r\n\r\n    function JhiHealthCheckController (JhiHealthService, $uibModal) {\r\n        var vm = this;\r\n\r\n        vm.updatingHealth = true;\r\n        vm.getLabelClass = getLabelClass;\r\n        vm.refresh = refresh;\r\n        vm.showHealth = showHealth;\r\n        vm.baseName = JhiHealthService.getBaseName;\r\n        vm.subSystemName = JhiHealthService.getSubSystemName;\r\n\r\n        vm.refresh();\r\n\r\n        function getLabelClass (statusState) {\r\n            if (statusState === 'UP') {\r\n                return 'label-success';\r\n            } else {\r\n                return 'label-danger';\r\n            }\r\n        }\r\n\r\n        function refresh () {\r\n            vm.updatingHealth = true;\r\n            JhiHealthService.checkHealth().then(function (response) {\r\n                vm.healthData = JhiHealthService.transformHealthData(response);\r\n                vm.updatingHealth = false;\r\n            }, function (response) {\r\n                vm.healthData =  JhiHealthService.transformHealthData(response.data);\r\n                vm.updatingHealth = false;\r\n            });\r\n        }\r\n\r\n        function showHealth (health) {\r\n            $uibModal.open({\r\n                templateUrl: 'app/admin/health/health.modal.html',\r\n                controller: 'HealthModalController',\r\n                controllerAs: 'vm',\r\n                size: 'lg',\r\n                resolve: {\r\n                    currentHealth: function() {\r\n                        return health;\r\n                    },\r\n                    baseName: function() {\r\n                        return vm.baseName;\r\n                    },\r\n                    subSystemName: function() {\r\n                        return vm.subSystemName;\r\n                    }\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig ($stateProvider) {\r\n        $stateProvider.state('docs', {\r\n            parent: 'admin',\r\n            url: '/docs',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'global.menu.admin.apidocs'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/docs/docs.html'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', function ($translate) {\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('jhi-configuration', {\r\n            parent: 'admin',\r\n            url: '/configuration',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'configuration.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/configuration/configuration.html',\r\n                    controller: 'JhiConfigurationController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('configuration');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('JhiConfigurationService', JhiConfigurationService);\r\n\r\n    JhiConfigurationService.$inject = ['$filter', '$http'];\r\n\r\n    function JhiConfigurationService ($filter, $http) {\r\n        var service = {\r\n            get: get,\r\n            getEnv: getEnv\r\n        };\r\n\r\n        return service;\r\n\r\n        function get () {\r\n            return $http.get('management/configprops').then(getConfigPropsComplete);\r\n\r\n            function getConfigPropsComplete (response) {\r\n                var properties = [];\r\n                angular.forEach(response.data, function (data) {\r\n                    properties.push(data);\r\n                });\r\n                var orderBy = $filter('orderBy');\r\n                return orderBy(properties, 'prefix');\r\n            }\r\n        }\r\n\r\n        function getEnv () {\r\n            return $http.get('management/env').then(getEnvComplete);\r\n\r\n            function getEnvComplete (response) {\r\n                var properties = {};\r\n                angular.forEach(response.data, function (val,key) {\r\n                    var vals = [];\r\n                    angular.forEach(val, function (v,k) {\r\n                        vals.push({ key:k, val:v });\r\n                    });\r\n                    properties[key] = vals;\r\n                });\r\n                return properties;\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('JhiConfigurationController', JhiConfigurationController);\r\n\r\n    JhiConfigurationController.$inject = ['$filter','JhiConfigurationService'];\r\n\r\n    function JhiConfigurationController (filter,JhiConfigurationService) {\r\n        var vm = this;\r\n\r\n        vm.allConfiguration = null;\r\n        vm.configuration = null;\r\n\r\n        JhiConfigurationService.get().then(function(configuration) {\r\n            vm.configuration = configuration;\r\n        });\r\n        JhiConfigurationService.getEnv().then(function (configuration) {\r\n            vm.allConfiguration = configuration;\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('audits', {\r\n            parent: 'admin',\r\n            url: '/audits',\r\n            data: {\r\n                authorities: ['ROLE_ADMIN'],\r\n                pageTitle: 'audits.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/admin/audits/audits.html',\r\n                    controller: 'AuditsController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('audits');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .factory('AuditsService', AuditsService);\r\n\r\n    AuditsService.$inject = ['$resource'];\r\n\r\n    function AuditsService ($resource) {\r\n        var service = $resource('management/audits/:id', {}, {\r\n            'get': {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            'query': {\r\n                method: 'GET',\r\n                isArray: true,\r\n                params: {fromDate: null, toDate: null}\r\n            }\r\n        });\r\n\r\n        return service;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('AuditsController', AuditsController);\r\n\r\n    AuditsController.$inject = ['$filter', 'AuditsService', 'ParseLinks'];\r\n\r\n    function AuditsController ($filter, AuditsService, ParseLinks) {\r\n        var vm = this;\r\n\r\n        vm.audits = null;\r\n        vm.fromDate = null;\r\n        vm.links = null;\r\n        vm.loadPage = loadPage;\r\n        vm.onChangeDate = onChangeDate;\r\n        vm.page = 1;\r\n        vm.previousMonth = previousMonth;\r\n        vm.toDate = null;\r\n        vm.today = today;\r\n        vm.totalItems = null;\r\n\r\n        vm.today();\r\n        vm.previousMonth();\r\n        vm.onChangeDate();\r\n\r\n        function onChangeDate () {\r\n            var dateFormat = 'yyyy-MM-dd';\r\n            var fromDate = $filter('date')(vm.fromDate, dateFormat);\r\n            var toDate = $filter('date')(vm.toDate, dateFormat);\r\n\r\n            AuditsService.query({page: vm.page -1, size: 20, fromDate: fromDate, toDate: toDate}, function(result, headers){\r\n                vm.audits = result;\r\n                vm.links = ParseLinks.parse(headers('link'));\r\n                vm.totalItems = headers('X-Total-Count');\r\n            });\r\n        }\r\n\r\n        // Date picker configuration\r\n        function today () {\r\n            // Today + 1 day - needed if the current day must be included\r\n            var today = new Date();\r\n            vm.toDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);\r\n        }\r\n\r\n        function previousMonth () {\r\n            var fromDate = new Date();\r\n            if (fromDate.getMonth() === 0) {\r\n                fromDate = new Date(fromDate.getFullYear() - 1, 11, fromDate.getDate());\r\n            } else {\r\n                fromDate = new Date(fromDate.getFullYear(), fromDate.getMonth() - 1, fromDate.getDate());\r\n            }\r\n\r\n            vm.fromDate = fromDate;\r\n        }\r\n\r\n        function loadPage (page) {\r\n            vm.page = page;\r\n            vm.onChangeDate();\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig ($stateProvider) {\r\n        $stateProvider.state('admin', {\r\n            abstract: true,\r\n            parent: 'app'\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('settings', {\r\n            parent: 'account',\r\n            url: '/settings',\r\n            data: {\r\n                authorities: ['ROLE_USER'],\r\n                pageTitle: 'global.menu.account.settings'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/account/settings/settings.html',\r\n                    controller: 'SettingsController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('settings');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('SettingsController', SettingsController);\r\n\r\n    SettingsController.$inject = ['Principal', 'Auth', 'JhiLanguageService', '$translate'];\r\n\r\n    function SettingsController (Principal, Auth, JhiLanguageService, $translate) {\r\n        var vm = this;\r\n\r\n        vm.error = null;\r\n        vm.save = save;\r\n        vm.settingsAccount = null;\r\n        vm.success = null;\r\n\r\n        /**\r\n         * Store the \"settings account\" in a separate variable, and not in the shared \"account\" variable.\r\n         */\r\n        var copyAccount = function (account) {\r\n            return {\r\n                activated: account.activated,\r\n                email: account.email,\r\n                firstName: account.firstName,\r\n                langKey: account.langKey,\r\n                lastName: account.lastName,\r\n                login: account.login\r\n            };\r\n        };\r\n\r\n        Principal.identity().then(function(account) {\r\n            vm.settingsAccount = copyAccount(account);\r\n        });\r\n\r\n        function save () {\r\n            Auth.updateAccount(vm.settingsAccount).then(function() {\r\n                vm.error = null;\r\n                vm.success = 'OK';\r\n                Principal.identity(true).then(function(account) {\r\n                    vm.settingsAccount = copyAccount(account);\r\n                });\r\n                JhiLanguageService.getCurrent().then(function(current) {\r\n                    if (vm.settingsAccount.langKey !== current) {\r\n                        $translate.use(vm.settingsAccount.langKey);\r\n                    }\r\n                });\r\n            }).catch(function() {\r\n                vm.success = null;\r\n                vm.error = 'ERROR';\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('requestReset', {\r\n            parent: 'account',\r\n            url: '/reset/request',\r\n            data: {\r\n                authorities: []\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/account/reset/request/reset.request.html',\r\n                    controller: 'RequestResetController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('reset');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('RequestResetController', RequestResetController);\r\n\r\n    RequestResetController.$inject = ['$timeout', 'Auth', 'errorConstants'];\r\n\r\n    function RequestResetController ($timeout, Auth, errorConstants) {\r\n        var vm = this;\r\n\r\n        vm.error = null;\r\n        vm.errorEmailNotExists = null;\r\n        vm.requestReset = requestReset;\r\n        vm.resetAccount = {};\r\n        vm.success = null;\r\n\r\n        $timeout(function (){angular.element('#email').focus();});\r\n\r\n        function requestReset () {\r\n\r\n            vm.error = null;\r\n            vm.errorEmailNotExists = null;\r\n\r\n            Auth.resetPasswordInit(vm.resetAccount.email).then(function () {\r\n                vm.success = 'OK';\r\n            }).catch(function (response) {\r\n                vm.success = null;\r\n                if (response.status === 400 && angular.fromJson(response.data).type === errorConstants.EMAIL_NOT_FOUND_TYPE) {\r\n                    vm.errorEmailNotExists = 'ERROR';\r\n                } else {\r\n                    vm.error = 'ERROR';\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('finishReset', {\r\n            parent: 'account',\r\n            url: '/reset/finish?key',\r\n            data: {\r\n                authorities: []\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/account/reset/finish/reset.finish.html',\r\n                    controller: 'ResetFinishController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('reset');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('ResetFinishController', ResetFinishController);\r\n\r\n    ResetFinishController.$inject = ['$stateParams', '$timeout', 'Auth', 'LoginService'];\r\n\r\n    function ResetFinishController ($stateParams, $timeout, Auth, LoginService) {\r\n        var vm = this;\r\n\r\n        vm.keyMissing = angular.isUndefined($stateParams.key);\r\n        vm.confirmPassword = null;\r\n        vm.doNotMatch = null;\r\n        vm.error = null;\r\n        vm.finishReset = finishReset;\r\n        vm.login = LoginService.open;\r\n        vm.resetAccount = {};\r\n        vm.success = null;\r\n\r\n        $timeout(function (){angular.element('#password').focus();});\r\n\r\n        function finishReset() {\r\n            vm.doNotMatch = null;\r\n            vm.error = null;\r\n            if (vm.resetAccount.password !== vm.confirmPassword) {\r\n                vm.doNotMatch = 'ERROR';\r\n            } else {\r\n                Auth.resetPasswordFinish({key: $stateParams.key, newPassword: vm.resetAccount.password}).then(function () {\r\n                    vm.success = 'OK';\r\n                }).catch(function () {\r\n                    vm.success = null;\r\n                    vm.error = 'ERROR';\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('register', {\r\n            parent: 'account',\r\n            url: '/register',\r\n            data: {\r\n                authorities: [],\r\n                pageTitle: 'register.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/account/register/register.html',\r\n                    controller: 'RegisterController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('register');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('RegisterController', RegisterController);\r\n\r\n\r\n    RegisterController.$inject = ['$translate', '$timeout', 'Auth', 'LoginService', 'Register'];\r\n\r\n    function RegisterController ($translate, $timeout, Auth, LoginService, Register) {\r\n        var vm = this;\r\n\r\n        vm.doNotMatch = null;\r\n        vm.error = null;\r\n        vm.errorUserExists = null;\r\n        vm.login = LoginService.open;\r\n        vm.register = register;\r\n        vm.registerAccount = {};\r\n        vm.success = null;\r\n\r\n        $timeout(function (){angular.element('#login').focus();});\r\n\r\n        // function register () {\r\n        //     if (vm.registerAccount.password !== vm.confirmPassword) {\r\n        //         vm.doNotMatch = 'ERROR';\r\n        //     } else {\r\n        //         vm.registerAccount.langKey = $translate.use();\r\n        //         vm.doNotMatch = null;\r\n        //         vm.error = null;\r\n        //         vm.errorUserExists = null;\r\n        //         vm.errorEmailExists = null;\r\n\r\n        //         Auth.createAccount(vm.registerAccount).then(function () {\r\n        //             vm.success = 'OK';\r\n        //         }).catch(function (response) {\r\n        //             vm.success = null;\r\n        //             if (response.status === 400 && angular.fromJson(response.data).type === errorConstants.LOGIN_ALREADY_USED_TYPE) {\r\n        //                 vm.errorUserExists = 'ERROR';\r\n        //             } else if (response.status === 400 && angular.fromJson(response.data).type === errorConstants.EMAIL_ALREADY_USED_TYPE) {\r\n        //                 vm.errorEmailExists = 'ERROR';\r\n        //             } else {\r\n        //                 vm.error = 'ERROR';\r\n        //             }\r\n        //         });\r\n        //     }\r\n        //}\r\n\r\n\r\n        function register(){\r\n\r\n            var userData = {\r\n                username: vm.registerAccount.login,\r\n                email: vm.registerAccount.email,\r\n                first_name: vm.registerAccount.fisrtName,\r\n                last_name: vm.registerAccount.lastName,\r\n                password:  vm.registerAccount.password,\r\n                role: 'Free User',\r\n            }\r\n            \r\n            Register.update({\r\n                pathMethod: 'create'\r\n            }, userData, function(data){\r\n                console.log('data', data);\r\n            }, function(error){\r\n                console.log(error)\r\n            })\r\n        }\r\n    }\r\n})();\r\n\n/* globals $ */\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .directive('passwordStrengthBar', passwordStrengthBar);\r\n\r\n    function passwordStrengthBar () {\r\n        var directive = {\r\n            replace: true,\r\n            restrict: 'E',\r\n            template: '<div id=\"strength\">' +\r\n                '<small data-translate=\"global.messages.validate.newpassword.strength\">Password strength:</small>' +\r\n                '<ul id=\"strengthBar\">' +\r\n                '<li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li>' +\r\n                '</ul>' +\r\n                '</div>',\r\n            scope: {\r\n                passwordToCheck: '='\r\n            },\r\n            link: linkFunc\r\n        };\r\n\r\n        return directive;\r\n\r\n        /* private helper methods*/\r\n\r\n        function linkFunc(scope, iElement) {\r\n            var strength = {\r\n                colors: ['#F00', '#F90', '#FF0', '#9F0', '#0F0'],\r\n                mesureStrength: function (p) {\r\n\r\n                    var _force = 0;\r\n                    var _regex = /[$-/:-?{-~!\"^_`\\[\\]]/g; // \"\r\n\r\n                    var _lowerLetters = /[a-z]+/.test(p);\r\n                    var _upperLetters = /[A-Z]+/.test(p);\r\n                    var _numbers = /[0-9]+/.test(p);\r\n                    var _symbols = _regex.test(p);\r\n\r\n                    var _flags = [_lowerLetters, _upperLetters, _numbers, _symbols];\r\n                    var _passedMatches = $.grep(_flags, function (el) {\r\n                        return el === true;\r\n                    }).length;\r\n\r\n                    _force += 2 * p.length + ((p.length >= 10) ? 1 : 0);\r\n                    _force += _passedMatches * 10;\r\n\r\n                    // penalty (short password)\r\n                    _force = (p.length <= 6) ? Math.min(_force, 10) : _force;\r\n\r\n                    // penalty (poor variety of characters)\r\n                    _force = (_passedMatches === 1) ? Math.min(_force, 10) : _force;\r\n                    _force = (_passedMatches === 2) ? Math.min(_force, 20) : _force;\r\n                    _force = (_passedMatches === 3) ? Math.min(_force, 40) : _force;\r\n\r\n                    return _force;\r\n\r\n                },\r\n                getColor: function (s) {\r\n\r\n                    var idx;\r\n                    if (s <= 10) {\r\n                        idx = 0;\r\n                    }\r\n                    else if (s <= 20) {\r\n                        idx = 1;\r\n                    }\r\n                    else if (s <= 30) {\r\n                        idx = 2;\r\n                    }\r\n                    else if (s <= 40) {\r\n                        idx = 3;\r\n                    }\r\n                    else {\r\n                        idx = 4;\r\n                    }\r\n\r\n                    return { idx: idx + 1, col: this.colors[idx] };\r\n                }\r\n            };\r\n            scope.$watch('passwordToCheck', function (password) {\r\n                if (password) {\r\n                    var c = strength.getColor(strength.mesureStrength(password));\r\n                    iElement.removeClass('ng-hide');\r\n                    iElement.find('ul').children('li')\r\n                        .css({ 'background-color': '#DDD' })\r\n                        .slice(0, c.idx)\r\n                        .css({ 'background-color': c.col });\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('password', {\r\n            parent: 'account',\r\n            url: '/password',\r\n            data: {\r\n                authorities: ['ROLE_USER'],\r\n                pageTitle: 'global.menu.account.password'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/account/password/password.html',\r\n                    controller: 'PasswordController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('password');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('PasswordController', PasswordController);\r\n\r\n    PasswordController.$inject = ['Auth', 'Principal'];\r\n\r\n    function PasswordController (Auth, Principal) {\r\n        var vm = this;\r\n\r\n        vm.changePassword = changePassword;\r\n        vm.doNotMatch = null;\r\n        vm.error = null;\r\n        vm.success = null;\r\n\r\n        Principal.identity().then(function(account) {\r\n            vm.account = account;\r\n        });\r\n\r\n        function changePassword () {\r\n            if (vm.password !== vm.confirmPassword) {\r\n                vm.error = null;\r\n                vm.success = null;\r\n                vm.doNotMatch = 'ERROR';\r\n            } else {\r\n                vm.doNotMatch = null;\r\n                Auth.changePassword(vm.password).then(function () {\r\n                    vm.error = null;\r\n                    vm.success = 'OK';\r\n                }).catch(function () {\r\n                    vm.success = null;\r\n                    vm.error = 'ERROR';\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('activate', {\r\n            parent: 'account',\r\n            url: '/activate?key',\r\n            data: {\r\n                authorities: [],\r\n                pageTitle: 'activate.title'\r\n            },\r\n            views: {\r\n                'content@': {\r\n                    templateUrl: 'app/account/activate/activate.html',\r\n                    controller: 'ActivationController',\r\n                    controllerAs: 'vm'\r\n                }\r\n            },\r\n            resolve: {\r\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\r\n                    $translatePartialLoader.addPart('activate');\r\n                    return $translate.refresh();\r\n                }]\r\n            }\r\n        });\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .controller('ActivationController', ActivationController);\r\n\r\n    ActivationController.$inject = ['$stateParams', 'Auth', 'LoginService'];\r\n\r\n    function ActivationController ($stateParams, Auth, LoginService) {\r\n        var vm = this;\r\n\r\n        Auth.activateAccount({key: $stateParams.key}).then(function () {\r\n            vm.error = null;\r\n            vm.success = 'OK';\r\n        }).catch(function () {\r\n            vm.success = null;\r\n            vm.error = 'ERROR';\r\n        });\r\n\r\n        vm.login = LoginService.open;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('hamiaFrontEndApp')\r\n        .config(stateConfig);\r\n\r\n    stateConfig.$inject = ['$stateProvider'];\r\n\r\n    function stateConfig($stateProvider) {\r\n        $stateProvider.state('account', {\r\n            abstract: true,\r\n            parent: 'app'\r\n        });\r\n    }\r\n})();\r\n(function(){angular.module('hamiaFrontEndApp').run(['$templateCache', function($templateCache) {$templateCache.put('app/home/home.html','<div class=\"row\"><div class=\"col-md-12\"><h3>L\\u1EF1a ch\\u1ECDn ng\\xE0nh</h3></div><div class=\"col-md-12\"><button class=\"btn btn-flat btn-success btn-customs\" ng-repeat=\"item in vm.lstIndustry\" ng-click=\"vm.selected(item)\" ng-if=\"!item.selected\"><span>{{item.Name}}</span></button> <button class=\"btn btn-flat btn-success btn-customs btn-selected\" ng-repeat=\"item in vm.lstIndustry\" ng-click=\"vm.selected(item)\" ng-if=\"item.selected\"><span>{{item.Name}}</span></button></div><div class=\"col-md-12\"><h3>Ch\\u1ECDn lo\\u1EA1i b\\xE1o c\\xE1o</h3></div><div class=\"col-md-12 report-list\"><ul><li><button class=\"btn btn-success\" ng-click=\"vm.stateGo(\\'legislation\\')\"><span>Bi\\u1EC7n ph\\xE1p phi thu\\u1EBF quan</span></button></li><li><button class=\"btn btn-success\" ng-click=\"vm.stateGo(\\'store\\')\"><span>C\\u01A1 s\\u1EDF kinh doanh</span></button></li><li><button class=\"btn btn-success\" ng-click=\"vm.exportPDF()\"><span>Export PDF</span></button></li></ul></div></div>');\n$templateCache.put('app/account/activate/activate.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h1 data-translate=\"activate.title\">Activation</h1><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"activate.messages.success\" translate-compile><strong>Your user has been activated.</strong> Please <a class=\"alert-link\" href=\"\" ng-click=\"vm.login()\">sign in</a>.</div><div class=\"alert alert-danger\" ng-show=\"vm.error\" data-translate=\"activate.messages.error\"><strong>Your user could not be activated.</strong> Please use the registration form to sign up.</div></div></div></div>');\n$templateCache.put('app/account/password/password.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h2 data-translate=\"password.title\" translate-values=\"{username: \\'{{vm.account.login}}\\'}\">Password for [<b>{{vm.account.login}}</b>]</h2><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"password.messages.success\"><strong>Password changed!</strong></div><div class=\"alert alert-danger\" ng-show=\"vm.error\" data-translate=\"password.messages.error\"><strong>An error has occurred!</strong> The password could not be changed.</div><div class=\"alert alert-danger\" ng-show=\"vm.doNotMatch\" data-translate=\"global.messages.error.dontmatch\">The password and its confirmation do not match!</div><form name=\"form\" role=\"form\" novalidate ng-submit=\"vm.changePassword()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"password\" data-translate=\"global.form.newpassword\">New password</label><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"{{\\'global.form.newpassword.placeholder\\' | translate}}\" ng-model=\"vm.password\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.password.$dirty && form.password.$invalid\"><p class=\"help-block\" ng-show=\"form.password.$error.required\" data-translate=\"global.messages.validate.newpassword.required\">Your password is required.</p><p class=\"help-block\" ng-show=\"form.password.$error.minlength\" data-translate=\"global.messages.validate.newpassword.minlength\">Your password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.password.$error.maxlength\" data-translate=\"global.messages.validate.newpassword.maxlength\">Your password cannot be longer than 50 characters.</p></div><password-strength-bar password-to-check=\"vm.password\"></password-strength-bar></div><div class=\"form-group\"><label class=\"control-label\" for=\"confirmPassword\" data-translate=\"global.form.confirmpassword\">New password confirmation</label><input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"{{\\'global.form.confirmpassword.placeholder\\' | translate}}\" ng-model=\"vm.confirmPassword\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.confirmPassword.$dirty && form.confirmPassword.$invalid\"><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.required\" data-translate=\"global.messages.validate.confirmpassword.required\">Your confirmation password is required.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.minlength\" data-translate=\"global.messages.validate.confirmpassword.minlength\">Your confirmation password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.maxlength\" data-translate=\"global.messages.validate.confirmpassword.maxlength\">Your confirmation password cannot be longer than 50 characters.</p></div></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"password.form.button\">Save</button></form></div></div></div>');\n$templateCache.put('app/account/register/register.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h1>\\u0110\\u0103ng k\\xFD t\\xE0i kho\\u1EA3n</h1><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"register.messages.success\"><strong>Registration saved!</strong> Please check your email for confirmation.</div><div class=\"alert alert-danger\" ng-show=\"vm.error\" data-translate=\"register.messages.error.fail\"><strong>Registration failed!</strong> Please try again later.</div><div class=\"alert alert-danger\" ng-show=\"vm.errorUserExists\" data-translate=\"register.messages.error.userexists\"><strong>Login name already registered!</strong> Please choose another one.</div><div class=\"alert alert-danger\" ng-show=\"vm.errorEmailExists\" data-translate=\"register.messages.error.emailexists\"><strong>Email is already in use!</strong> Please choose another one.</div><div class=\"alert alert-danger\" ng-show=\"vm.doNotMatch\" data-translate=\"global.messages.error.dontmatch\">The password and its confirmation do not match!</div></div><div class=\"col-md-8 col-md-offset-2\"><form ng-show=\"!vm.success\" name=\"form\" role=\"form\" novalidate ng-submit=\"vm.register()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"fisrtName\">H\\u1ECD</label><input type=\"fisrtName\" class=\"form-control\" id=\"fisrtName\" name=\"fisrtName\" ng-model=\"vm.registerAccount.fisrtName\" ng-minlength=\"2\" ng-maxlength=\"100\" required></div><div class=\"form-group\"><label class=\"control-label\" for=\"lastName\">T\\xEAn</label><input type=\"lastName\" class=\"form-control\" id=\"lastName\" name=\"lastName\" ng-model=\"vm.registerAccount.lastName\" ng-minlength=\"2\" ng-maxlength=\"100\" required></div><div class=\"form-group\"><label class=\"control-label\" for=\"login\" data-translate=\"global.form.username\">Username</label><input type=\"text\" class=\"form-control\" id=\"login\" name=\"login\" placeholder=\"{{\\'global.form.username.placeholder\\' | translate}}\" ng-model=\"vm.registerAccount.login\" ng-minlength=\"1\" ng-maxlength=\"50\" ng-pattern=\"/^[_\\'.@A-Za-z0-9-]*$/\" required><div ng-show=\"form.login.$dirty && form.login.$invalid\"><p class=\"help-block\" ng-show=\"form.login.$error.required\" data-translate=\"register.messages.validate.login.required\">Your username is required.</p><p class=\"help-block\" ng-show=\"form.login.$error.minlength\" data-translate=\"register.messages.validate.login.minlength\">Your username is required to be at least 1 character.</p><p class=\"help-block\" ng-show=\"form.login.$error.maxlength\" data-translate=\"register.messages.validate.login.maxlength\">Your username cannot be longer than 50 characters.</p><p class=\"help-block\" ng-show=\"form.login.$error.pattern\" data-translate=\"register.messages.validate.login.pattern\">Your username can only contain letters and digits.</p></div></div><div class=\"form-group\"><label class=\"control-label\" for=\"email\" data-translate=\"global.form.email\">Email</label><input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"{{\\'global.form.email.placeholder\\' | translate}}\" ng-model=\"vm.registerAccount.email\" ng-minlength=\"5\" ng-maxlength=\"100\" required><!-- <div ng-show=\"form.email.$dirty && form.email.$invalid\">\\r\\n                        <p class=\"help-block\"\\r\\n                               ng-show=\"form.email.$error.required\" data-translate=\"global.messages.validate.email.required\">\\r\\n                            Your email is required.\\r\\n                        </p>\\r\\n                        <p class=\"help-block\"\\r\\n                               ng-show=\"form.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">\\r\\n                            Your email is invalid.\\r\\n                        </p>\\r\\n                        <p class=\"help-block\"\\r\\n                               ng-show=\"form.email.$error.minlength\" data-translate=\"global.messages.validate.email.minlength\">\\r\\n                            Your email is required to be at least 5 characters.\\r\\n                        </p>\\r\\n                        <p class=\"help-block\"\\r\\n                               ng-show=\"form.email.$error.maxlength\" data-translate=\"global.messages.validate.email.maxlength\">\\r\\n                            Your email cannot be longer than 100 characters.\\r\\n                        </p>\\r\\n                    </div> --></div><div class=\"form-group\"><label class=\"control-label\" for=\"password\" data-translate=\"global.form.newpassword\">New password</label><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"{{\\'global.form.newpassword.placeholder\\' | translate}}\" ng-model=\"vm.registerAccount.password\" ng-minlength=\"4\" ng-maxlength=\"50\" required><!-- <div ng-show=\"form.password.$dirty && form.password.$invalid\">\\r\\n                        <p class=\"help-block\"\\r\\n                               ng-show=\"form.password.$error.required\" data-translate=\"global.messages.validate.newpassword.required\">\\r\\n                            Your password is required.\\r\\n                        </p>\\r\\n                        <p class=\"help-block\"\\r\\n                               ng-show=\"form.password.$error.minlength\" data-translate=\"global.messages.validate.newpassword.minlength\">\\r\\n                            Your password is required to be at least 4 characters.\\r\\n                        </p>\\r\\n                        <p class=\"help-block\"\\r\\n                               ng-show=\"form.password.$error.maxlength\" data-translate=\"global.messages.validate.newpassword.maxlength\">\\r\\n                            Your password cannot be longer than 50 characters.\\r\\n                        </p>\\r\\n                    </div>\\r\\n                    <password-strength-bar password-to-check=\"vm.registerAccount.password\"></password-strength-bar> --></div><div class=\"form-group\"><label class=\"control-label\" for=\"confirmPassword\" data-translate=\"global.form.confirmpassword\">New password confirmation</label><input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"{{\\'global.form.confirmpassword.placeholder\\' | translate}}\" ng-model=\"vm.confirmPassword\" ng-minlength=\"4\" ng-maxlength=\"50\" required><!-- <div ng-show=\"form.confirmPassword.$dirty && form.confirmPassword.$invalid\">\\r\\n                        <p class=\"help-block\"\\r\\n                               ng-show=\"form.confirmPassword.$error.required\" data-translate=\"global.messages.validate.confirmpassword.required\">\\r\\n                            Your confirmation password is required.\\r\\n                        </p>\\r\\n                        <p class=\"help-block\"\\r\\n                               ng-show=\"form.confirmPassword.$error.minlength\" data-translate=\"global.messages.validate.confirmpassword.minlength\">\\r\\n                            Your confirmation password is required to be at least 4 characters.\\r\\n                        </p>\\r\\n                        <p class=\"help-block\"\\r\\n                               ng-show=\"form.confirmPassword.$error.maxlength\" data-translate=\"global.messages.validate.confirmpassword.maxlength\">\\r\\n                            Your confirmation password cannot be longer than 50 characters.\\r\\n                        </p>\\r\\n                    </div> --></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-flat btn-success\">\\u0110\\u0103ng k\\xFD</button></form><p></p><!-- <div class=\"alert alert-warning\" data-translate=\"global.messages.info.authenticated\" translate-compile>\\r\\n                If you want to <a class=\"alert-link\" href=\"\" ng-click=\"vm.login()\">sign in</a>, you can try the default accounts:<br/>- Administrator (login=\"admin\" and password=\"admin\") <br/>- User (login=\"user\" and password=\"user\").\\r\\n            </div> --></div></div></div>');\n$templateCache.put('app/account/settings/settings.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h2 data-translate=\"settings.title\" translate-values=\"{username: \\'{{vm.settingsAccount.login}}\\'}\">User settings for [<b>{{vm.settingsAccount.login}}</b>]</h2><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"settings.messages.success\"><strong>Settings saved!</strong></div><jhi-alert-error></jhi-alert-error><form name=\"form\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"firstName\" data-translate=\"settings.form.firstname\">First Name</label><input type=\"text\" class=\"form-control\" id=\"firstName\" name=\"firstName\" placeholder=\"{{\\'settings.form.firstname.placeholder\\' | translate}}\" ng-model=\"vm.settingsAccount.firstName\" ng-minlength=\"1\" ng-maxlength=\"50\" required maxlength=\"50\"><div ng-show=\"form.firstName.$dirty && form.firstName.$invalid\"><p class=\"help-block\" ng-show=\"form.firstName.$error.required\" data-translate=\"settings.messages.validate.firstname.required\">Your first name is required.</p><p class=\"help-block\" ng-show=\"form.firstName.$error.minlength\" data-translate=\"settings.messages.validate.firstname.minlength\">Your first name is required to be at least 1 character.</p><p class=\"help-block\" ng-show=\"form.firstName.$error.maxlength\" data-translate=\"settings.messages.validate.firstname.maxlength\">Your first name cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" for=\"lastName\" data-translate=\"settings.form.lastname\">Last Name</label><input type=\"text\" class=\"form-control\" id=\"lastName\" name=\"lastName\" placeholder=\"{{\\'settings.form.lastname.placeholder\\' | translate}}\" ng-model=\"vm.settingsAccount.lastName\" ng-minlength=\"1\" ng-maxlength=\"50\" required maxlength=\"50\"><div ng-show=\"form.lastName.$dirty && form.lastName.$invalid\"><p class=\"help-block\" ng-show=\"form.lastName.$error.required\" data-translate=\"settings.messages.validate.lastname.required\">Your last name is required.</p><p class=\"help-block\" ng-show=\"form.lastName.$error.minlength\" data-translate=\"settings.messages.validate.lastname.minlength\">Your last name is required to be at least 1 character.</p><p class=\"help-block\" ng-show=\"form.lastName.$error.maxlength\" data-translate=\"settings.messages.validate.lastname.maxlength\">Your last name cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" for=\"email\" data-translate=\"global.form.email\">Email</label><input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"{{\\'global.form.email.placeholder\\' | translate}}\" ng-model=\"vm.settingsAccount.email\" ng-minlength=\"5\" ng-maxlength=\"100\" required maxlength=\"100\"><div ng-show=\"form.email.$dirty && form.email.$invalid\"><p class=\"help-block\" ng-show=\"form.email.$error.required\" data-translate=\"global.messages.validate.email.required\">Your email is required.</p><p class=\"help-block\" ng-show=\"form.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">Your email is invalid.</p><p class=\"help-block\" ng-show=\"form.email.$error.minlength\" data-translate=\"global.messages.validate.email.minlength\">Your email is required to be at least 5 characters.</p><p class=\"help-block\" ng-show=\"form.email.$error.maxlength\" data-translate=\"global.messages.validate.email.maxlength\">Your email cannot be longer than 100 characters.</p></div></div><div class=\"form-group\"><label for=\"langKey\" data-translate=\"settings.form.language\">Language</label><select id=\"langKey\" name=\"langKey\" class=\"form-control\" ng-model=\"vm.settingsAccount.langKey\" ng-controller=\"JhiLanguageController as languageVm\" ng-options=\"code as (code | findLanguageFromKey) for code in languageVm.languages\"></select></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"settings.form.button\">Save</button></form></div></div></div>');\n$templateCache.put('app/admin/configuration/configuration.html','<div><h2 data-translate=\"configuration.title\">Configuration</h2><span data-translate=\"configuration.filter\">Filter (by prefix)</span> <input type=\"text\" ng-model=\"filter\" class=\"form-control\"><h3 ng-hide=\"filteredConfig.length === 0\">Spring configuration</h3><table class=\"table table-condensed table-striped table-bordered table-responsive\" style=\"table-layout:fixed\" ng-hide=\"filteredConfig.length === 0\"><thead><tr><th ng-click=\"predicate = \\'prefix\\'; reverse=!reverse\" class=\"col-sm-4\"><span data-translate=\"configuration.table.prefix\">Prefix</span></th><th data-translate=\"configuration.table.properties\" class=\"col-sm-8\">Properties</th></tr></thead><tr ng-repeat=\"entry in filtered = (vm.configuration | filter:filter | orderBy:predicate:reverse)\"><td><span>{{entry.prefix}}</span></td><td><div class=\"row\" ng-repeat=\"(key, value) in entry.properties\"><div class=\"col-md-4\">{{key}}</div><div class=\"col-md-8\"><span class=\"pull-right label label-success break\">{{value}}</span></div></div></td></tr></table><div ng-repeat=\"(key, value) in vm.allConfiguration\"><h4 ng-hide=\"filtered.length === 0\"><span>{{key}}</span></h4><table class=\"table table-condensed table-striped table-bordered table-responsive\" style=\"table-layout:fixed\" ng-hide=\"filtered.length === 0\"><thead><tr><th class=\"col-sm-4\">Property</th><th class=\"col-sm-8\">Value</th></tr></thead><tbody><tr ng-repeat=\"item in filtered = (value | filter:filter)\"><td class=\"break\">{{item.key}}</td><td class=\"break\"><span class=\"pull-right label label-success break\">{{item.val}}</span></td></tr></tbody></table></div></div>');\n$templateCache.put('app/admin/audits/audits.html','<div><h2 data-translate=\"audits.title\">Audits</h2><div class=\"row\"><div class=\"col-md-5\"><h4 data-translate=\"audits.filter.title\">Filter by date</h4><p class=\"input-group\"><span class=\"input-group-addon\" data-translate=\"audits.filter.from\">from</span> <input type=\"date\" class=\"input-sm form-control\" name=\"start\" ng-model=\"vm.fromDate\" ng-change=\"vm.onChangeDate()\" required> <span class=\"input-group-addon\" data-translate=\"audits.filter.to\">to</span> <input type=\"date\" class=\"input-sm form-control\" name=\"end\" ng-model=\"vm.toDate\" ng-change=\"vm.onChangeDate()\" required></p></div></div><table class=\"table table-condensed table-striped table-bordered table-responsive\"><thead><tr><th ng-click=\"predicate = \\'timestamp\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.date\">Date</span></th><th ng-click=\"predicate = \\'principal\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.principal\">User</span></th><th ng-click=\"predicate = \\'type\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.status\">State</span></th><th ng-click=\"predicate = \\'data.message\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.data\">Extra data</span></th></tr></thead><tr ng-repeat=\"audit in vm.audits | filter:filter | orderBy:predicate:reverse\" ng-hide=\"audit.filtered\"><td><span>{{audit.timestamp| date:\\'medium\\'}}</span></td><td><small>{{audit.principal}}</small></td><td>{{audit.type}}</td><td><span ng-show=\"audit.data.message\">{{audit.data.message}}</span> <span ng-show=\"audit.data.remoteAddress\"><span data-translate=\"audits.table.data.remoteAddress\">Remote Address</span> {{audit.data.remoteAddress}}</span></td></tr></table><div class=\"text-center\"><uib-pagination class=\"pagination-sm\" total-items=\"vm.totalItems\" ng-model=\"vm.page\" ng-change=\"vm.loadPage(vm.page)\"></uib-pagination></div></div>');\n$templateCache.put('app/admin/docs/docs.html','<iframe src=\"swagger-ui/index.html\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\" width=\"100%\" height=\"900\" scrolling=\"auto\" target=\"_top\" title=\"Swagger UI\"></iframe>');\n$templateCache.put('app/admin/health/health.html','<div><h2 data-translate=\"health.title\">Health Checks</h2><p><button type=\"button\" class=\"btn btn-primary\" ng-click=\"vm.refresh()\"><span class=\"glyphicon glyphicon-refresh\"></span>&nbsp;<span data-translate=\"health.refresh.button\">Refresh</span></button></p><table id=\"healthCheck\" class=\"table table-striped\"><thead><tr><th class=\"col-md-7\" data-translate=\"health.table.service\">Service Name</th><th class=\"col-md-2 text-center\" data-translate=\"health.table.status\">Status</th><th class=\"col-md-2 text-center\" data-translate=\"health.details.details\">Details</th></tr></thead><tbody><tr ng-repeat=\"health in vm.healthData\"><td>{{\\'health.indicator.\\' + vm.baseName(health.name) | translate}} {{vm.subSystemName(health.name)}}</td><td class=\"text-center\"><span class=\"label\" ng-class=\"vm.getLabelClass(health.status)\">{{\\'health.status.\\' + health.status | translate}}</span></td><td class=\"text-center\"><a class=\"hand\" ng-click=\"vm.showHealth(health)\" ng-show=\"health.details || health.error\"><i class=\"glyphicon glyphicon-eye-open\"></i></a></td></tr></tbody></table></div>');\n$templateCache.put('app/admin/health/health.modal.html','<div class=\"modal-header\"><button aria-label=\"Close\" data-dismiss=\"modal\" class=\"close\" type=\"button\" ng-click=\"vm.cancel()\"><span aria-hidden=\"true\">&times;</span></button><h4 class=\"modal-title\" id=\"showHealthLabel\">{{\\'health.indicator.\\' + vm.baseName(vm.currentHealth.name) | translate}} {{vm.subSystemName(vm.currentHealth.name)}}</h4></div><div class=\"modal-body pad\"><div ng-show=\"vm.currentHealth.details\"><h4 data-translate=\"health.details.properties\">Properties</h4><table class=\"table table-striped\"><thead><tr><th class=\"col-md-6 text-left\" data-translate=\"health.details.name\">Name</th><th class=\"col-md-6 text-left\" data-translate=\"health.details.value\">Value</th></tr></thead><tbody><tr ng-repeat=\"(k,v) in vm.currentHealth.details\"><td class=\"col-md-6 text-left\">{{k}}</td><td class=\"col-md-6 text-left\">{{v}}</td></tr></tbody></table></div><div ng-show=\"vm.currentHealth.error\"><h4 data-translate=\"health.details.error\">Error</h4><pre>{{vm.currentHealth.error}}</pre></div></div><div class=\"modal-footer\"><button data-dismiss=\"modal\" class=\"btn btn-default pull-left\" type=\"button\" ng-click=\"vm.cancel()\">Done</button></div>');\n$templateCache.put('app/admin/logs/logs.html','<div class=\"table-responsive\"><h2 data-translate=\"logs.title\">Logs</h2><p data-translate=\"logs.nbloggers\" translate-values=\"{total: \\'{{ vm.loggers.length }}\\'}\">There are {{ vm.loggers.length }} loggers.</p><span data-translate=\"logs.filter\">Filter</span> <input type=\"text\" ng-model=\"filter\" class=\"form-control\"><table class=\"table table-condensed table-striped table-bordered\"><thead><tr title=\"click to order\"><th ng-click=\"predicate = \\'name\\'; reverse=!reverse\"><span data-translate=\"logs.table.name\">Name</span></th><th ng-click=\"predicate = \\'level\\'; reverse=!reverse\"><span data-translate=\"logs.table.level\">Level</span></th></tr></thead><tr ng-repeat=\"logger in vm.loggers | filter:filter | orderBy:predicate:reverse\"><td><small>{{logger.name | characters:140}}</small></td><td><button ng-click=\"vm.changeLevel(logger.name, \\'TRACE\\')\" ng-class=\"(logger.level==\\'TRACE\\') ? \\'btn-danger\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">TRACE</button> <button ng-click=\"vm.changeLevel(logger.name, \\'DEBUG\\')\" ng-class=\"(logger.level==\\'DEBUG\\') ? \\'btn-warning\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">DEBUG</button> <button ng-click=\"vm.changeLevel(logger.name, \\'INFO\\')\" ng-class=\"(logger.level==\\'INFO\\') ? \\'btn-info\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">INFO</button> <button ng-click=\"vm.changeLevel(logger.name, \\'WARN\\')\" ng-class=\"(logger.level==\\'WARN\\') ? \\'btn-success\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">WARN</button> <button ng-click=\"vm.changeLevel(logger.name, \\'ERROR\\')\" ng-class=\"(logger.level==\\'ERROR\\') ? \\'btn-primary\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">ERROR</button></td></tr></table></div>');\n$templateCache.put('app/admin/metrics/metrics.html','<div><h2 data-translate=\"metrics.title\">Application Metrics</h2><p><button type=\"button\" class=\"btn btn-primary\" ng-click=\"vm.refresh()\"><span class=\"glyphicon glyphicon-refresh\"></span>&nbsp;<span data-translate=\"metrics.refresh.button\">Refresh</span></button></p><h3 data-translate=\"metrics.jvm.title\">JVM Metrics</h3><div class=\"row\" ng-hide=\"vm.updatingMetrics\"><div class=\"col-md-4\"><b data-translate=\"metrics.jvm.memory.title\">Memory</b><p><span data-translate=\"metrics.jvm.memory.total\">Total Memory</span> ({{vm.metrics.gauges[\\'jvm.memory.total.used\\'].value / 1000000 | number:0}}M / {{vm.metrics.gauges[\\'jvm.memory.total.max\\'].value / 1000000 | number:0}}M)</p><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'jvm.memory.total.max\\'].value\" value=\"vm.metrics.gauges[\\'jvm.memory.total.used\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.memory.total.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.total.max\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.memory.heap\">Heap Memory</span> ({{vm.metrics.gauges[\\'jvm.memory.heap.used\\'].value / 1000000 | number:0}}M / {{vm.metrics.gauges[\\'jvm.memory.heap.max\\'].value / 1000000 | number:0}}M)</p><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'jvm.memory.heap.max\\'].value\" value=\"vm.metrics.gauges[\\'jvm.memory.heap.used\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.memory.heap.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.heap.max\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.memory.nonheap\">Non-Heap Memory</span> ({{vm.metrics.gauges[\\'jvm.memory.non-heap.used\\'].value / 1000000 | number:0}}M / {{vm.metrics.gauges[\\'jvm.memory.non-heap.committed\\'].value / 1000000 | number:0}}M)</p><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'jvm.memory.non-heap.committed\\'].value\" value=\"vm.metrics.gauges[\\'jvm.memory.non-heap.used\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.memory.non-heap.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.non-heap.committed\\'].value | number:0}}%</span></uib-progressbar></div><div class=\"col-md-4\"><b data-translate=\"metrics.jvm.threads.title\">Threads</b> (Total: {{vm.metrics.gauges[\\'jvm.threads.count\\'].value}}) <a class=\"hand\" ng-click=\"vm.refreshThreadDumpData()\" data-toggle=\"modal\" data-target=\"#threadDump\"><i class=\"glyphicon glyphicon-eye-open\"></i></a><p><span data-translate=\"metrics.jvm.threads.runnable\">Runnable</span> {{vm.metrics.gauges[\\'jvm.threads.runnable.count\\'].value}}</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.runnable.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.threads.runnable.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.threads.timedwaiting\">Timed Waiting</span> ({{vm.metrics.gauges[\\'jvm.threads.timed_waiting.count\\'].value}})</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.timed_waiting.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"warning\"><span>{{vm.metrics.gauges[\\'jvm.threads.timed_waiting.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.threads.waiting\">Waiting</span> ({{vm.metrics.gauges[\\'jvm.threads.waiting.count\\'].value}})</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.waiting.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"warning\"><span>{{vm.metrics.gauges[\\'jvm.threads.waiting.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.threads.blocked\">Blocked</span> ({{vm.metrics.gauges[\\'jvm.threads.blocked.count\\'].value}})</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.blocked.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.threads.blocked.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar></div><div class=\"col-md-4\"><b data-translate=\"metrics.jvm.gc.title\">Garbage collections</b><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.marksweepcount\">Mark Sweep count</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-MarkSweep.count\\'].value}}</div></div><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.marksweeptime\">Mark Sweep time</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-MarkSweep.time\\'].value}}ms</div></div><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.scavengecount\">Scavenge count</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-Scavenge.count\\'].value}}</div></div><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.scavengetime\">Scavenge time</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-Scavenge.time\\'].value}}ms</div></div></div></div><div class=\"well well-lg\" ng-show=\"vm.updatingMetrics\" data-translate=\"metrics.updating\">Updating...</div><h3 data-translate=\"metrics.jvm.http.title\">HTTP requests (events per second)</h3><p><span data-translate=\"metrics.jvm.http.active\">Active requests</span> <b>{{vm.metrics.counters[\\'com.codahale.metrics.servlet.InstrumentedFilter.activeRequests\\'].count | number:0}}</b> - <span data-translate=\"metrics.jvm.http.total\">Total requests</span> <b>{{vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count | number:0}}</b></p><div class=\"table-responsive\"><table class=\"table table-striped\"><thead><tr><th data-translate=\"metrics.jvm.http.table.code\">Code</th><th data-translate=\"metrics.jvm.http.table.count\">Count</th><th class=\"text-right\" data-translate=\"metrics.jvm.http.table.mean\">Mean</th><th class=\"text-right\"><span data-translate=\"metrics.jvm.http.table.average\">Average</span> (1 min)</th><th class=\"text-right\"><span data-translate=\"metrics.jvm.http.table.average\">Average</span> (5 min)</th><th class=\"text-right\"><span data-translate=\"metrics.jvm.http.table.average\">Average</span> (15 min)</th></tr></thead><tbody><tr><td data-translate=\"metrics.jvm.http.code.ok\">OK</td><td><uib-progressbar min=\"0\" max=\"vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count\" value=\"vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].count\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].count}}</span></uib-progressbar></td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].mean_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].m1_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].m5_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].m15_rate | number:2}}</td></tr><tr><td data-translate=\"metrics.jvm.http.code.notfound\">Not Found</td><td><uib-progressbar min=\"0\" max=\"vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count\" value=\"vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].count\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].count}}</span></uib-progressbar></td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].mean_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].m1_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].m5_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].m15_rate | number:2}}</td></tr><tr><td data-translate=\"metrics.jvm.http.code.servererror\">Server error</td><td><uib-progressbar min=\"0\" max=\"vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count\" value=\"vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].count\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].count}}</span></uib-progressbar></td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].mean_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].m1_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].m5_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].m15_rate | number:2}}</td></tr></tbody></table></div><h3 data-translate=\"metrics.servicesstats.title\">Services statistics (time in millisecond)</h3><div class=\"table-responsive\"><table class=\"table table-striped\"><thead><tr><th data-translate=\"metrics.servicesstats.table.name\">Service name</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.count\">Count</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.mean\">Mean</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.min\">Min</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p50\">p50</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p75\">p75</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p95\">p95</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p99\">p99</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.max\">Max</th></tr></thead><tbody><tr ng-repeat=\"(k, v) in vm.servicesStats\"><td>{{k}}</td><td class=\"text-right\">{{v.count}}</td><td class=\"text-right\">{{v.mean * 1000 | number:0}}</td><td class=\"text-right\">{{v.min * 1000 | number:0}}</td><td class=\"text-right\">{{v.p50 * 1000 | number:0}}</td><td class=\"text-right\">{{v.p75 * 1000 | number:0}}</td><td class=\"text-right\">{{v.p95 * 1000 | number:0}}</td><td class=\"text-right\">{{v.p99 * 1000 | number:0}}</td><td class=\"text-right\">{{v.max * 1000 | number:0}}</td></tr></tbody></table></div><h3 data-translate=\"metrics.datasource.title\" ng-show=\"vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value > 0\">DataSource statistics (time in millisecond)</h3><div class=\"table-responsive\" ng-show=\"vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value > 0\"><table class=\"table table-striped\"><thead><tr><th><span data-translate=\"metrics.datasource.usage\">Usage</span> ({{vm.metrics.gauges[\\'HikariPool-1.pool.ActiveConnections\\'].value}} / {{vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value}})</th><th class=\"text-right\" data-translate=\"metrics.datasource.count\">Count</th><th class=\"text-right\" data-translate=\"metrics.datasource.mean\">Mean</th><th class=\"text-right\" data-translate=\"metrics.datasource.min\">Min</th><th class=\"text-right\" data-translate=\"metrics.datasource.p50\">p50</th><th class=\"text-right\" data-translate=\"metrics.datasource.p75\">p75</th><th class=\"text-right\" data-translate=\"metrics.datasource.p95\">p95</th><th class=\"text-right\" data-translate=\"metrics.datasource.p99\">p99</th><th class=\"text-right\" data-translate=\"metrics.datasource.max\">Max</th></tr></thead><tbody><tr><td><div class=\"progress progress-striped\"><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value\" value=\"vm.metrics.gauges[\\'HikariPool-1.pool.ActiveConnections\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'HikariPool-1.pool.ActiveConnections\\'].value * 100 / vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value | number:0}}%</span></uib-progressbar></div></td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].count}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].mean | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].min | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p50 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p75 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p95 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p99 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].max | number:2}}</td></tr></tbody></table></div></div>');\n$templateCache.put('app/admin/metrics/metrics.modal.html','<!-- Modal used to display the threads dump --><div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"vm.cancel()\">&times;</button><h4 class=\"modal-title\" data-translate=\"metrics.jvm.threads.dump.title\">Threads dump</h4></div><div class=\"modal-body pad\"><span class=\"label label-primary\" ng-click=\"threadDumpFilter = {}\">All&nbsp;<span class=\"badge\">{{vm.threadDumpAll}}</span></span>&nbsp; <span class=\"label label-success\" ng-click=\"threadDumpFilter = {threadState: \\'RUNNABLE\\'}\">Runnable&nbsp;<span class=\"badge\">{{vm.threadDumpRunnable}}</span></span>&nbsp; <span class=\"label label-info\" ng-click=\"threadDumpFilter = {threadState: \\'WAITING\\'}\">Waiting&nbsp;<span class=\"badge\">{{vm.threadDumpWaiting}}</span></span>&nbsp; <span class=\"label label-warning\" ng-click=\"threadDumpFilter = {threadState: \\'TIMED_WAITING\\'}\">Timed Waiting&nbsp;<span class=\"badge\">{{vm.threadDumpTimedWaiting}}</span></span>&nbsp; <span class=\"label label-danger\" ng-click=\"threadDumpFilter = {threadState: \\'BLOCKED\\'}\">Blocked&nbsp;<span class=\"badge\">{{vm.threadDumpBlocked}}</span></span>&nbsp;<div class=\"voffset2\">&nbsp;</div>Filter <input type=\"text\" ng-model=\"threadDumpFilter\" class=\"form-control\"><div class=\"row pad\" ng-repeat=\"(k, v) in vm.threadDump | filter:threadDumpFilter\"><h5><span class=\"label\" ng-class=\"vm.getLabelClass(v.threadState)\">{{v.threadState}}</span>&nbsp;{{v.threadName}} (ID {{v.threadId}}) <a ng-click=\"show = !show\"><span ng-show=\"!show\" data-translate=\"metrics.jvm.threads.dump.show\">Show StackTrace</span> <span ng-show=\"show\" data-translate=\"metrics.jvm.threads.dump.hide\">Hide StackTrace</span></a></h5><div class=\"well\" ng-show=\"show\"><div ng-repeat=\"(stK, stV) in v.stackTrace\">{{stV.className}}.{{stV.methodName}}({{stV.fileName}}:{{stV.lineNumber}}) <span class=\"voffset1\"></span></div></div><table class=\"table table-condensed\"><thead><tr><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.blockedtime\">Blocked Time</th><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.blockedcount\">Blocked Count</th><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.waitedtime\">Waited Time</th><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.waitedcount\">Waited Count</th><th data-translate=\"metrics.jvm.threads.dump.lockname\">Lock Name</th></tr></thead><tbody><tr><td>{{v.blockedTime}}</td><td>{{v.blockedCount}}</td><td>{{v.waitedTime}}</td><td>{{v.waitedCount}}</td><td>{{v.lockName}}</td></tr></tbody></table></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default pull-left\" data-dismiss=\"modal\" ng-click=\"vm.cancel()\">Done</button></div>');\n$templateCache.put('app/admin/user-management/user-management-delete-dialog.html','<form name=\"deleteForm\" ng-submit=\"vm.confirmDelete(vm.user.login)\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" data-translate=\"entity.delete.title\">Confirm delete operation</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><p data-translate=\"userManagement.delete.question\" translate-values=\"{login: \\'{{vm.user.login}}\\'}\">Are you sure you want to delete this User?</p></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" class=\"btn btn-danger\"><span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span data-translate=\"entity.action.delete\">Delete</span></button></div></form>');\n$templateCache.put('app/admin/user-management/user-management-detail.html','<div><h2><span data-translate=\"userManagement.detail.title\">User</span> [<b>{{vm.user.login}}</b>]</h2><dl class=\"dl-horizontal jh-entity-details\"><dt><span data-translate=\"userManagement.login\">Login</span></dt><dd><span>{{vm.user.login}}</span> <span class=\"label label-danger\" ng-show=\"!vm.user.activated\" data-translate=\"userManagement.deactivated\">Deactivated</span> <span class=\"label label-success\" ng-show=\"vm.user.activated\" data-translate=\"userManagement.activated\">Activated</span></dd><dt><span data-translate=\"userManagement.firstName\">First Name</span></dt><dd>{{vm.user.firstName}}</dd><dt><span data-translate=\"userManagement.lastName\">Last Name</span></dt><dd>{{vm.user.lastName}}</dd><dt><span data-translate=\"userManagement.email\">Email</span></dt><dd>{{vm.user.email}}</dd><dt><span data-translate=\"userManagement.langKey\">Lang Key</span></dt><dd>{{vm.user.langKey}}</dd><dt><span data-translate=\"userManagement.createdBy\">Created By</span></dt><dd>{{vm.user.createdBy}}</dd><dt><span data-translate=\"userManagement.createdDate\">Created Date</span></dt><dd>{{vm.user.createdDate | date:\\'dd/MM/yy HH:mm\\' }}</dd><dt><span data-translate=\"userManagement.lastModifiedBy\">Last Modified By</span></dt><dd>{{vm.user.lastModifiedBy}}</dd><dt><span data-translate=\"userManagement.lastModifiedDate\">Last Modified Date</span></dt><dd>{{vm.user.lastModifiedDate | date:\\'dd/MM/yy HH:mm\\'}}</dd><dt><span data-translate=\"userManagement.profiles\">Profiles</span></dt><dd><ul class=\"list-unstyled\"><li ng-repeat=\"authority in vm.user.authorities\"><span class=\"label label-info\">{{authority}}</span></li></ul></dd></dl><button type=\"submit\" ui-sref=\"user-management\" class=\"btn btn-info\"><span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span data-translate=\"entity.action.back\"> Back</span></button></div>');\n$templateCache.put('app/admin/user-management/user-management-dialog.html','<form name=\"editForm\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" id=\"myUserLabel\" data-translate=\"userManagement.home.createOrEditLabel\">Create or edit a User</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><div class=\"form-group\" ng-show=\"vm.user.id\"><label data-translate=\"global.field.id\">ID</label><input type=\"text\" class=\"form-control\" name=\"id\" ng-model=\"vm.user.id\" readonly=\"readonly\"></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"userManagement.login\">Login</label><input type=\"text\" class=\"form-control\" name=\"login\" ng-model=\"vm.user.login\" required ng-minlength=\"1\" ng-maxlength=\"50\" ng-pattern=\"/^[_\\'.@A-Za-z0-9-]*$/\"><div ng-show=\"editForm.login.$invalid\"><p class=\"help-block\" ng-show=\"editForm.login.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p><p class=\"help-block\" ng-show=\"editForm.login.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"50\">This field cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"userManagement.firstName\">First Name</label><input type=\"text\" class=\"form-control\" name=\"firstName\" ng-model=\"vm.user.firstName\" ng-maxlength=\"50\"><div ng-show=\"editForm.firstName.$invalid\"><p class=\"help-block\" ng-show=\"editForm.firstName.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"50\">This field cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label data-translate=\"userManagement.lastName\">Last Name</label><input type=\"text\" class=\"form-control\" name=\"lastName\" ng-model=\"vm.user.lastName\" ng-maxlength=\"50\"><div ng-show=\"editForm.lastName.$invalid\"><p class=\"help-block\" ng-show=\"editForm.lastName.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"50\">This field cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"userManagement.email\">Email</label><input type=\"email\" class=\"form-control\" name=\"email\" ng-model=\"vm.user.email\" required ng-maxlength=\"100\"><div ng-show=\"editForm.email.$invalid\"><p class=\"help-block\" ng-show=\"editForm.email.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p><p class=\"help-block\" ng-show=\"editForm.email.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"100\">This field cannot be longer than 100 characters.</p><p class=\"help-block\" ng-show=\"editForm.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">Your email is invalid.</p></div></div><div class=\"form-group\"><label for=\"activated\"><input ng-disabled=\"vm.user.id === null\" type=\"checkbox\" id=\"activated\" name=\"activated\" ng-model=\"vm.user.activated\"> <span data-translate=\"userManagement.activated\">Activated</span></label></div><div class=\"form-group\"><label data-translate=\"userManagement.langKey\">Lang Key</label><select class=\"form-control\" name=\"langKey\" ng-model=\"vm.user.langKey\" ng-options=\"language as language for language in vm.languages track by language\"></select></div><div class=\"form-group\"><label data-translate=\"userManagement.profiles\">Profiles</label><select class=\"form-control\" multiple=\"multiple\" name=\"authority\" ng-model=\"vm.user.authorities\" ng-options=\"authority for authority in vm.authorities\"></select></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"editForm.$invalid || vm.isSaving\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span data-translate=\"entity.action.save\">Save</span></button></div></form>');\n$templateCache.put('app/admin/user-management/user-management.html','<div><h2 data-translate=\"userManagement.home.title\">Users</h2><jhi-alert></jhi-alert><div class=\"row\"><div class=\"col-md-4\"><button class=\"btn btn-primary\" ui-sref=\"user-management.new\"><span class=\"glyphicon glyphicon-flash\"></span> <span data-translate=\"userManagement.home.createLabel\">Create a new User</span></button></div></div><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr jh-sort=\"vm.predicate\" ascending=\"vm.reverse\" callback=\"vm.transition()\"><th jh-sort-by=\"id\"><span data-translate=\"global.field.id\">ID</span><span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"login\"><span data-translate=\"userManagement.login\">Login</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"email\"><span data-translate=\"userManagement.email\">Email</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th></th><th jh-sort-by=\"langKey\"><span data-translate=\"userManagement.langKey\">Lang Key</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th><span data-translate=\"userManagement.profiles\">Profiles</span></th><th jh-sort-by=\"createdDate\"><span data-translate=\"userManagement.createdDate\">Created Date</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"lastModifiedBy\"><span data-translate=\"userManagement.lastModifiedBy\">Last Modified By</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"lastModifiedDate\"><span data-translate=\"userManagement.lastModifiedDate\">Last Modified Date</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th></th></tr></thead><tbody><tr ng-repeat=\"user in vm.users track by user.id\"><td><a ui-sref=\"user-management-detail({login:user.login})\">{{user.id}}</a></td><td>{{user.login}}</td><td>{{user.email}}</td><td><button class=\"btn btn-danger btn-xs\" ng-click=\"vm.setActive(user, true)\" ng-show=\"!user.activated\" data-translate=\"userManagement.deactivated\">Deactivated</button> <button class=\"btn btn-success btn-xs\" ng-click=\"vm.setActive(user, false)\" ng-show=\"user.activated\" ng-disabled=\"vm.currentAccount.login === user.login\" data-translate=\"userManagement.activated\">Activated</button></td><td>{{user.langKey}}</td><td><div ng-repeat=\"authority in user.authorities\"><span class=\"label label-info\">{{ authority }}</span></div></td><td>{{user.createdDate | date:\\'dd/MM/yy HH:mm\\'}}</td><td>{{user.lastModifiedBy}}</td><td>{{user.lastModifiedDate | date:\\'dd/MM/yy HH:mm\\'}}</td><td class=\"text-right\"><div class=\"btn-group flex-btn-group-container\"><button type=\"submit\" ui-sref=\"user-management-detail({login:user.login})\" class=\"btn btn-info btn-sm\"><span class=\"glyphicon glyphicon-eye-open\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.view\"></span></button> <button type=\"submit\" ui-sref=\"user-management.edit({login:user.login})\" class=\"btn btn-primary btn-sm\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\"></span></button> <button type=\"submit\" ui-sref=\"user-management.delete({login:user.login})\" class=\"btn btn-danger btn-sm\" ng-disabled=\"vm.currentAccount.login === user.login\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.delete\"></span></button></div></td></tr></tbody></table></div><div class=\"text-center\"><jhi-item-count page=\"vm.page\" total=\"vm.queryCount\" items-per-page=\"vm.itemsPerPage\"></jhi-item-count><uib-pagination class=\"pagination-sm\" total-items=\"vm.totalItems\" items-per-page=\"vm.itemsPerPage\" ng-model=\"vm.page\" ng-change=\"vm.transition()\"></uib-pagination></div></div>');\n$templateCache.put('app/components/login/login.html','<!-- <div class=\"modal-header\">\\r\\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\\r\\n            ng-click=\"vm.cancel()\">&times;</button>\\r\\n    <h4 class=\"modal-title\">\\u0110\\u0103ng nh\\u1EADp</h4>\\r\\n</div> --><div class=\"modal-body\"><div class=\"row\"><div class=\"col-md-6 col-md-offset-6\"><h1>\\u0110\\u0103ng nh\\u1EADp</h1></div><div class=\"col-md-8 col-md-offset-2\"><div class=\"alert alert-danger\" ng-show=\"vm.authenticationError\" data-translate=\"login.messages.error.authentication\"><strong>Failed to sign in!</strong> Please check your credentials and try again.</div></div><div class=\"col-md-8 col-md-offset-2\"><form class=\"form\" role=\"form\" ng-submit=\"vm.login($event)\"><div class=\"form-group\"><label for=\"username\" data-translate=\"global.form.username\">Login</label><input type=\"text\" class=\"form-control\" id=\"username\" placeholder=\"{{\\'global.form.username.placeholder\\' | translate}}\" ng-model=\"vm.username\"></div><div class=\"form-group\"><label for=\"password\" data-translate=\"login.form.password\">Password</label><input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"{{\\'login.form.password.placeholder\\' | translate}}\" ng-model=\"vm.password\"></div><div class=\"form-group\"><label for=\"rememberMe\"><input type=\"checkbox\" id=\"rememberMe\" ng-model=\"vm.rememberMe\" checked=\"checked\"> <span>Nh\\u1EDB t\\xE0i kho\\u1EA3n</span></label></div><button type=\"submit\" class=\"btn btn-flat btn-success\">\\u0110\\u0103ng nh\\u1EADp</button></form><p></p></div></div></div>');\n$templateCache.put('app/entities/legislation/legislation.detail.html','<div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.cancel()\">&times;</button><h4 class=\"modal-title\">Legislation Detail</h4></div><div class=\"modal-body\"><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group\"><label for=\"category\" class=\"col-sm-4 control-label\">Category</label><div class=\"col-sm-8 input-group\"><input type=\"text\" class=\"form-control\" id=\"category\" name=\"category\" ng-model=\"vm.legislation.CategoryCode\" disabled=\"disabled\"></div></div><div class=\"form-group\"><label for=\"title\" class=\"col-sm-4 control-label\">Title</label><div class=\"col-sm-8 input-group\"><input type=\"text\" class=\"form-control\" id=\"title\" name=\"title\" ng-model=\"vm.legislation.Title\" disabled=\"disabled\"></div></div><!-- \\r\\n            <div class=\"form-group\">\\r\\n                <label for=\"partner_code\" class=\"col-sm-4 control-label\">Partner</label>\\r\\n                <div class=\"col-sm-8 input-group\">\\r\\n                    <input type=\"text\" class=\"form-control\" id=\"partner_code\" name=\"partner_code\"\\r\\n                        ng-model=\"vm.legislation.partner_code\">\\r\\n                </div>\\r\\n            </div> --><div class=\"form-group\"><label for=\"implementing_authority\" class=\"col-sm-4 control-label\">Implementing Authority</label><div class=\"col-sm-8 input-group\"><input type=\"text\" class=\"form-control\" id=\"implementing_authority\" name=\"implementing_authority\" ng-model=\"vm.legislation.ImplementingAuthority\" disabled=\"disabled\"></div></div><div class=\"form-group\"><label for=\"description\" class=\"col-sm-4 control-label\">Description</label><div class=\"col-sm-8 input-group\"><textarea name=\"description\" id=\"description\" cols=\"36\" rows=\"5\" ng-model=\"vm.legislation.Description\" disabled=\"disabled\"></textarea></div></div></div><div class=\"col-md-6\"><div class=\"form-group\"><label for=\"start_date\" class=\"col-sm-4 control-label\">Start Date</label><div class=\"input-group\"><input type=\"text\" class=\"form-control\" uib-datepicker-popup ng-model=\"vm.legislation.StartDate\" is-open=\"vm.datepickerOpened1\" datepicker-options=\"dateOptions\" close-text=\"Close\" disabled=\"disabled\"> <span class=\"input-group-btn\"><button type=\"button\" class=\"btn btn-flat btn-success\" ng-click=\"vm.datepickerOpen(1)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div></div><div class=\"form-group\"><label for=\"start_date\" class=\"col-sm-4 control-label\">End Date</label><div class=\"input-group\"><input type=\"text\" class=\"form-control\" uib-datepicker-popup ng-model=\"vm.legislation.EndDate\" is-open=\"vm.datepickerOpened2\" datepicker-options=\"dateOptions\" close-text=\"Close\" disabled=\"disabled\"> <span class=\"input-group-btn\"><button type=\"button\" class=\"btn btn-flat btn-success\" ng-click=\"vm.datepickerOpen(2)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div></div><div class=\"form-group\"><label for=\"reporter\" class=\"col-sm-4 control-label\">Reporter</label><div class=\"col-sm-8 input-group\"><input type=\"text\" class=\"form-control\" id=\"reporter\" name=\"reporter\" ng-model=\"vm.legislation.Reporter\" disabled=\"disabled\"></div></div><div class=\"form-group\"><label for=\"agency\" class=\"col-sm-4 control-label\">Agency</label><div class=\"col-sm-8 input-group\"><input type=\"text\" class=\"form-control\" id=\"agency\" name=\"agency\" ng-model=\"vm.legislation.Agency\" disabled=\"disabled\"></div></div><div class=\"form-group\"><label for=\"summary\" class=\"col-sm-4 control-label\">Summary</label><div class=\"col-sm-8 input-group\"><textarea name=\"summary\" id=\"summary\" cols=\"36\" rows=\"5\" ng-model=\"vm.legislation.Summary\" disabled=\"disabled\"></textarea></div></div></div></div></div>');\n$templateCache.put('app/entities/legislation/legislation.html','<div ng-cloak><div class=\"row\"><div class=\"col-md-6\"><!-- <div class=\"form-group\">\\r\\n                    <label for=\"industry\" class=\"col-sm-4 control-label\">Industry</label>\\r\\n                    <div class=\"col-sm-8 input-group\">\\r\\n                        <input type=\"text\" class=\"form-control\" name=\"industry\" ng-model=\"vm.dataSearch.industry_name\"\\r\\n                            uib-typeahead=\"item.Name as (item.Code +\\' - \\'+ item.Name) for item in vm.loadSuggestIndustry($viewValue)\"\\r\\n                            typeahead-on-select=\"vm.selestSuggestIndustry($item, $model, $label, $event)\" />\\r\\n                    </div>\\r\\n                </div> --><div class=\"form-group\"><label for=\"name\" class=\"col-sm-4 control-label\">N\\u01B0\\u1EDBc nh\\u1EADp kh\\u1EA9u</label><div class=\"col-sm-8 input-group\"><input type=\"text\" class=\"form-control\" name=\"category_code\" ng-model=\"vm.dataSearch.reporter\" uib-typeahead=\"item.Name as (item.Code +\\' - \\'+ item.Name) for item in vm.loadSuggestrReporter($viewValue)\" typeahead-on-select=\"vm.selestSuggestReporter($item, $model, $label, $event)\"></div></div><div class=\"form-group\"><label for=\"name\" class=\"col-sm-4 control-label\">Lo\\u1EA1i h\\xE0ng h\\xF3a</label><div class=\"col-sm-8 input-group\"><input type=\"text\" class=\"form-control\" name=\"category_code\" ng-model=\"vm.dataSearch.product\" uib-typeahead=\"item.Name as (item.Code +\\' - \\'+ item.Name) for item in vm.loadSuggestProduct($viewValue)\" typeahead-on-select=\"vm.selestSuggestProduct($item, $model, $label, $event)\"></div></div><div class=\"form-group\"><label for=\"name\" class=\"col-sm-4 control-label\"></label><button class=\"btn btn-flat btn-success\" ng-click=\"vm.search()\"><i class=\"fa fa-search\"></i> <span style=\"text-transform: uppercase\">t\\xECm ki\\u1EBFm</span></button></div></div></div><div class=\"box box-success\" ng-show=\"vm.isSearch\"><div class=\"row\"><div class=\"col-md-12\"><h4>C\\xE1c y\\xEAu c\\u1EA7u \\xE1p d\\u1EE5ng \\u0111\\u1ED1i v\\u1EDBi h\\xE0ng h\\xF3a {{vm.dataSearch.product}} xu\\u1EA5t kh\\u1EA9u t\\u1EEB Vi\\u1EC7t Nam v\\xE0o {{vm.dataSearch.reporter}}</h4><h3>A - C\\xE1c v\\u0103n b\\u1EA3n ph\\xE1p lu\\u1EADt</h3><table id=\"dataTable\" class=\"table table-hover dataTable\"><thead><tr><th>M\\xE3</th><th>T\\xEAn v\\u0103n b\\u1EA3n</th><!-- <th>T\\xEAn nguy\\xEAn g\\u1ED1c</th> --><th>T\\xF3m t\\u1EAFt</th><th style=\"width: 100px\">Ng\\xE0y b\\u1EAFt \\u0111\\u1EA7u</th><th style=\"width: 100px\">Ng\\xE0y k\\u1EBFt th\\xFAc</th><!-- <th>Ng\\xE0y thu nh\\u1EADp th\\xF4ng tin</th> --><th>C\\u01A1 quan th\\u1EF1c thi</th><th>T\\u1ED5 ch\\u1EE9c thu th\\u1EADp</th><th></th></tr></thead><tbody><tr ng-repeat=\"item in vm.lstLegislation track by $index\"><td>{{item.ID}}</td><td>{{item.Title | characters:50}}</td><!-- <td>{{item.type}}</td> --><td>{{item.Summary | characters:50}}</td><td>{{item.StartDate | date:\\'yyyy-MM-dd\\'}}</td><td>{{item.EndDate | date:\\'yyyy-MM-dd\\'}}</td><td>{{item.ImplementingAuthority | characters:50 }}</td><td>{{item.Agency}}</td><td><button class=\"btn btn-flat btn-success btn-view\" ng-click=\"vm.detail(item)\"><span>Detail</span></button></td></tr></tbody></table></div><div class=\"col-md-12\"><p>T\\u1ED5ng s\\u1ED1 v\\u0103n b\\u1EA3n ph\\xE1p lu\\u1EADt \\xE1p d\\u1EE5ng: {{vm.totalLegislationU}}</p><ul uib-pagination total-items=\"vm.totalLegislation\" ng-model=\"vm.pageLegislation\" max-size=\"5\" class=\"pagination-sm\" ng-change=\"vm.getLegislation()\" items-per-page=\"12\" boundary-links=\"true\" rotate=\"true\"></ul></div></div></div><div class=\"box box-success\" ng-show=\"vm.isSearch\"><div class=\"row\"><div class=\"col-md-12\"><h3>B - C\\xE1c bi\\u1EC7n ph\\xE1p c\\u1EE5 th\\u1EC3</h3><table id=\"dataTable\" class=\"table table-hover dataTable\"><thead><tr><th>M\\xE3 n\\u01B0\\u1EDBc NK</th><th>N\\u01B0\\u1EDBc nh\\u1EADp kh\\u1EA9u</th><th>M\\xE3 n\\u01B0\\u1EDBc XK</th><th>N\\u01B0\\u1EDBc xu\\u1EA5t kh\\u1EA9u</th><th>Comment</th><th>M\\xE3 h\\xE0ng</th><th>Product Comment</th><th>HS Revision</th><th>NTM Code</th><th>NTM Revision</th><th>NTM Comment</th></tr></thead><tbody><tr ng-repeat=\"item in vm.lstMeansuer track by $index\"><td>{{item.ReporterCode}}</td><td>{{item.Reporter}}</td><td>{{item.Partner}}</td><td>{{item.PartnerCode}}</td><td>{{item.PartnerComment}}</td><td>{{item.ProductCode}}</td><td>{{item.PartnerComment}}</td><td>{{item.HSRevision}}</td><td>{{item.NTMCode}}</td><td>{{item.NTMComment}}</td><td>{{item.NTMRevision}}</td></tr></tbody></table></div><div class=\"col-md-12\"><p>T\\u1ED5ng s\\u1ED1 bi\\u1EC7n ph\\xE1p: {{vm.totalNTM}}</p><p>Ph\\xE2n lo\\u1EA1i c\\xE1c bi\\u1EC7n ph\\xE1p</p><p ng-repeat=\"item in vm.lstMeansuerBP\">{{item.Code + \\': \\' + item.Sum}}</p><ul uib-pagination total-items=\"vm.totalNTM\" ng-model=\"vm.pageNTM\" max-size=\"5\" class=\"pagination-sm\" ng-change=\"vm.getMeansuer()\" items-per-page=\"12\" boundary-links=\"true\" rotate=\"true\"></ul></div></div></div></div>');\n$templateCache.put('app/entities/store/store.html','<div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group\"><label for=\"city\" class=\"col-sm-4 control-label\">T\\u1EC9nh/Th\\xE0nh ph\\u1ED1</label><div class=\"col-sm-8 input-group\"><!-- <input type=\"text\" class=\"form-control\" id=\"city\" name=\"city\" ng-model=\"vm.dataSearch.city\"> --><!-- <input type=\"text\" class=\"form-control\" name=\"city\"\\r\\n                            ng-model=\"vm.dataSearch.city_name\" uib-typeahead=\"item.CityName as (item.CityCode +\\' - \\'+ item.CityName) for item in vm.loadSuggestCity($viewValue)\" \\r\\n                            typeahead-on-select= \"vm.selestSuggestCity($item, $model, $label, $event)\" /> --><select class=\"form-control\" ng-model=\"vm.dataSearch.city_code\" ng-options=\"item.CityCode as (item.CityName) for item in vm.lstCity\" ng-change=\"vm.citySelected()\"></select></div></div><div class=\"form-group\"><label for=\"district\" class=\"col-sm-4 control-label\">Qu\\u1EADn/Huy\\u1EC7n</label><div class=\"col-sm-8 input-group\"><!-- <input type=\"text\" class=\"form-control\" id=\"district\" name=\"district\" ng-model=\"vm.dataSearch.district\"> --><!-- <input type=\"text\" class=\"form-control\" name=\"district_name\"\\r\\n                            ng-model=\"vm.dataSearch.district_name\" uib-typeahead=\"item.DistrictName as (item.DistrictCode +\\' - \\'+ item.DistrictName) for item in vm.loadSuggestDistrict($viewValue)\" \\r\\n                            typeahead-on-select= \"vm.selestSuggestDistrict($item, $model, $label, $event)\" /> --><select class=\"form-control\" ng-model=\"vm.dataSearch.district_code\" ng-options=\"item.DistrictCode as (item.DistrictName) for item in vm.lstDistrict\" ng-change=\"vm.districtSelected()\"></select></div></div><div class=\"form-group\"><label for=\"district\" class=\"col-sm-4 control-label\">Ph\\u01B0\\u1EDDng/X\\xE3</label><div class=\"col-sm-8 input-group\"><!-- <input type=\"text\" class=\"form-control\" name=\"ward_name\"\\r\\n                            ng-model=\"vm.dataSearch.ward_name\" uib-typeahead=\"item.WardName as (item.WardCode +\\' - \\'+ item.WardName) for item in vm.loadSuggestWard($viewValue)\" \\r\\n                            typeahead-on-select= \"vm.selestSuggestWard($item, $model, $label, $event)\" /> --><select class=\"form-control\" ng-model=\"vm.dataSearch.ward_code\" ng-change=\"vm.wardSelected()\"><option ng-repeat=\"item in vm.lstWard\" value=\"{{item.WardCode}}\">{{item.WardName}}</option></select></div></div><div class=\"form-group\"><label for=\"name\" class=\"col-sm-4 control-label\"></label><button class=\"btn btn-flat btn-success\" ng-click=\"vm.searchStore()\"><i class=\"fa fa-search\"></i> <span style=\"text-transform: uppercase\">t\\xECm ki\\u1EBFm</span></button></div></div></div><div class=\"row\"><div class=\"col-md-12\"><ng-map zoom=\"13\" center=\"{{vm.center}}\" style=\"height:600px\"><!-- <marker ng-repeat=\"item in vm.lstStore\" position=\"{{item.adress}}\"></marker> --><kml-layer url=\"{{vm.url}}\"><!-- <custom-marker id=\"foo\" ng-repeat=\"item in vm.lstStore\" position=\"{{item.adress}}\" on-click=\"vm.calculateDistance(item, item.adress)\"> --><custom-marker id=\"foo\" ng-repeat=\"item in vm.lstStore\" position=\"{{item.adress}}\"><b>{{item.name}}</b><br><!-- <span>{{item.adress}}</span></br>\\r\\n                    <span>{{item.information}}</span> --> <span class=\"arrow-down\"></span></custom-marker></kml-layer></ng-map></div></div><div class=\"box box-success\" style=\"margin-top: 40px\" ng-hide=\"vm.userRole.toUpperCase() == \\'FREE USER\\' || vm.userRole.toUpperCase() == \\'\\'\"><div class=\"row\"><div class=\"col-md-12\"><h3 style=\"text-align: center;text-transform: uppercase; font-weight: bold\">Ph\\xE2n t\\xEDch c\\u01A1 s\\u1EDF kinh doanh ng\\xE0nh {{vm.industryName}}</h3><!-- <span>T\\u1EC9nh/Th\\xE0nh ph\\u1ED1 </span><span>{{vm.dataSearch.city_name}}</span><span> - Qu\\u1EADn/Huy\\u1EC7n </span><span>{{vm.dataSearch.district_name}}</span><span> - Ph\\u01B0\\u1EDDng/X\\xE3 </span><span>{{vm.dataSearch.ward_name}}</span> --><p style=\"text-align: center;text-transform: uppercase; font-weight: bold\"><span>{{vm.dataSearch.city_name}}</span> <span ng-if=\"vm.dataSearch.district_name\">- </span><span>{{vm.dataSearch.district_name}}</span> <span ng-if=\"vm.dataSearch.ward_name\">- </span><span>{{vm.dataSearch.ward_name}}</span></p></div><div class=\"col-md-12\"><table id=\"dataTable\" class=\"table table-hover dataTable\"><thead><tr><th>Ti\\xEAu ch\\xED</th><th ng-if=\"!vm.dataSearch.city_name\">C\\u1EA3 n\\u01B0\\u1EDBc</th><th ng-if=\"vm.dataSearch.city_name\">{{vm.dataSearch.city_name}}</th><th ng-if=\"vm.dataSearch.district_name\">{{vm.dataSearch.district_name}}</th><th ng-if=\"vm.dataSearch.ward_name\">{{vm.dataSearch.ward_name}}</th></tr></thead><tbody><tr ng-repeat=\"item in vm.lstCount\" ng-if=\"item.CT == 1\"><td>S\\u1ED1 c\\u01A1 s\\u1EDF:</td><td ng-if=\"!vm.dataSearch.city_name\">{{item.Total | number }} CS</td><td ng-if=\"vm.dataSearch.city_name\">{{item.City | number}} CS</td><td ng-if=\"vm.dataSearch.district_name\">{{item.District | number }} CS</td><td ng-if=\"vm.dataSearch.ward_name\">{{item.Ward | number}} CS</td></tr><tr ng-repeat=\"item in vm.lstCount\" ng-if=\"item.CT == 2\"><td>M\\u1EADt \\u0111\\u1ED9 c\\u01A1 s\\u1EDF/di\\u1EC7n t\\xEDch:</td><td ng-if=\"!vm.dataSearch.city_name\">{{item.Total | number:6}} CS/KM2</td><td ng-if=\"vm.dataSearch.city_name\">{{item.City | number:6}} CS/KM2</td><td ng-if=\"vm.dataSearch.district_name\">{{item.District | number:6 }} CS/KM2</td><td ng-if=\"vm.dataSearch.ward_name\">{{item.Ward | number:6}} CS/KM2</td></tr><tr ng-repeat=\"item in vm.lstCount\" ng-if=\"item.CT == 3\"><td>M\\u1EADt \\u0111\\u1ED9 c\\u01A1 s\\u1EDF/d\\xE2n s\\u1ED1:</td><td ng-if=\"!vm.dataSearch.city_name\">{{item.Total | number:6 }} CS/NN</td><td ng-if=\"vm.dataSearch.city_name\">{{item.City | number:6}} CS/NN</td><td ng-if=\"vm.dataSearch.district_name\">{{item.District | number:6 }} CS/NN</td><td ng-if=\"vm.dataSearch.ward_name\">{{item.Ward | number:6}} CS/NN</td></tr></tbody></table></div></div></div><div class=\"box box-success\" ng-hide=\"vm.userRole.toUpperCase() == \\'FREE USER\\' || vm.userRole.toUpperCase() == \\'\\'\"><div class=\"row\"><div class=\"col-md-12\"><h4 style=\"text-align: center; text-transform: uppercase; font-weight: bold\">Danh s\\xE1ch c\\u01A1 s\\u1EDF kinh doanh ng\\xE0nh {{vm.industryName}}</h4></div><div class=\"col-md-12\"><table id=\"dataTable\" class=\"table table-hover dataTable\"><thead><tr><th>M\\xE3</th><th>T\\xEAn c\\u01A1 s\\u1EDF</th><th>H\\xECnh th\\u1EE9c</th><th>Th\\xF4ng tin</th><th>\\u0110\\u1ECBa ch\\u1EC9</th><th>M\\xE3 Ph\\u01B0\\u1EDDng/X\\xE3</th><th>M\\xE3 Cat</th><!-- <th></th> --><th>Ghi ch\\xFA</th></tr></thead><tbody><tr ng-repeat=\"item in vm.lstStorePage track by $index\"><td>{{item.code}}</td><td>{{item.name}}</td><td>{{item.type}}</td><td>{{item.information}}</td><td>{{item.adress | words:20}}</td><td>{{item.ward_code}}</td><td>{{item.category_code}}</td><!-- <td>{{item.type}}</td> --><td>{{item.note}}</td></tr></tbody></table></div><div class=\"col-md-12\"><ul uib-pagination total-items=\"vm.total\" ng-model=\"vm.page\" max-size=\"5\" class=\"pagination-sm\" ng-change=\"vm.searchStorePage()\" items-per-page=\"12\" boundary-links=\"true\" rotate=\"true\"></ul></div></div></div><div class=\"box box-success\" ng-hide=\"vm.userRole.toUpperCase() == \\'FREE USER\\' || vm.userRole.toUpperCase() == \\'\\'\"><div class=\"row\"><div class=\"col-md-12\"><h4 style=\"text-align: center; text-transform: uppercase; font-weight: bold\">X\\xE1c \\u0111\\u1ECBnh kho\\u1EA3ng c\\xE1ch gi\\u1EEFa c\\xE1c c\\u01A1 s\\u1EDF kinh doanh</h4><button class=\"btn btn-flat btn-success btn-center\" ng-click=\"vm.startStop(1)\" ng-if=\"vm.isStart != 1\"><span style=\"text-transform: uppercase; font-weight: bold\">B\\u1EAFt \\u0111\\u1EA7u</span></button><br><p></p></div><div class=\"col-md-4 col-md-offset-3\" ng-if=\"vm.isStart == 1\"><div class=\"form-group\"><label for=\"city\" class=\"col-sm-4 control-label\">\\u0110i\\u1EC3m b\\u1EAFt \\u0111\\u1EA7u</label><div class=\"col-sm-8 input-group\"><select class=\"form-control\" ng-model=\"vm.startItem\"><option ng-repeat=\"item in vm.lstStore\" value=\"{{item.id}}\">{{item.name}}</option></select></div></div><div class=\"form-group\"><label for=\"city\" class=\"col-sm-4 control-label\">\\u0110i\\u1EC3m \\u0111\\u1EBFn</label><div class=\"col-sm-8 input-group\"><select class=\"form-control\" ng-model=\"vm.endItem\"><option ng-repeat=\"item in vm.lstStore\" value=\"{{item.id}}\" ng-if=\"item.id != vm.startItem\">{{item.name}}</option></select></div></div></div><div class=\"col-md-3\" ng-if=\"vm.isStart == 1\"><button class=\"btn btn-flat btn-success\" ng-click=\"vm.calculateDistance()\" id=\"btn_kq\"><span style=\"text-transform: uppercase;  font-weight: bold\">Xem k\\u1EBFt qu\\u1EA3</span></button></div><div class=\"col-md-8 col-md-offset-3\" ng-if=\"vm.isStart == 1\"><div class=\"form-group\"><label for=\"city\" class=\"col-sm-2 control-label\">K\\u1EBFt qu\\u1EA3</label><div class=\"col-sm-10 input-group\"><span>Kho\\u1EA3ng c\\xE1ch gi\\u1EEFa {{vm.startTitle}} v\\xE0 {{vm.endTitle}} l\\xE0 {{vm.drive}}</span><br><span>Th\\u1EDDi gian \\u0111i l\\xE0 {{vm.minuteDrive}}</span></div></div></div><div class=\"col-md-12\" ng-if=\"vm.isStart != 0\"><table class=\"table table-hover table-bordered table-border-green\"><thead><tr><th>L\\u1EA7n t\\xEDnh</th><th></th><th>T\\xEAn c\\u01A1 s\\u1EDF</th><th>Th\\xF4ng tin</th><th>\\u0110\\u1ECBa ch\\u1EC9</th><th>Kho\\u1EA3ng c\\xE1ch</th><th>Th\\u1EDDi gian di chuy\\u1EC3n</th></tr></thead><tbody><tr ng-repeat=\"item in vm.lstCalculate track by $index\"><td rowspan=\"2\" style=\"text-align: center\" ng-if=\"item.isStart\">{{($index + 2)/2}}</td><td ng-if=\"item.isStart\">Th\\xF4ng tin \\u0111i\\u1EC3m b\\u1EAFt \\u0111\\u1EA7u</td><td ng-if=\"!item.isStart\">Th\\xF4ng tin \\u0111i\\u1EC3m k\\u1EBFt th\\xFAc</td><td>{{item.name}}</td><td>{{item.information}}</td><td>{{item.adress}}</td><td rowspan=\"2\" style=\"text-align: center\" ng-if=\"item.isStart\">{{item.drive}}</td><td rowspan=\"2\" style=\"text-align: center\" ng-if=\"item.isStart\">{{item.minuteDrive}}</td></tr><!-- <tr ng-repeat=\"item in vm.lstCalculate\">\\r\\n                        <td>Th\\xF4ng tin \\u0111i\\u1EC3m k\\u1EBFt th\\xFAc</td>\\r\\n                        <td>{{item.name}}</td>\\r\\n                        <td>{{item.information}}</td>\\r\\n                        <td>{{item.adress}}</td>\\r\\n                    </tr> --></tbody></table></div><div class=\"col-md-12\" ng-if=\"vm.isStart == 1\"><div class=\"form-group\" style=\"display: flex; justify-content: center\"><button class=\"btn btn-flat btn-success\" ng-click=\"vm.continute()\"><span style=\"text-transform: uppercase;  font-weight: bold\">Ti\\u1EBFp t\\u1EE5c</span></button> <button class=\"btn btn-flat btn-success\" style=\"margin-left: 15px\" ng-click=\"vm.startStop(2)\"><span style=\"text-transform: uppercase;  font-weight: bold\">K\\u1EBFt th\\xFAc</span></button></div></div></div></div>');\n$templateCache.put('app/layouts/error/accessdenied.html','<div ng-cloak><div class=\"row\"><div class=\"col-md-4\"><span class=\"hipster img-responsive img-rounded\"></span></div><div class=\"col-md-8\"><h1 data-translate=\"error.title\">Error Page!</h1><div class=\"alert alert-danger\" data-translate=\"error.http.403\">You are not authorized to access this page.</div></div></div></div>');\n$templateCache.put('app/layouts/error/error.html','<div ng-cloak><div class=\"row\"><div class=\"col-md-4\"><span class=\"hipster img-responsive img-rounded\"></span></div><div class=\"col-md-8\"><h1 data-translate=\"error.title\">Error Page!</h1><div ng-show=\"errorMessage\"><div class=\"alert alert-danger\">{{errorMessage}}</div></div></div></div></div>');\n$templateCache.put('app/layouts/navbar/navbar.html','<nav class=\"navbar navbar-default\" role=\"navigation\" ng-if=\"vm.isShowNav\"><div class=\"container-fluid\"><div class=\"navbar-collapse\"><ul class=\"nav navbar-nav navbar-left\"><li><a ui-sref=\"home\"><span class=\"hidden-sm\">Home</span></a></li><li><a ng-click=\"vm.stateGo(\\'legislation\\')\"><span class=\"hidden-sm\">Non Tariff Measures</span></a></li><li><a ng-click=\"vm.stateGo(\\'store\\')\"><span class=\"hidden-sm\">C\\u01A1 s\\u1EDF kinh doanh</span></a></li></ul></div><div class=\"nav-right\"><ul><li><p>{{vm.account.FirstName + \\' \\' + vm.account.LastName}}</p></li><li><button class=\"btn btn-flat btn-success\" ng-click=\"vm.logout()\" ng-if=\"vm.account.ID\"><span>\\u0110\\u0103ng xu\\u1EA5t</span></button></li><li><button class=\"btn btn-flat btn-success\" ng-click=\"vm.login()\" ng-if=\"!vm.account.ID\"><span>\\u0110\\u0103ng nh\\u1EADp</span></button></li><li><button class=\"btn btn-flat btn-success\" ng-click=\"vm.register()\" ng-if=\"!vm.account.ID\"><span>\\u0110\\u0103ng k\\xFD</span></button></li></ul></div></div></nav>');\n$templateCache.put('app/account/reset/finish/reset.finish.html','<div><div class=\"row\"><div class=\"col-md-4 col-md-offset-4\"><h1 data-translate=\"reset.finish.title\">Reset password</h1><div class=\"alert alert-danger\" data-translate=\"reset.finish.messages.keymissing\" ng-show=\"vm.keyMissing\"><strong>The password reset key is missing.</strong></div><div class=\"alert alert-warning\" ng-hide=\"vm.success || vm.keyMissing\"><p data-translate=\"reset.finish.messages.info\">Choose a new password</p></div><div class=\"alert alert-danger\" ng-show=\"vm.error\"><p data-translate=\"reset.finish.messages.error\">Your password couldn\\'t be reset. Remember a password request is only valid for 24 hours.</p></div><div class=\"alert alert-success\" ng-show=\"vm.success\"><p data-translate=\"reset.finish.messages.success\" translate-compile><strong>Your password has been reset.</strong> Please <a class=\"alert-link\" href=\"\" ng-click=\"vm.login()\">sign in</a>.</p></div><div class=\"alert alert-danger\" ng-show=\"vm.doNotMatch\" data-translate=\"global.messages.error.dontmatch\">The password and its confirmation do not match!</div><div ng-hide=\"vm.keyMissing\"><form ng-show=\"!vm.success\" name=\"form\" role=\"form\" novalidate ng-submit=\"vm.finishReset()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"password\" data-translate=\"global.form.newpassword\">New password</label><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"{{\\'global.form.newpassword.placeholder\\' | translate}}\" ng-model=\"vm.resetAccount.password\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.password.$dirty && form.password.$invalid\"><p class=\"help-block\" ng-show=\"form.password.$error.required\" data-translate=\"global.messages.validate.newpassword.required\">Your password is required.</p><p class=\"help-block\" ng-show=\"form.password.$error.minlength\" data-translate=\"global.messages.validate.newpassword.minlength\">Your password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.password.$error.maxlength\" data-translate=\"global.messages.validate.newpassword.maxlength\">Your password cannot be longer than 50 characters.</p></div><password-strength-bar password-to-check=\"vm.resetAccount.password\"></password-strength-bar></div><div class=\"form-group\"><label class=\"control-label\" for=\"confirmPassword\" data-translate=\"global.form.confirmpassword\">New password confirmation</label><input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"{{\\'global.form.confirmpassword.placeholder\\' | translate}}\" ng-model=\"vm.confirmPassword\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.confirmPassword.$dirty && form.confirmPassword.$invalid\"><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.required\" data-translate=\"global.messages.validate.confirmpassword.required\">Your password confirmation is required.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.minlength\" data-translate=\"global.messages.validate.confirmpassword.minlength\">Your password confirmation is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.maxlength\" data-translate=\"global.messages.validate.confirmpassword.maxlength\">Your password confirmation cannot be longer than 50 characters.</p></div></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"reset.finish.form.button\">Reset Password</button></form></div></div></div></div>');\n$templateCache.put('app/account/reset/request/reset.request.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h1 data-translate=\"reset.request.title\">Reset your password</h1><div class=\"alert alert-danger\" data-translate=\"reset.request.messages.notfound\" ng-show=\"vm.errorEmailNotExists\"><strong>Email address isn\\'t registered!</strong> Please check and try again.</div><div class=\"alert alert-warning\" ng-hide=\"vm.success\"><p data-translate=\"reset.request.messages.info\">Enter the email address you used to register.</p></div><div class=\"alert alert-success\" ng-show=\"vm.success === \\'OK\\'\"><p data-translate=\"reset.request.messages.success\">Check your emails for details on how to reset your password.</p></div><form ng-show=\"!vm.success\" name=\"form\" role=\"form\" novalidate ng-submit=\"vm.requestReset()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"email\" data-translate=\"global.form.email\">Email</label><input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"{{\\'global.form.email.placeholder\\' | translate}}\" ng-model=\"vm.resetAccount.email\" ng-minlength=\"5\" ng-maxlength=\"100\" required><div ng-show=\"form.email.$dirty && form.email.$invalid\"><p class=\"help-block\" ng-show=\"form.email.$error.required\" data-translate=\"global.messages.validate.email.required\">Your email is required.</p><p class=\"help-block\" ng-show=\"form.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">Your email is invalid.</p><p class=\"help-block\" ng-show=\"form.email.$error.minlength\" data-translate=\"global.messages.validate.email.minlength\">Your email is required to be at least 5 characters.</p><p class=\"help-block\" ng-show=\"form.email.$error.maxlength\" data-translate=\"global.messages.validate.email.maxlength\">Your email cannot be longer than 100 characters.</p></div></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"reset.request.form.button\">Reset</button></form></div></div></div>');}]);})();"],"sourceRoot":"/source/"}